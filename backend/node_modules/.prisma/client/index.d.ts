
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model proveedores
 * 
 */
export type proveedores = $Result.DefaultSelection<Prisma.$proveedoresPayload>
/**
 * Model clients
 * 
 */
export type clients = $Result.DefaultSelection<Prisma.$clientsPayload>
/**
 * Model abastecimientos
 * 
 */
export type abastecimientos = $Result.DefaultSelection<Prisma.$abastecimientosPayload>
/**
 * Model tipos_monedas
 * 
 */
export type tipos_monedas = $Result.DefaultSelection<Prisma.$tipos_monedasPayload>
/**
 * Model condiciones_pagos
 * 
 */
export type condiciones_pagos = $Result.DefaultSelection<Prisma.$condiciones_pagosPayload>
/**
 * Model ventas
 * 
 */
export type ventas = $Result.DefaultSelection<Prisma.$ventasPayload>
/**
 * Model reportes
 * 
 */
export type reportes = $Result.DefaultSelection<Prisma.$reportesPayload>
/**
 * Model tipos_reporte
 * 
 */
export type tipos_reporte = $Result.DefaultSelection<Prisma.$tipos_reportePayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;

  /**
   * `prisma.proveedores`: Exposes CRUD operations for the **proveedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedores
    * const proveedores = await prisma.proveedores.findMany()
    * ```
    */
  get proveedores(): Prisma.proveedoresDelegate<ExtArgs>;

  /**
   * `prisma.clients`: Exposes CRUD operations for the **clients** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.clients.findMany()
    * ```
    */
  get clients(): Prisma.clientsDelegate<ExtArgs>;

  /**
   * `prisma.abastecimientos`: Exposes CRUD operations for the **abastecimientos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Abastecimientos
    * const abastecimientos = await prisma.abastecimientos.findMany()
    * ```
    */
  get abastecimientos(): Prisma.abastecimientosDelegate<ExtArgs>;

  /**
   * `prisma.tipos_monedas`: Exposes CRUD operations for the **tipos_monedas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipos_monedas
    * const tipos_monedas = await prisma.tipos_monedas.findMany()
    * ```
    */
  get tipos_monedas(): Prisma.tipos_monedasDelegate<ExtArgs>;

  /**
   * `prisma.condiciones_pagos`: Exposes CRUD operations for the **condiciones_pagos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Condiciones_pagos
    * const condiciones_pagos = await prisma.condiciones_pagos.findMany()
    * ```
    */
  get condiciones_pagos(): Prisma.condiciones_pagosDelegate<ExtArgs>;

  /**
   * `prisma.ventas`: Exposes CRUD operations for the **ventas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.ventas.findMany()
    * ```
    */
  get ventas(): Prisma.ventasDelegate<ExtArgs>;

  /**
   * `prisma.reportes`: Exposes CRUD operations for the **reportes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reportes
    * const reportes = await prisma.reportes.findMany()
    * ```
    */
  get reportes(): Prisma.reportesDelegate<ExtArgs>;

  /**
   * `prisma.tipos_reporte`: Exposes CRUD operations for the **tipos_reporte** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipos_reportes
    * const tipos_reportes = await prisma.tipos_reporte.findMany()
    * ```
    */
  get tipos_reporte(): Prisma.tipos_reporteDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.13.0
   * Query Engine version: b9a39a7ee606c28e3455d0fd60e78c3ba82b1a2b
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    users: 'users',
    proveedores: 'proveedores',
    clients: 'clients',
    abastecimientos: 'abastecimientos',
    tipos_monedas: 'tipos_monedas',
    condiciones_pagos: 'condiciones_pagos',
    ventas: 'ventas',
    reportes: 'reportes',
    tipos_reporte: 'tipos_reporte'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'users' | 'proveedores' | 'clients' | 'abastecimientos' | 'tipos_monedas' | 'condiciones_pagos' | 'ventas' | 'reportes' | 'tipos_reporte'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      proveedores: {
        payload: Prisma.$proveedoresPayload<ExtArgs>
        fields: Prisma.proveedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proveedoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proveedoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findFirst: {
            args: Prisma.proveedoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proveedoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findMany: {
            args: Prisma.proveedoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          create: {
            args: Prisma.proveedoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          createMany: {
            args: Prisma.proveedoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.proveedoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          update: {
            args: Prisma.proveedoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          deleteMany: {
            args: Prisma.proveedoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.proveedoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.proveedoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          aggregate: {
            args: Prisma.ProveedoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateProveedores>
          }
          groupBy: {
            args: Prisma.proveedoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ProveedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.proveedoresCountArgs<ExtArgs>,
            result: $Utils.Optional<ProveedoresCountAggregateOutputType> | number
          }
        }
      }
      clients: {
        payload: Prisma.$clientsPayload<ExtArgs>
        fields: Prisma.clientsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clientsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clientsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findFirst: {
            args: Prisma.clientsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clientsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findMany: {
            args: Prisma.clientsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          create: {
            args: Prisma.clientsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          createMany: {
            args: Prisma.clientsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.clientsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          update: {
            args: Prisma.clientsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          deleteMany: {
            args: Prisma.clientsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.clientsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.clientsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          aggregate: {
            args: Prisma.ClientsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateClients>
          }
          groupBy: {
            args: Prisma.clientsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ClientsGroupByOutputType>[]
          }
          count: {
            args: Prisma.clientsCountArgs<ExtArgs>,
            result: $Utils.Optional<ClientsCountAggregateOutputType> | number
          }
        }
      }
      abastecimientos: {
        payload: Prisma.$abastecimientosPayload<ExtArgs>
        fields: Prisma.abastecimientosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.abastecimientosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.abastecimientosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          findFirst: {
            args: Prisma.abastecimientosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.abastecimientosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          findMany: {
            args: Prisma.abastecimientosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>[]
          }
          create: {
            args: Prisma.abastecimientosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          createMany: {
            args: Prisma.abastecimientosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.abastecimientosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          update: {
            args: Prisma.abastecimientosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          deleteMany: {
            args: Prisma.abastecimientosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.abastecimientosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.abastecimientosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$abastecimientosPayload>
          }
          aggregate: {
            args: Prisma.AbastecimientosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAbastecimientos>
          }
          groupBy: {
            args: Prisma.abastecimientosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AbastecimientosGroupByOutputType>[]
          }
          count: {
            args: Prisma.abastecimientosCountArgs<ExtArgs>,
            result: $Utils.Optional<AbastecimientosCountAggregateOutputType> | number
          }
        }
      }
      tipos_monedas: {
        payload: Prisma.$tipos_monedasPayload<ExtArgs>
        fields: Prisma.tipos_monedasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipos_monedasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipos_monedasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          findFirst: {
            args: Prisma.tipos_monedasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipos_monedasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          findMany: {
            args: Prisma.tipos_monedasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>[]
          }
          create: {
            args: Prisma.tipos_monedasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          createMany: {
            args: Prisma.tipos_monedasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tipos_monedasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          update: {
            args: Prisma.tipos_monedasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          deleteMany: {
            args: Prisma.tipos_monedasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tipos_monedasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tipos_monedasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_monedasPayload>
          }
          aggregate: {
            args: Prisma.Tipos_monedasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipos_monedas>
          }
          groupBy: {
            args: Prisma.tipos_monedasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipos_monedasGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipos_monedasCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipos_monedasCountAggregateOutputType> | number
          }
        }
      }
      condiciones_pagos: {
        payload: Prisma.$condiciones_pagosPayload<ExtArgs>
        fields: Prisma.condiciones_pagosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.condiciones_pagosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.condiciones_pagosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          findFirst: {
            args: Prisma.condiciones_pagosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.condiciones_pagosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          findMany: {
            args: Prisma.condiciones_pagosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>[]
          }
          create: {
            args: Prisma.condiciones_pagosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          createMany: {
            args: Prisma.condiciones_pagosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.condiciones_pagosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          update: {
            args: Prisma.condiciones_pagosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          deleteMany: {
            args: Prisma.condiciones_pagosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.condiciones_pagosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.condiciones_pagosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$condiciones_pagosPayload>
          }
          aggregate: {
            args: Prisma.Condiciones_pagosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCondiciones_pagos>
          }
          groupBy: {
            args: Prisma.condiciones_pagosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Condiciones_pagosGroupByOutputType>[]
          }
          count: {
            args: Prisma.condiciones_pagosCountArgs<ExtArgs>,
            result: $Utils.Optional<Condiciones_pagosCountAggregateOutputType> | number
          }
        }
      }
      ventas: {
        payload: Prisma.$ventasPayload<ExtArgs>
        fields: Prisma.ventasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ventasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ventasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          findFirst: {
            args: Prisma.ventasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ventasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          findMany: {
            args: Prisma.ventasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>[]
          }
          create: {
            args: Prisma.ventasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          createMany: {
            args: Prisma.ventasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.ventasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          update: {
            args: Prisma.ventasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          deleteMany: {
            args: Prisma.ventasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ventasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ventasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          aggregate: {
            args: Prisma.VentasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateVentas>
          }
          groupBy: {
            args: Prisma.ventasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<VentasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ventasCountArgs<ExtArgs>,
            result: $Utils.Optional<VentasCountAggregateOutputType> | number
          }
        }
      }
      reportes: {
        payload: Prisma.$reportesPayload<ExtArgs>
        fields: Prisma.reportesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          findFirst: {
            args: Prisma.reportesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          findMany: {
            args: Prisma.reportesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>[]
          }
          create: {
            args: Prisma.reportesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          createMany: {
            args: Prisma.reportesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.reportesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          update: {
            args: Prisma.reportesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          deleteMany: {
            args: Prisma.reportesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.reportesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.reportesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          aggregate: {
            args: Prisma.ReportesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateReportes>
          }
          groupBy: {
            args: Prisma.reportesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ReportesGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportesCountArgs<ExtArgs>,
            result: $Utils.Optional<ReportesCountAggregateOutputType> | number
          }
        }
      }
      tipos_reporte: {
        payload: Prisma.$tipos_reportePayload<ExtArgs>
        fields: Prisma.tipos_reporteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipos_reporteFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipos_reporteFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          findFirst: {
            args: Prisma.tipos_reporteFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipos_reporteFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          findMany: {
            args: Prisma.tipos_reporteFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>[]
          }
          create: {
            args: Prisma.tipos_reporteCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          createMany: {
            args: Prisma.tipos_reporteCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tipos_reporteDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          update: {
            args: Prisma.tipos_reporteUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          deleteMany: {
            args: Prisma.tipos_reporteDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tipos_reporteUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tipos_reporteUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipos_reportePayload>
          }
          aggregate: {
            args: Prisma.Tipos_reporteAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipos_reporte>
          }
          groupBy: {
            args: Prisma.tipos_reporteGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipos_reporteGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipos_reporteCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipos_reporteCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    proveedores: number
    clients: number
    abastecimientos: number
    ventas: number
    reportes: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedores?: boolean | UsersCountOutputTypeCountProveedoresArgs
    clients?: boolean | UsersCountOutputTypeCountClientsArgs
    abastecimientos?: boolean | UsersCountOutputTypeCountAbastecimientosArgs
    ventas?: boolean | UsersCountOutputTypeCountVentasArgs
    reportes?: boolean | UsersCountOutputTypeCountReportesArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountProveedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedoresWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountClientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAbastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abastecimientosWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportesWhereInput
  }


  /**
   * Count Type ProveedoresCountOutputType
   */

  export type ProveedoresCountOutputType = {
    abastecimientos: number
  }

  export type ProveedoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abastecimientos?: boolean | ProveedoresCountOutputTypeCountAbastecimientosArgs
  }

  // Custom InputTypes
  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedoresCountOutputType
     */
    select?: ProveedoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeCountAbastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abastecimientosWhereInput
  }


  /**
   * Count Type ClientsCountOutputType
   */

  export type ClientsCountOutputType = {
    ventas: number
  }

  export type ClientsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | ClientsCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientsCountOutputType
     */
    select?: ClientsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
  }


  /**
   * Count Type Tipos_monedasCountOutputType
   */

  export type Tipos_monedasCountOutputType = {
    abastecimientos: number
    ventas: number
  }

  export type Tipos_monedasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abastecimientos?: boolean | Tipos_monedasCountOutputTypeCountAbastecimientosArgs
    ventas?: boolean | Tipos_monedasCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * Tipos_monedasCountOutputType without action
   */
  export type Tipos_monedasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipos_monedasCountOutputType
     */
    select?: Tipos_monedasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipos_monedasCountOutputType without action
   */
  export type Tipos_monedasCountOutputTypeCountAbastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abastecimientosWhereInput
  }

  /**
   * Tipos_monedasCountOutputType without action
   */
  export type Tipos_monedasCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
  }


  /**
   * Count Type Condiciones_pagosCountOutputType
   */

  export type Condiciones_pagosCountOutputType = {
    abastecimientos: number
    ventas: number
  }

  export type Condiciones_pagosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abastecimientos?: boolean | Condiciones_pagosCountOutputTypeCountAbastecimientosArgs
    ventas?: boolean | Condiciones_pagosCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * Condiciones_pagosCountOutputType without action
   */
  export type Condiciones_pagosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Condiciones_pagosCountOutputType
     */
    select?: Condiciones_pagosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Condiciones_pagosCountOutputType without action
   */
  export type Condiciones_pagosCountOutputTypeCountAbastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abastecimientosWhereInput
  }

  /**
   * Condiciones_pagosCountOutputType without action
   */
  export type Condiciones_pagosCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
  }


  /**
   * Count Type Tipos_reporteCountOutputType
   */

  export type Tipos_reporteCountOutputType = {
    reportes: number
  }

  export type Tipos_reporteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | Tipos_reporteCountOutputTypeCountReportesArgs
  }

  // Custom InputTypes
  /**
   * Tipos_reporteCountOutputType without action
   */
  export type Tipos_reporteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipos_reporteCountOutputType
     */
    select?: Tipos_reporteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipos_reporteCountOutputType without action
   */
  export type Tipos_reporteCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    user_id: number | null
    type_user: number | null
    active: number | null
  }

  export type UsersSumAggregateOutputType = {
    user_id: number | null
    type_user: number | null
    active: number | null
  }

  export type UsersMinAggregateOutputType = {
    user_id: number | null
    username: string | null
    firstname: string | null
    lastname: string | null
    password: string | null
    email: string | null
    date: Date | null
    type_user: number | null
    active: number | null
  }

  export type UsersMaxAggregateOutputType = {
    user_id: number | null
    username: string | null
    firstname: string | null
    lastname: string | null
    password: string | null
    email: string | null
    date: Date | null
    type_user: number | null
    active: number | null
  }

  export type UsersCountAggregateOutputType = {
    user_id: number
    username: number
    firstname: number
    lastname: number
    password: number
    email: number
    date: number
    type_user: number
    active: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    user_id?: true
    type_user?: true
    active?: true
  }

  export type UsersSumAggregateInputType = {
    user_id?: true
    type_user?: true
    active?: true
  }

  export type UsersMinAggregateInputType = {
    user_id?: true
    username?: true
    firstname?: true
    lastname?: true
    password?: true
    email?: true
    date?: true
    type_user?: true
    active?: true
  }

  export type UsersMaxAggregateInputType = {
    user_id?: true
    username?: true
    firstname?: true
    lastname?: true
    password?: true
    email?: true
    date?: true
    type_user?: true
    active?: true
  }

  export type UsersCountAggregateInputType = {
    user_id?: true
    username?: true
    firstname?: true
    lastname?: true
    password?: true
    email?: true
    date?: true
    type_user?: true
    active?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    user_id: number
    username: string
    firstname: string
    lastname: string
    password: string
    email: string | null
    date: Date | null
    type_user: number
    active: number | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    username?: boolean
    firstname?: boolean
    lastname?: boolean
    password?: boolean
    email?: boolean
    date?: boolean
    type_user?: boolean
    active?: boolean
    proveedores?: boolean | users$proveedoresArgs<ExtArgs>
    clients?: boolean | users$clientsArgs<ExtArgs>
    abastecimientos?: boolean | users$abastecimientosArgs<ExtArgs>
    ventas?: boolean | users$ventasArgs<ExtArgs>
    reportes?: boolean | users$reportesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    user_id?: boolean
    username?: boolean
    firstname?: boolean
    lastname?: boolean
    password?: boolean
    email?: boolean
    date?: boolean
    type_user?: boolean
    active?: boolean
  }


  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedores?: boolean | users$proveedoresArgs<ExtArgs>
    clients?: boolean | users$clientsArgs<ExtArgs>
    abastecimientos?: boolean | users$abastecimientosArgs<ExtArgs>
    ventas?: boolean | users$ventasArgs<ExtArgs>
    reportes?: boolean | users$reportesArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      proveedores: Prisma.$proveedoresPayload<ExtArgs>[]
      clients: Prisma.$clientsPayload<ExtArgs>[]
      abastecimientos: Prisma.$abastecimientosPayload<ExtArgs>[]
      ventas: Prisma.$ventasPayload<ExtArgs>[]
      reportes: Prisma.$reportesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: number
      username: string
      firstname: string
      lastname: string
      password: string
      email: string | null
      date: Date | null
      type_user: number
      active: number | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const usersWithUser_idOnly = await prisma.users.findMany({ select: { user_id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    proveedores<T extends users$proveedoresArgs<ExtArgs> = {}>(args?: Subset<T, users$proveedoresArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findMany'> | Null>;

    clients<T extends users$clientsArgs<ExtArgs> = {}>(args?: Subset<T, users$clientsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findMany'> | Null>;

    abastecimientos<T extends users$abastecimientosArgs<ExtArgs> = {}>(args?: Subset<T, users$abastecimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findMany'> | Null>;

    ventas<T extends users$ventasArgs<ExtArgs> = {}>(args?: Subset<T, users$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findMany'> | Null>;

    reportes<T extends users$reportesArgs<ExtArgs> = {}>(args?: Subset<T, users$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly user_id: FieldRef<"users", 'Int'>
    readonly username: FieldRef<"users", 'String'>
    readonly firstname: FieldRef<"users", 'String'>
    readonly lastname: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly date: FieldRef<"users", 'DateTime'>
    readonly type_user: FieldRef<"users", 'Int'>
    readonly active: FieldRef<"users", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }

  /**
   * users.proveedores
   */
  export type users$proveedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    where?: proveedoresWhereInput
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    cursor?: proveedoresWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * users.clients
   */
  export type users$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    cursor?: clientsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * users.abastecimientos
   */
  export type users$abastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    where?: abastecimientosWhereInput
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    cursor?: abastecimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * users.ventas
   */
  export type users$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    cursor?: ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * users.reportes
   */
  export type users$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    where?: reportesWhereInput
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    cursor?: reportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model proveedores
   */

  export type AggregateProveedores = {
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  export type ProveedoresAvgAggregateOutputType = {
    proveedor_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ProveedoresSumAggregateOutputType = {
    proveedor_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ProveedoresMinAggregateOutputType = {
    proveedor_id: number | null
    name: string | null
    rfc: string | null
    direccion: string | null
    tipo_situacion_fiscal: string | null
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ProveedoresMaxAggregateOutputType = {
    proveedor_id: number | null
    name: string | null
    rfc: string | null
    direccion: string | null
    tipo_situacion_fiscal: string | null
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ProveedoresCountAggregateOutputType = {
    proveedor_id: number
    name: number
    rfc: number
    direccion: number
    tipo_situacion_fiscal: number
    permiso: number
    phone: number
    email: number
    user_id: number
    date: number
    active: number
    _all: number
  }


  export type ProveedoresAvgAggregateInputType = {
    proveedor_id?: true
    user_id?: true
    active?: true
  }

  export type ProveedoresSumAggregateInputType = {
    proveedor_id?: true
    user_id?: true
    active?: true
  }

  export type ProveedoresMinAggregateInputType = {
    proveedor_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ProveedoresMaxAggregateInputType = {
    proveedor_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ProveedoresCountAggregateInputType = {
    proveedor_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
    _all?: true
  }

  export type ProveedoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to aggregate.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proveedores
    **/
    _count?: true | ProveedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedoresMaxAggregateInputType
  }

  export type GetProveedoresAggregateType<T extends ProveedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedores[P]>
      : GetScalarType<T[P], AggregateProveedores[P]>
  }




  export type proveedoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedoresWhereInput
    orderBy?: proveedoresOrderByWithAggregationInput | proveedoresOrderByWithAggregationInput[]
    by: ProveedoresScalarFieldEnum[] | ProveedoresScalarFieldEnum
    having?: proveedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedoresCountAggregateInputType | true
    _avg?: ProveedoresAvgAggregateInputType
    _sum?: ProveedoresSumAggregateInputType
    _min?: ProveedoresMinAggregateInputType
    _max?: ProveedoresMaxAggregateInputType
  }

  export type ProveedoresGroupByOutputType = {
    proveedor_id: number
    name: string
    rfc: string
    direccion: string | null
    tipo_situacion_fiscal: string
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number | null
    date: Date | null
    active: number | null
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  type GetProveedoresGroupByPayload<T extends proveedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
        }
      >
    >


  export type proveedoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proveedor_id?: boolean
    name?: boolean
    rfc?: boolean
    direccion?: boolean
    tipo_situacion_fiscal?: boolean
    permiso?: boolean
    phone?: boolean
    email?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
    users?: boolean | proveedores$usersArgs<ExtArgs>
    abastecimientos?: boolean | proveedores$abastecimientosArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectScalar = {
    proveedor_id?: boolean
    name?: boolean
    rfc?: boolean
    direccion?: boolean
    tipo_situacion_fiscal?: boolean
    permiso?: boolean
    phone?: boolean
    email?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
  }


  export type proveedoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | proveedores$usersArgs<ExtArgs>
    abastecimientos?: boolean | proveedores$abastecimientosArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $proveedoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proveedores"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      abastecimientos: Prisma.$abastecimientosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      proveedor_id: number
      name: string
      rfc: string
      direccion: string | null
      tipo_situacion_fiscal: string
      permiso: string | null
      phone: string | null
      email: string | null
      user_id: number | null
      date: Date | null
      active: number | null
    }, ExtArgs["result"]["proveedores"]>
    composites: {}
  }


  type proveedoresGetPayload<S extends boolean | null | undefined | proveedoresDefaultArgs> = $Result.GetResult<Prisma.$proveedoresPayload, S>

  type proveedoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<proveedoresFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProveedoresCountAggregateInputType | true
    }

  export interface proveedoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proveedores'], meta: { name: 'proveedores' } }
    /**
     * Find zero or one Proveedores that matches the filter.
     * @param {proveedoresFindUniqueArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends proveedoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresFindUniqueArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Proveedores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {proveedoresFindUniqueOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends proveedoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends proveedoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresFindFirstArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Proveedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends proveedoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedores
     * const proveedores = await prisma.proveedores.findMany()
     * 
     * // Get first 10 Proveedores
     * const proveedores = await prisma.proveedores.findMany({ take: 10 })
     * 
     * // Only select the `proveedor_id`
     * const proveedoresWithProveedor_idOnly = await prisma.proveedores.findMany({ select: { proveedor_id: true } })
     * 
    **/
    findMany<T extends proveedoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Proveedores.
     * @param {proveedoresCreateArgs} args - Arguments to create a Proveedores.
     * @example
     * // Create one Proveedores
     * const Proveedores = await prisma.proveedores.create({
     *   data: {
     *     // ... data to create a Proveedores
     *   }
     * })
     * 
    **/
    create<T extends proveedoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresCreateArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Proveedores.
     *     @param {proveedoresCreateManyArgs} args - Arguments to create many Proveedores.
     *     @example
     *     // Create many Proveedores
     *     const proveedores = await prisma.proveedores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends proveedoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Proveedores.
     * @param {proveedoresDeleteArgs} args - Arguments to delete one Proveedores.
     * @example
     * // Delete one Proveedores
     * const Proveedores = await prisma.proveedores.delete({
     *   where: {
     *     // ... filter to delete one Proveedores
     *   }
     * })
     * 
    **/
    delete<T extends proveedoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresDeleteArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Proveedores.
     * @param {proveedoresUpdateArgs} args - Arguments to update one Proveedores.
     * @example
     * // Update one Proveedores
     * const proveedores = await prisma.proveedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends proveedoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresUpdateArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Proveedores.
     * @param {proveedoresDeleteManyArgs} args - Arguments to filter Proveedores to delete.
     * @example
     * // Delete a few Proveedores
     * const { count } = await prisma.proveedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends proveedoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, proveedoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends proveedoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Proveedores.
     * @param {proveedoresUpsertArgs} args - Arguments to update or create a Proveedores.
     * @example
     * // Update or create a Proveedores
     * const proveedores = await prisma.proveedores.upsert({
     *   create: {
     *     // ... data to create a Proveedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedores we want to update
     *   }
     * })
    **/
    upsert<T extends proveedoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, proveedoresUpsertArgs<ExtArgs>>
    ): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresCountArgs} args - Arguments to filter Proveedores to count.
     * @example
     * // Count the number of Proveedores
     * const count = await prisma.proveedores.count({
     *   where: {
     *     // ... the filter for the Proveedores we want to count
     *   }
     * })
    **/
    count<T extends proveedoresCountArgs>(
      args?: Subset<T, proveedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedoresAggregateArgs>(args: Subset<T, ProveedoresAggregateArgs>): Prisma.PrismaPromise<GetProveedoresAggregateType<T>>

    /**
     * Group by Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proveedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proveedoresGroupByArgs['orderBy'] }
        : { orderBy?: proveedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proveedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proveedores model
   */
  readonly fields: proveedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proveedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proveedoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends proveedores$usersArgs<ExtArgs> = {}>(args?: Subset<T, proveedores$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    abastecimientos<T extends proveedores$abastecimientosArgs<ExtArgs> = {}>(args?: Subset<T, proveedores$abastecimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the proveedores model
   */ 
  interface proveedoresFieldRefs {
    readonly proveedor_id: FieldRef<"proveedores", 'Int'>
    readonly name: FieldRef<"proveedores", 'String'>
    readonly rfc: FieldRef<"proveedores", 'String'>
    readonly direccion: FieldRef<"proveedores", 'String'>
    readonly tipo_situacion_fiscal: FieldRef<"proveedores", 'String'>
    readonly permiso: FieldRef<"proveedores", 'String'>
    readonly phone: FieldRef<"proveedores", 'String'>
    readonly email: FieldRef<"proveedores", 'String'>
    readonly user_id: FieldRef<"proveedores", 'Int'>
    readonly date: FieldRef<"proveedores", 'DateTime'>
    readonly active: FieldRef<"proveedores", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * proveedores findUnique
   */
  export type proveedoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findUniqueOrThrow
   */
  export type proveedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findFirst
   */
  export type proveedoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findFirstOrThrow
   */
  export type proveedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findMany
   */
  export type proveedoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores create
   */
  export type proveedoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a proveedores.
     */
    data: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
  }

  /**
   * proveedores createMany
   */
  export type proveedoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores update
   */
  export type proveedoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a proveedores.
     */
    data: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
    /**
     * Choose, which proveedores to update.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores updateMany
   */
  export type proveedoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
  }

  /**
   * proveedores upsert
   */
  export type proveedoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the proveedores to update in case it exists.
     */
    where: proveedoresWhereUniqueInput
    /**
     * In case the proveedores found by the `where` argument doesn't exist, create a new proveedores with this data.
     */
    create: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
    /**
     * In case the proveedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
  }

  /**
   * proveedores delete
   */
  export type proveedoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter which proveedores to delete.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores deleteMany
   */
  export type proveedoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to delete
     */
    where?: proveedoresWhereInput
  }

  /**
   * proveedores.users
   */
  export type proveedores$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * proveedores.abastecimientos
   */
  export type proveedores$abastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    where?: abastecimientosWhereInput
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    cursor?: abastecimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * proveedores without action
   */
  export type proveedoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
  }


  /**
   * Model clients
   */

  export type AggregateClients = {
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  export type ClientsAvgAggregateOutputType = {
    client_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ClientsSumAggregateOutputType = {
    client_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ClientsMinAggregateOutputType = {
    client_id: number | null
    name: string | null
    rfc: string | null
    direccion: string | null
    tipo_situacion_fiscal: string | null
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ClientsMaxAggregateOutputType = {
    client_id: number | null
    name: string | null
    rfc: string | null
    direccion: string | null
    tipo_situacion_fiscal: string | null
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ClientsCountAggregateOutputType = {
    client_id: number
    name: number
    rfc: number
    direccion: number
    tipo_situacion_fiscal: number
    permiso: number
    phone: number
    email: number
    user_id: number
    date: number
    active: number
    _all: number
  }


  export type ClientsAvgAggregateInputType = {
    client_id?: true
    user_id?: true
    active?: true
  }

  export type ClientsSumAggregateInputType = {
    client_id?: true
    user_id?: true
    active?: true
  }

  export type ClientsMinAggregateInputType = {
    client_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ClientsMaxAggregateInputType = {
    client_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ClientsCountAggregateInputType = {
    client_id?: true
    name?: true
    rfc?: true
    direccion?: true
    tipo_situacion_fiscal?: true
    permiso?: true
    phone?: true
    email?: true
    user_id?: true
    date?: true
    active?: true
    _all?: true
  }

  export type ClientsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to aggregate.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clients
    **/
    _count?: true | ClientsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientsMaxAggregateInputType
  }

  export type GetClientsAggregateType<T extends ClientsAggregateArgs> = {
        [P in keyof T & keyof AggregateClients]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClients[P]>
      : GetScalarType<T[P], AggregateClients[P]>
  }




  export type clientsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientsWhereInput
    orderBy?: clientsOrderByWithAggregationInput | clientsOrderByWithAggregationInput[]
    by: ClientsScalarFieldEnum[] | ClientsScalarFieldEnum
    having?: clientsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientsCountAggregateInputType | true
    _avg?: ClientsAvgAggregateInputType
    _sum?: ClientsSumAggregateInputType
    _min?: ClientsMinAggregateInputType
    _max?: ClientsMaxAggregateInputType
  }

  export type ClientsGroupByOutputType = {
    client_id: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso: string | null
    phone: string | null
    email: string | null
    user_id: number
    date: Date | null
    active: number | null
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  type GetClientsGroupByPayload<T extends clientsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientsGroupByOutputType[P]>
            : GetScalarType<T[P], ClientsGroupByOutputType[P]>
        }
      >
    >


  export type clientsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    client_id?: boolean
    name?: boolean
    rfc?: boolean
    direccion?: boolean
    tipo_situacion_fiscal?: boolean
    permiso?: boolean
    phone?: boolean
    email?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
    users?: boolean | clients$usersArgs<ExtArgs>
    ventas?: boolean | clients$ventasArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectScalar = {
    client_id?: boolean
    name?: boolean
    rfc?: boolean
    direccion?: boolean
    tipo_situacion_fiscal?: boolean
    permiso?: boolean
    phone?: boolean
    email?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
  }


  export type clientsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | clients$usersArgs<ExtArgs>
    ventas?: boolean | clients$ventasArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $clientsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clients"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      ventas: Prisma.$ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      client_id: number
      name: string
      rfc: string
      direccion: string
      tipo_situacion_fiscal: string
      permiso: string | null
      phone: string | null
      email: string | null
      user_id: number
      date: Date | null
      active: number | null
    }, ExtArgs["result"]["clients"]>
    composites: {}
  }


  type clientsGetPayload<S extends boolean | null | undefined | clientsDefaultArgs> = $Result.GetResult<Prisma.$clientsPayload, S>

  type clientsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<clientsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ClientsCountAggregateInputType | true
    }

  export interface clientsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clients'], meta: { name: 'clients' } }
    /**
     * Find zero or one Clients that matches the filter.
     * @param {clientsFindUniqueArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends clientsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, clientsFindUniqueArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Clients that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {clientsFindUniqueOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends clientsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends clientsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsFindFirstArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Clients that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends clientsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.clients.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.clients.findMany({ take: 10 })
     * 
     * // Only select the `client_id`
     * const clientsWithClient_idOnly = await prisma.clients.findMany({ select: { client_id: true } })
     * 
    **/
    findMany<T extends clientsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Clients.
     * @param {clientsCreateArgs} args - Arguments to create a Clients.
     * @example
     * // Create one Clients
     * const Clients = await prisma.clients.create({
     *   data: {
     *     // ... data to create a Clients
     *   }
     * })
     * 
    **/
    create<T extends clientsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, clientsCreateArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Clients.
     *     @param {clientsCreateManyArgs} args - Arguments to create many Clients.
     *     @example
     *     // Create many Clients
     *     const clients = await prisma.clients.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends clientsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Clients.
     * @param {clientsDeleteArgs} args - Arguments to delete one Clients.
     * @example
     * // Delete one Clients
     * const Clients = await prisma.clients.delete({
     *   where: {
     *     // ... filter to delete one Clients
     *   }
     * })
     * 
    **/
    delete<T extends clientsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, clientsDeleteArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Clients.
     * @param {clientsUpdateArgs} args - Arguments to update one Clients.
     * @example
     * // Update one Clients
     * const clients = await prisma.clients.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends clientsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, clientsUpdateArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Clients.
     * @param {clientsDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.clients.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends clientsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, clientsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const clients = await prisma.clients.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends clientsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, clientsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Clients.
     * @param {clientsUpsertArgs} args - Arguments to update or create a Clients.
     * @example
     * // Update or create a Clients
     * const clients = await prisma.clients.upsert({
     *   create: {
     *     // ... data to create a Clients
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clients we want to update
     *   }
     * })
    **/
    upsert<T extends clientsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, clientsUpsertArgs<ExtArgs>>
    ): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.clients.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends clientsCountArgs>(
      args?: Subset<T, clientsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientsAggregateArgs>(args: Subset<T, ClientsAggregateArgs>): Prisma.PrismaPromise<GetClientsAggregateType<T>>

    /**
     * Group by Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clientsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clientsGroupByArgs['orderBy'] }
        : { orderBy?: clientsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clientsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clients model
   */
  readonly fields: clientsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clients.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clientsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends clients$usersArgs<ExtArgs> = {}>(args?: Subset<T, clients$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ventas<T extends clients$ventasArgs<ExtArgs> = {}>(args?: Subset<T, clients$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the clients model
   */ 
  interface clientsFieldRefs {
    readonly client_id: FieldRef<"clients", 'Int'>
    readonly name: FieldRef<"clients", 'String'>
    readonly rfc: FieldRef<"clients", 'String'>
    readonly direccion: FieldRef<"clients", 'String'>
    readonly tipo_situacion_fiscal: FieldRef<"clients", 'String'>
    readonly permiso: FieldRef<"clients", 'String'>
    readonly phone: FieldRef<"clients", 'String'>
    readonly email: FieldRef<"clients", 'String'>
    readonly user_id: FieldRef<"clients", 'Int'>
    readonly date: FieldRef<"clients", 'DateTime'>
    readonly active: FieldRef<"clients", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * clients findUnique
   */
  export type clientsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findUniqueOrThrow
   */
  export type clientsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findFirst
   */
  export type clientsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findFirstOrThrow
   */
  export type clientsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findMany
   */
  export type clientsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients create
   */
  export type clientsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to create a clients.
     */
    data: XOR<clientsCreateInput, clientsUncheckedCreateInput>
  }

  /**
   * clients createMany
   */
  export type clientsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clients.
     */
    data: clientsCreateManyInput | clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clients update
   */
  export type clientsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to update a clients.
     */
    data: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
    /**
     * Choose, which clients to update.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients updateMany
   */
  export type clientsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clients.
     */
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyInput>
    /**
     * Filter which clients to update
     */
    where?: clientsWhereInput
  }

  /**
   * clients upsert
   */
  export type clientsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The filter to search for the clients to update in case it exists.
     */
    where: clientsWhereUniqueInput
    /**
     * In case the clients found by the `where` argument doesn't exist, create a new clients with this data.
     */
    create: XOR<clientsCreateInput, clientsUncheckedCreateInput>
    /**
     * In case the clients was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
  }

  /**
   * clients delete
   */
  export type clientsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter which clients to delete.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients deleteMany
   */
  export type clientsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to delete
     */
    where?: clientsWhereInput
  }

  /**
   * clients.users
   */
  export type clients$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * clients.ventas
   */
  export type clients$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    cursor?: ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * clients without action
   */
  export type clientsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
  }


  /**
   * Model abastecimientos
   */

  export type AggregateAbastecimientos = {
    _count: AbastecimientosCountAggregateOutputType | null
    _avg: AbastecimientosAvgAggregateOutputType | null
    _sum: AbastecimientosSumAggregateOutputType | null
    _min: AbastecimientosMinAggregateOutputType | null
    _max: AbastecimientosMaxAggregateOutputType | null
  }

  export type AbastecimientosAvgAggregateOutputType = {
    abastecimiento_id: number | null
    proveedor_id: number | null
    cantidad: number | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    densidad: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    preciovent: number | null
    user_id: number | null
    active: number | null
  }

  export type AbastecimientosSumAggregateOutputType = {
    abastecimiento_id: number | null
    proveedor_id: number | null
    cantidad: number | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    densidad: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    preciovent: number | null
    user_id: number | null
    active: number | null
  }

  export type AbastecimientosMinAggregateOutputType = {
    abastecimiento_id: number | null
    proveedor_id: number | null
    folio: string | null
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date | null
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number | null
    unidad: string | null
    concepto: string | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    densidad: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    cfdi: string | null
    tipoCfdi: string | null
    preciovent: number | null
    aclaracion: string | null
    tipocomplemento: string | null
    unidaddemedida: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type AbastecimientosMaxAggregateOutputType = {
    abastecimiento_id: number | null
    proveedor_id: number | null
    folio: string | null
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date | null
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number | null
    unidad: string | null
    concepto: string | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    densidad: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    cfdi: string | null
    tipoCfdi: string | null
    preciovent: number | null
    aclaracion: string | null
    tipocomplemento: string | null
    unidaddemedida: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type AbastecimientosCountAggregateOutputType = {
    abastecimiento_id: number
    proveedor_id: number
    folio: number
    serie: number
    folio_fiscal: number
    fecha_emision: number
    fecha_timbrado: number
    lugar_expedicion: number
    exportacion: number
    uso: number
    cantidad: number
    unidad: number
    concepto: number
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad: number
    tipo_modena_id: number
    condicion_pago_id: number
    cfdi: number
    tipoCfdi: number
    preciovent: number
    aclaracion: number
    tipocomplemento: number
    unidaddemedida: number
    user_id: number
    date: number
    active: number
    _all: number
  }


  export type AbastecimientosAvgAggregateInputType = {
    abastecimiento_id?: true
    proveedor_id?: true
    cantidad?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    densidad?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    preciovent?: true
    user_id?: true
    active?: true
  }

  export type AbastecimientosSumAggregateInputType = {
    abastecimiento_id?: true
    proveedor_id?: true
    cantidad?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    densidad?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    preciovent?: true
    user_id?: true
    active?: true
  }

  export type AbastecimientosMinAggregateInputType = {
    abastecimiento_id?: true
    proveedor_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    densidad?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type AbastecimientosMaxAggregateInputType = {
    abastecimiento_id?: true
    proveedor_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    densidad?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type AbastecimientosCountAggregateInputType = {
    abastecimiento_id?: true
    proveedor_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    densidad?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
    _all?: true
  }

  export type AbastecimientosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which abastecimientos to aggregate.
     */
    where?: abastecimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abastecimientos to fetch.
     */
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: abastecimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abastecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abastecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned abastecimientos
    **/
    _count?: true | AbastecimientosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AbastecimientosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AbastecimientosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AbastecimientosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AbastecimientosMaxAggregateInputType
  }

  export type GetAbastecimientosAggregateType<T extends AbastecimientosAggregateArgs> = {
        [P in keyof T & keyof AggregateAbastecimientos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAbastecimientos[P]>
      : GetScalarType<T[P], AggregateAbastecimientos[P]>
  }




  export type abastecimientosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: abastecimientosWhereInput
    orderBy?: abastecimientosOrderByWithAggregationInput | abastecimientosOrderByWithAggregationInput[]
    by: AbastecimientosScalarFieldEnum[] | AbastecimientosScalarFieldEnum
    having?: abastecimientosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AbastecimientosCountAggregateInputType | true
    _avg?: AbastecimientosAvgAggregateInputType
    _sum?: AbastecimientosSumAggregateInputType
    _min?: AbastecimientosMinAggregateInputType
    _max?: AbastecimientosMaxAggregateInputType
  }

  export type AbastecimientosGroupByOutputType = {
    abastecimiento_id: number
    proveedor_id: number
    folio: string
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number
    unidad: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad: number | null
    tipo_modena_id: number
    condicion_pago_id: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date
    active: number
    _count: AbastecimientosCountAggregateOutputType | null
    _avg: AbastecimientosAvgAggregateOutputType | null
    _sum: AbastecimientosSumAggregateOutputType | null
    _min: AbastecimientosMinAggregateOutputType | null
    _max: AbastecimientosMaxAggregateOutputType | null
  }

  type GetAbastecimientosGroupByPayload<T extends abastecimientosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AbastecimientosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AbastecimientosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AbastecimientosGroupByOutputType[P]>
            : GetScalarType<T[P], AbastecimientosGroupByOutputType[P]>
        }
      >
    >


  export type abastecimientosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    abastecimiento_id?: boolean
    proveedor_id?: boolean
    folio?: boolean
    serie?: boolean
    folio_fiscal?: boolean
    fecha_emision?: boolean
    fecha_timbrado?: boolean
    lugar_expedicion?: boolean
    exportacion?: boolean
    uso?: boolean
    cantidad?: boolean
    unidad?: boolean
    concepto?: boolean
    preciounitario?: boolean
    importe?: boolean
    ivaaplicado?: boolean
    densidad?: boolean
    tipo_modena_id?: boolean
    condicion_pago_id?: boolean
    cfdi?: boolean
    tipoCfdi?: boolean
    preciovent?: boolean
    aclaracion?: boolean
    tipocomplemento?: boolean
    unidaddemedida?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
    proveedores?: boolean | abastecimientos$proveedoresArgs<ExtArgs>
    users?: boolean | abastecimientos$usersArgs<ExtArgs>
    tipos_monedas?: boolean | abastecimientos$tipos_monedasArgs<ExtArgs>
    condiciones_pagos?: boolean | abastecimientos$condiciones_pagosArgs<ExtArgs>
  }, ExtArgs["result"]["abastecimientos"]>

  export type abastecimientosSelectScalar = {
    abastecimiento_id?: boolean
    proveedor_id?: boolean
    folio?: boolean
    serie?: boolean
    folio_fiscal?: boolean
    fecha_emision?: boolean
    fecha_timbrado?: boolean
    lugar_expedicion?: boolean
    exportacion?: boolean
    uso?: boolean
    cantidad?: boolean
    unidad?: boolean
    concepto?: boolean
    preciounitario?: boolean
    importe?: boolean
    ivaaplicado?: boolean
    densidad?: boolean
    tipo_modena_id?: boolean
    condicion_pago_id?: boolean
    cfdi?: boolean
    tipoCfdi?: boolean
    preciovent?: boolean
    aclaracion?: boolean
    tipocomplemento?: boolean
    unidaddemedida?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
  }


  export type abastecimientosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    proveedores?: boolean | abastecimientos$proveedoresArgs<ExtArgs>
    users?: boolean | abastecimientos$usersArgs<ExtArgs>
    tipos_monedas?: boolean | abastecimientos$tipos_monedasArgs<ExtArgs>
    condiciones_pagos?: boolean | abastecimientos$condiciones_pagosArgs<ExtArgs>
  }


  export type $abastecimientosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "abastecimientos"
    objects: {
      proveedores: Prisma.$proveedoresPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
      tipos_monedas: Prisma.$tipos_monedasPayload<ExtArgs> | null
      condiciones_pagos: Prisma.$condiciones_pagosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      abastecimiento_id: number
      proveedor_id: number
      folio: string
      serie: string | null
      folio_fiscal: string | null
      fecha_emision: Date
      fecha_timbrado: Date | null
      lugar_expedicion: string | null
      exportacion: string | null
      uso: string | null
      cantidad: number
      unidad: string | null
      concepto: string
      preciounitario: number
      importe: number
      ivaaplicado: number
      densidad: number | null
      tipo_modena_id: number
      condicion_pago_id: number | null
      cfdi: string
      tipoCfdi: string
      preciovent: number
      aclaracion: string
      tipocomplemento: string
      unidaddemedida: string
      user_id: number
      date: Date
      active: number
    }, ExtArgs["result"]["abastecimientos"]>
    composites: {}
  }


  type abastecimientosGetPayload<S extends boolean | null | undefined | abastecimientosDefaultArgs> = $Result.GetResult<Prisma.$abastecimientosPayload, S>

  type abastecimientosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<abastecimientosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AbastecimientosCountAggregateInputType | true
    }

  export interface abastecimientosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['abastecimientos'], meta: { name: 'abastecimientos' } }
    /**
     * Find zero or one Abastecimientos that matches the filter.
     * @param {abastecimientosFindUniqueArgs} args - Arguments to find a Abastecimientos
     * @example
     * // Get one Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends abastecimientosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosFindUniqueArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Abastecimientos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {abastecimientosFindUniqueOrThrowArgs} args - Arguments to find a Abastecimientos
     * @example
     * // Get one Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends abastecimientosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Abastecimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosFindFirstArgs} args - Arguments to find a Abastecimientos
     * @example
     * // Get one Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends abastecimientosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosFindFirstArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Abastecimientos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosFindFirstOrThrowArgs} args - Arguments to find a Abastecimientos
     * @example
     * // Get one Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends abastecimientosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Abastecimientos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findMany()
     * 
     * // Get first 10 Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.findMany({ take: 10 })
     * 
     * // Only select the `abastecimiento_id`
     * const abastecimientosWithAbastecimiento_idOnly = await prisma.abastecimientos.findMany({ select: { abastecimiento_id: true } })
     * 
    **/
    findMany<T extends abastecimientosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Abastecimientos.
     * @param {abastecimientosCreateArgs} args - Arguments to create a Abastecimientos.
     * @example
     * // Create one Abastecimientos
     * const Abastecimientos = await prisma.abastecimientos.create({
     *   data: {
     *     // ... data to create a Abastecimientos
     *   }
     * })
     * 
    **/
    create<T extends abastecimientosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosCreateArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Abastecimientos.
     *     @param {abastecimientosCreateManyArgs} args - Arguments to create many Abastecimientos.
     *     @example
     *     // Create many Abastecimientos
     *     const abastecimientos = await prisma.abastecimientos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends abastecimientosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Abastecimientos.
     * @param {abastecimientosDeleteArgs} args - Arguments to delete one Abastecimientos.
     * @example
     * // Delete one Abastecimientos
     * const Abastecimientos = await prisma.abastecimientos.delete({
     *   where: {
     *     // ... filter to delete one Abastecimientos
     *   }
     * })
     * 
    **/
    delete<T extends abastecimientosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosDeleteArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Abastecimientos.
     * @param {abastecimientosUpdateArgs} args - Arguments to update one Abastecimientos.
     * @example
     * // Update one Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends abastecimientosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosUpdateArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Abastecimientos.
     * @param {abastecimientosDeleteManyArgs} args - Arguments to filter Abastecimientos to delete.
     * @example
     * // Delete a few Abastecimientos
     * const { count } = await prisma.abastecimientos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends abastecimientosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, abastecimientosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Abastecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends abastecimientosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Abastecimientos.
     * @param {abastecimientosUpsertArgs} args - Arguments to update or create a Abastecimientos.
     * @example
     * // Update or create a Abastecimientos
     * const abastecimientos = await prisma.abastecimientos.upsert({
     *   create: {
     *     // ... data to create a Abastecimientos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Abastecimientos we want to update
     *   }
     * })
    **/
    upsert<T extends abastecimientosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, abastecimientosUpsertArgs<ExtArgs>>
    ): Prisma__abastecimientosClient<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Abastecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosCountArgs} args - Arguments to filter Abastecimientos to count.
     * @example
     * // Count the number of Abastecimientos
     * const count = await prisma.abastecimientos.count({
     *   where: {
     *     // ... the filter for the Abastecimientos we want to count
     *   }
     * })
    **/
    count<T extends abastecimientosCountArgs>(
      args?: Subset<T, abastecimientosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AbastecimientosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Abastecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AbastecimientosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AbastecimientosAggregateArgs>(args: Subset<T, AbastecimientosAggregateArgs>): Prisma.PrismaPromise<GetAbastecimientosAggregateType<T>>

    /**
     * Group by Abastecimientos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {abastecimientosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends abastecimientosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: abastecimientosGroupByArgs['orderBy'] }
        : { orderBy?: abastecimientosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, abastecimientosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAbastecimientosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the abastecimientos model
   */
  readonly fields: abastecimientosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for abastecimientos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__abastecimientosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    proveedores<T extends abastecimientos$proveedoresArgs<ExtArgs> = {}>(args?: Subset<T, abastecimientos$proveedoresArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    users<T extends abastecimientos$usersArgs<ExtArgs> = {}>(args?: Subset<T, abastecimientos$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tipos_monedas<T extends abastecimientos$tipos_monedasArgs<ExtArgs> = {}>(args?: Subset<T, abastecimientos$tipos_monedasArgs<ExtArgs>>): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    condiciones_pagos<T extends abastecimientos$condiciones_pagosArgs<ExtArgs> = {}>(args?: Subset<T, abastecimientos$condiciones_pagosArgs<ExtArgs>>): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the abastecimientos model
   */ 
  interface abastecimientosFieldRefs {
    readonly abastecimiento_id: FieldRef<"abastecimientos", 'Int'>
    readonly proveedor_id: FieldRef<"abastecimientos", 'Int'>
    readonly folio: FieldRef<"abastecimientos", 'String'>
    readonly serie: FieldRef<"abastecimientos", 'String'>
    readonly folio_fiscal: FieldRef<"abastecimientos", 'String'>
    readonly fecha_emision: FieldRef<"abastecimientos", 'DateTime'>
    readonly fecha_timbrado: FieldRef<"abastecimientos", 'DateTime'>
    readonly lugar_expedicion: FieldRef<"abastecimientos", 'String'>
    readonly exportacion: FieldRef<"abastecimientos", 'String'>
    readonly uso: FieldRef<"abastecimientos", 'String'>
    readonly cantidad: FieldRef<"abastecimientos", 'Float'>
    readonly unidad: FieldRef<"abastecimientos", 'String'>
    readonly concepto: FieldRef<"abastecimientos", 'String'>
    readonly preciounitario: FieldRef<"abastecimientos", 'Float'>
    readonly importe: FieldRef<"abastecimientos", 'Float'>
    readonly ivaaplicado: FieldRef<"abastecimientos", 'Float'>
    readonly densidad: FieldRef<"abastecimientos", 'Float'>
    readonly tipo_modena_id: FieldRef<"abastecimientos", 'Int'>
    readonly condicion_pago_id: FieldRef<"abastecimientos", 'Int'>
    readonly cfdi: FieldRef<"abastecimientos", 'String'>
    readonly tipoCfdi: FieldRef<"abastecimientos", 'String'>
    readonly preciovent: FieldRef<"abastecimientos", 'Float'>
    readonly aclaracion: FieldRef<"abastecimientos", 'String'>
    readonly tipocomplemento: FieldRef<"abastecimientos", 'String'>
    readonly unidaddemedida: FieldRef<"abastecimientos", 'String'>
    readonly user_id: FieldRef<"abastecimientos", 'Int'>
    readonly date: FieldRef<"abastecimientos", 'DateTime'>
    readonly active: FieldRef<"abastecimientos", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * abastecimientos findUnique
   */
  export type abastecimientosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter, which abastecimientos to fetch.
     */
    where: abastecimientosWhereUniqueInput
  }

  /**
   * abastecimientos findUniqueOrThrow
   */
  export type abastecimientosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter, which abastecimientos to fetch.
     */
    where: abastecimientosWhereUniqueInput
  }

  /**
   * abastecimientos findFirst
   */
  export type abastecimientosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter, which abastecimientos to fetch.
     */
    where?: abastecimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abastecimientos to fetch.
     */
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for abastecimientos.
     */
    cursor?: abastecimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abastecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abastecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of abastecimientos.
     */
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * abastecimientos findFirstOrThrow
   */
  export type abastecimientosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter, which abastecimientos to fetch.
     */
    where?: abastecimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abastecimientos to fetch.
     */
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for abastecimientos.
     */
    cursor?: abastecimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abastecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abastecimientos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of abastecimientos.
     */
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * abastecimientos findMany
   */
  export type abastecimientosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter, which abastecimientos to fetch.
     */
    where?: abastecimientosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of abastecimientos to fetch.
     */
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing abastecimientos.
     */
    cursor?: abastecimientosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` abastecimientos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` abastecimientos.
     */
    skip?: number
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * abastecimientos create
   */
  export type abastecimientosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * The data needed to create a abastecimientos.
     */
    data: XOR<abastecimientosCreateInput, abastecimientosUncheckedCreateInput>
  }

  /**
   * abastecimientos createMany
   */
  export type abastecimientosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many abastecimientos.
     */
    data: abastecimientosCreateManyInput | abastecimientosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * abastecimientos update
   */
  export type abastecimientosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * The data needed to update a abastecimientos.
     */
    data: XOR<abastecimientosUpdateInput, abastecimientosUncheckedUpdateInput>
    /**
     * Choose, which abastecimientos to update.
     */
    where: abastecimientosWhereUniqueInput
  }

  /**
   * abastecimientos updateMany
   */
  export type abastecimientosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update abastecimientos.
     */
    data: XOR<abastecimientosUpdateManyMutationInput, abastecimientosUncheckedUpdateManyInput>
    /**
     * Filter which abastecimientos to update
     */
    where?: abastecimientosWhereInput
  }

  /**
   * abastecimientos upsert
   */
  export type abastecimientosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * The filter to search for the abastecimientos to update in case it exists.
     */
    where: abastecimientosWhereUniqueInput
    /**
     * In case the abastecimientos found by the `where` argument doesn't exist, create a new abastecimientos with this data.
     */
    create: XOR<abastecimientosCreateInput, abastecimientosUncheckedCreateInput>
    /**
     * In case the abastecimientos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<abastecimientosUpdateInput, abastecimientosUncheckedUpdateInput>
  }

  /**
   * abastecimientos delete
   */
  export type abastecimientosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    /**
     * Filter which abastecimientos to delete.
     */
    where: abastecimientosWhereUniqueInput
  }

  /**
   * abastecimientos deleteMany
   */
  export type abastecimientosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which abastecimientos to delete
     */
    where?: abastecimientosWhereInput
  }

  /**
   * abastecimientos.proveedores
   */
  export type abastecimientos$proveedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    where?: proveedoresWhereInput
  }

  /**
   * abastecimientos.users
   */
  export type abastecimientos$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * abastecimientos.tipos_monedas
   */
  export type abastecimientos$tipos_monedasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    where?: tipos_monedasWhereInput
  }

  /**
   * abastecimientos.condiciones_pagos
   */
  export type abastecimientos$condiciones_pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    where?: condiciones_pagosWhereInput
  }

  /**
   * abastecimientos without action
   */
  export type abastecimientosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
  }


  /**
   * Model tipos_monedas
   */

  export type AggregateTipos_monedas = {
    _count: Tipos_monedasCountAggregateOutputType | null
    _avg: Tipos_monedasAvgAggregateOutputType | null
    _sum: Tipos_monedasSumAggregateOutputType | null
    _min: Tipos_monedasMinAggregateOutputType | null
    _max: Tipos_monedasMaxAggregateOutputType | null
  }

  export type Tipos_monedasAvgAggregateOutputType = {
    tipo_modena_id: number | null
  }

  export type Tipos_monedasSumAggregateOutputType = {
    tipo_modena_id: number | null
  }

  export type Tipos_monedasMinAggregateOutputType = {
    tipo_modena_id: number | null
    tipo_modena: string | null
  }

  export type Tipos_monedasMaxAggregateOutputType = {
    tipo_modena_id: number | null
    tipo_modena: string | null
  }

  export type Tipos_monedasCountAggregateOutputType = {
    tipo_modena_id: number
    tipo_modena: number
    _all: number
  }


  export type Tipos_monedasAvgAggregateInputType = {
    tipo_modena_id?: true
  }

  export type Tipos_monedasSumAggregateInputType = {
    tipo_modena_id?: true
  }

  export type Tipos_monedasMinAggregateInputType = {
    tipo_modena_id?: true
    tipo_modena?: true
  }

  export type Tipos_monedasMaxAggregateInputType = {
    tipo_modena_id?: true
    tipo_modena?: true
  }

  export type Tipos_monedasCountAggregateInputType = {
    tipo_modena_id?: true
    tipo_modena?: true
    _all?: true
  }

  export type Tipos_monedasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_monedas to aggregate.
     */
    where?: tipos_monedasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_monedas to fetch.
     */
    orderBy?: tipos_monedasOrderByWithRelationInput | tipos_monedasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipos_monedasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipos_monedas
    **/
    _count?: true | Tipos_monedasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipos_monedasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipos_monedasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipos_monedasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipos_monedasMaxAggregateInputType
  }

  export type GetTipos_monedasAggregateType<T extends Tipos_monedasAggregateArgs> = {
        [P in keyof T & keyof AggregateTipos_monedas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipos_monedas[P]>
      : GetScalarType<T[P], AggregateTipos_monedas[P]>
  }




  export type tipos_monedasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipos_monedasWhereInput
    orderBy?: tipos_monedasOrderByWithAggregationInput | tipos_monedasOrderByWithAggregationInput[]
    by: Tipos_monedasScalarFieldEnum[] | Tipos_monedasScalarFieldEnum
    having?: tipos_monedasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipos_monedasCountAggregateInputType | true
    _avg?: Tipos_monedasAvgAggregateInputType
    _sum?: Tipos_monedasSumAggregateInputType
    _min?: Tipos_monedasMinAggregateInputType
    _max?: Tipos_monedasMaxAggregateInputType
  }

  export type Tipos_monedasGroupByOutputType = {
    tipo_modena_id: number
    tipo_modena: string
    _count: Tipos_monedasCountAggregateOutputType | null
    _avg: Tipos_monedasAvgAggregateOutputType | null
    _sum: Tipos_monedasSumAggregateOutputType | null
    _min: Tipos_monedasMinAggregateOutputType | null
    _max: Tipos_monedasMaxAggregateOutputType | null
  }

  type GetTipos_monedasGroupByPayload<T extends tipos_monedasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipos_monedasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipos_monedasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipos_monedasGroupByOutputType[P]>
            : GetScalarType<T[P], Tipos_monedasGroupByOutputType[P]>
        }
      >
    >


  export type tipos_monedasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_modena_id?: boolean
    tipo_modena?: boolean
    abastecimientos?: boolean | tipos_monedas$abastecimientosArgs<ExtArgs>
    ventas?: boolean | tipos_monedas$ventasArgs<ExtArgs>
    _count?: boolean | Tipos_monedasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipos_monedas"]>

  export type tipos_monedasSelectScalar = {
    tipo_modena_id?: boolean
    tipo_modena?: boolean
  }


  export type tipos_monedasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abastecimientos?: boolean | tipos_monedas$abastecimientosArgs<ExtArgs>
    ventas?: boolean | tipos_monedas$ventasArgs<ExtArgs>
    _count?: boolean | Tipos_monedasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tipos_monedasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipos_monedas"
    objects: {
      abastecimientos: Prisma.$abastecimientosPayload<ExtArgs>[]
      ventas: Prisma.$ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tipo_modena_id: number
      tipo_modena: string
    }, ExtArgs["result"]["tipos_monedas"]>
    composites: {}
  }


  type tipos_monedasGetPayload<S extends boolean | null | undefined | tipos_monedasDefaultArgs> = $Result.GetResult<Prisma.$tipos_monedasPayload, S>

  type tipos_monedasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipos_monedasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tipos_monedasCountAggregateInputType | true
    }

  export interface tipos_monedasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipos_monedas'], meta: { name: 'tipos_monedas' } }
    /**
     * Find zero or one Tipos_monedas that matches the filter.
     * @param {tipos_monedasFindUniqueArgs} args - Arguments to find a Tipos_monedas
     * @example
     * // Get one Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipos_monedasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasFindUniqueArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipos_monedas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipos_monedasFindUniqueOrThrowArgs} args - Arguments to find a Tipos_monedas
     * @example
     * // Get one Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipos_monedasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipos_monedas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasFindFirstArgs} args - Arguments to find a Tipos_monedas
     * @example
     * // Get one Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipos_monedasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasFindFirstArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipos_monedas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasFindFirstOrThrowArgs} args - Arguments to find a Tipos_monedas
     * @example
     * // Get one Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipos_monedasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipos_monedas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findMany()
     * 
     * // Get first 10 Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.findMany({ take: 10 })
     * 
     * // Only select the `tipo_modena_id`
     * const tipos_monedasWithTipo_modena_idOnly = await prisma.tipos_monedas.findMany({ select: { tipo_modena_id: true } })
     * 
    **/
    findMany<T extends tipos_monedasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipos_monedas.
     * @param {tipos_monedasCreateArgs} args - Arguments to create a Tipos_monedas.
     * @example
     * // Create one Tipos_monedas
     * const Tipos_monedas = await prisma.tipos_monedas.create({
     *   data: {
     *     // ... data to create a Tipos_monedas
     *   }
     * })
     * 
    **/
    create<T extends tipos_monedasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasCreateArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipos_monedas.
     *     @param {tipos_monedasCreateManyArgs} args - Arguments to create many Tipos_monedas.
     *     @example
     *     // Create many Tipos_monedas
     *     const tipos_monedas = await prisma.tipos_monedas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipos_monedasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipos_monedas.
     * @param {tipos_monedasDeleteArgs} args - Arguments to delete one Tipos_monedas.
     * @example
     * // Delete one Tipos_monedas
     * const Tipos_monedas = await prisma.tipos_monedas.delete({
     *   where: {
     *     // ... filter to delete one Tipos_monedas
     *   }
     * })
     * 
    **/
    delete<T extends tipos_monedasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasDeleteArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipos_monedas.
     * @param {tipos_monedasUpdateArgs} args - Arguments to update one Tipos_monedas.
     * @example
     * // Update one Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipos_monedasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasUpdateArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipos_monedas.
     * @param {tipos_monedasDeleteManyArgs} args - Arguments to filter Tipos_monedas to delete.
     * @example
     * // Delete a few Tipos_monedas
     * const { count } = await prisma.tipos_monedas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipos_monedasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_monedasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipos_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipos_monedasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipos_monedas.
     * @param {tipos_monedasUpsertArgs} args - Arguments to update or create a Tipos_monedas.
     * @example
     * // Update or create a Tipos_monedas
     * const tipos_monedas = await prisma.tipos_monedas.upsert({
     *   create: {
     *     // ... data to create a Tipos_monedas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipos_monedas we want to update
     *   }
     * })
    **/
    upsert<T extends tipos_monedasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_monedasUpsertArgs<ExtArgs>>
    ): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipos_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasCountArgs} args - Arguments to filter Tipos_monedas to count.
     * @example
     * // Count the number of Tipos_monedas
     * const count = await prisma.tipos_monedas.count({
     *   where: {
     *     // ... the filter for the Tipos_monedas we want to count
     *   }
     * })
    **/
    count<T extends tipos_monedasCountArgs>(
      args?: Subset<T, tipos_monedasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipos_monedasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipos_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipos_monedasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipos_monedasAggregateArgs>(args: Subset<T, Tipos_monedasAggregateArgs>): Prisma.PrismaPromise<GetTipos_monedasAggregateType<T>>

    /**
     * Group by Tipos_monedas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_monedasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipos_monedasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipos_monedasGroupByArgs['orderBy'] }
        : { orderBy?: tipos_monedasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipos_monedasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipos_monedasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipos_monedas model
   */
  readonly fields: tipos_monedasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipos_monedas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipos_monedasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    abastecimientos<T extends tipos_monedas$abastecimientosArgs<ExtArgs> = {}>(args?: Subset<T, tipos_monedas$abastecimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findMany'> | Null>;

    ventas<T extends tipos_monedas$ventasArgs<ExtArgs> = {}>(args?: Subset<T, tipos_monedas$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tipos_monedas model
   */ 
  interface tipos_monedasFieldRefs {
    readonly tipo_modena_id: FieldRef<"tipos_monedas", 'Int'>
    readonly tipo_modena: FieldRef<"tipos_monedas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipos_monedas findUnique
   */
  export type tipos_monedasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter, which tipos_monedas to fetch.
     */
    where: tipos_monedasWhereUniqueInput
  }

  /**
   * tipos_monedas findUniqueOrThrow
   */
  export type tipos_monedasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter, which tipos_monedas to fetch.
     */
    where: tipos_monedasWhereUniqueInput
  }

  /**
   * tipos_monedas findFirst
   */
  export type tipos_monedasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter, which tipos_monedas to fetch.
     */
    where?: tipos_monedasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_monedas to fetch.
     */
    orderBy?: tipos_monedasOrderByWithRelationInput | tipos_monedasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_monedas.
     */
    cursor?: tipos_monedasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_monedas.
     */
    distinct?: Tipos_monedasScalarFieldEnum | Tipos_monedasScalarFieldEnum[]
  }

  /**
   * tipos_monedas findFirstOrThrow
   */
  export type tipos_monedasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter, which tipos_monedas to fetch.
     */
    where?: tipos_monedasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_monedas to fetch.
     */
    orderBy?: tipos_monedasOrderByWithRelationInput | tipos_monedasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_monedas.
     */
    cursor?: tipos_monedasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_monedas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_monedas.
     */
    distinct?: Tipos_monedasScalarFieldEnum | Tipos_monedasScalarFieldEnum[]
  }

  /**
   * tipos_monedas findMany
   */
  export type tipos_monedasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter, which tipos_monedas to fetch.
     */
    where?: tipos_monedasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_monedas to fetch.
     */
    orderBy?: tipos_monedasOrderByWithRelationInput | tipos_monedasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipos_monedas.
     */
    cursor?: tipos_monedasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_monedas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_monedas.
     */
    skip?: number
    distinct?: Tipos_monedasScalarFieldEnum | Tipos_monedasScalarFieldEnum[]
  }

  /**
   * tipos_monedas create
   */
  export type tipos_monedasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * The data needed to create a tipos_monedas.
     */
    data: XOR<tipos_monedasCreateInput, tipos_monedasUncheckedCreateInput>
  }

  /**
   * tipos_monedas createMany
   */
  export type tipos_monedasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipos_monedas.
     */
    data: tipos_monedasCreateManyInput | tipos_monedasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipos_monedas update
   */
  export type tipos_monedasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * The data needed to update a tipos_monedas.
     */
    data: XOR<tipos_monedasUpdateInput, tipos_monedasUncheckedUpdateInput>
    /**
     * Choose, which tipos_monedas to update.
     */
    where: tipos_monedasWhereUniqueInput
  }

  /**
   * tipos_monedas updateMany
   */
  export type tipos_monedasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipos_monedas.
     */
    data: XOR<tipos_monedasUpdateManyMutationInput, tipos_monedasUncheckedUpdateManyInput>
    /**
     * Filter which tipos_monedas to update
     */
    where?: tipos_monedasWhereInput
  }

  /**
   * tipos_monedas upsert
   */
  export type tipos_monedasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * The filter to search for the tipos_monedas to update in case it exists.
     */
    where: tipos_monedasWhereUniqueInput
    /**
     * In case the tipos_monedas found by the `where` argument doesn't exist, create a new tipos_monedas with this data.
     */
    create: XOR<tipos_monedasCreateInput, tipos_monedasUncheckedCreateInput>
    /**
     * In case the tipos_monedas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipos_monedasUpdateInput, tipos_monedasUncheckedUpdateInput>
  }

  /**
   * tipos_monedas delete
   */
  export type tipos_monedasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    /**
     * Filter which tipos_monedas to delete.
     */
    where: tipos_monedasWhereUniqueInput
  }

  /**
   * tipos_monedas deleteMany
   */
  export type tipos_monedasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_monedas to delete
     */
    where?: tipos_monedasWhereInput
  }

  /**
   * tipos_monedas.abastecimientos
   */
  export type tipos_monedas$abastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    where?: abastecimientosWhereInput
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    cursor?: abastecimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * tipos_monedas.ventas
   */
  export type tipos_monedas$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    cursor?: ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * tipos_monedas without action
   */
  export type tipos_monedasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
  }


  /**
   * Model condiciones_pagos
   */

  export type AggregateCondiciones_pagos = {
    _count: Condiciones_pagosCountAggregateOutputType | null
    _avg: Condiciones_pagosAvgAggregateOutputType | null
    _sum: Condiciones_pagosSumAggregateOutputType | null
    _min: Condiciones_pagosMinAggregateOutputType | null
    _max: Condiciones_pagosMaxAggregateOutputType | null
  }

  export type Condiciones_pagosAvgAggregateOutputType = {
    condicion_pago_id: number | null
  }

  export type Condiciones_pagosSumAggregateOutputType = {
    condicion_pago_id: number | null
  }

  export type Condiciones_pagosMinAggregateOutputType = {
    condicion_pago_id: number | null
    condicion_pago: string | null
  }

  export type Condiciones_pagosMaxAggregateOutputType = {
    condicion_pago_id: number | null
    condicion_pago: string | null
  }

  export type Condiciones_pagosCountAggregateOutputType = {
    condicion_pago_id: number
    condicion_pago: number
    _all: number
  }


  export type Condiciones_pagosAvgAggregateInputType = {
    condicion_pago_id?: true
  }

  export type Condiciones_pagosSumAggregateInputType = {
    condicion_pago_id?: true
  }

  export type Condiciones_pagosMinAggregateInputType = {
    condicion_pago_id?: true
    condicion_pago?: true
  }

  export type Condiciones_pagosMaxAggregateInputType = {
    condicion_pago_id?: true
    condicion_pago?: true
  }

  export type Condiciones_pagosCountAggregateInputType = {
    condicion_pago_id?: true
    condicion_pago?: true
    _all?: true
  }

  export type Condiciones_pagosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which condiciones_pagos to aggregate.
     */
    where?: condiciones_pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of condiciones_pagos to fetch.
     */
    orderBy?: condiciones_pagosOrderByWithRelationInput | condiciones_pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: condiciones_pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` condiciones_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` condiciones_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned condiciones_pagos
    **/
    _count?: true | Condiciones_pagosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Condiciones_pagosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Condiciones_pagosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Condiciones_pagosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Condiciones_pagosMaxAggregateInputType
  }

  export type GetCondiciones_pagosAggregateType<T extends Condiciones_pagosAggregateArgs> = {
        [P in keyof T & keyof AggregateCondiciones_pagos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCondiciones_pagos[P]>
      : GetScalarType<T[P], AggregateCondiciones_pagos[P]>
  }




  export type condiciones_pagosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: condiciones_pagosWhereInput
    orderBy?: condiciones_pagosOrderByWithAggregationInput | condiciones_pagosOrderByWithAggregationInput[]
    by: Condiciones_pagosScalarFieldEnum[] | Condiciones_pagosScalarFieldEnum
    having?: condiciones_pagosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Condiciones_pagosCountAggregateInputType | true
    _avg?: Condiciones_pagosAvgAggregateInputType
    _sum?: Condiciones_pagosSumAggregateInputType
    _min?: Condiciones_pagosMinAggregateInputType
    _max?: Condiciones_pagosMaxAggregateInputType
  }

  export type Condiciones_pagosGroupByOutputType = {
    condicion_pago_id: number
    condicion_pago: string
    _count: Condiciones_pagosCountAggregateOutputType | null
    _avg: Condiciones_pagosAvgAggregateOutputType | null
    _sum: Condiciones_pagosSumAggregateOutputType | null
    _min: Condiciones_pagosMinAggregateOutputType | null
    _max: Condiciones_pagosMaxAggregateOutputType | null
  }

  type GetCondiciones_pagosGroupByPayload<T extends condiciones_pagosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Condiciones_pagosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Condiciones_pagosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Condiciones_pagosGroupByOutputType[P]>
            : GetScalarType<T[P], Condiciones_pagosGroupByOutputType[P]>
        }
      >
    >


  export type condiciones_pagosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    condicion_pago_id?: boolean
    condicion_pago?: boolean
    abastecimientos?: boolean | condiciones_pagos$abastecimientosArgs<ExtArgs>
    ventas?: boolean | condiciones_pagos$ventasArgs<ExtArgs>
    _count?: boolean | Condiciones_pagosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["condiciones_pagos"]>

  export type condiciones_pagosSelectScalar = {
    condicion_pago_id?: boolean
    condicion_pago?: boolean
  }


  export type condiciones_pagosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    abastecimientos?: boolean | condiciones_pagos$abastecimientosArgs<ExtArgs>
    ventas?: boolean | condiciones_pagos$ventasArgs<ExtArgs>
    _count?: boolean | Condiciones_pagosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $condiciones_pagosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "condiciones_pagos"
    objects: {
      abastecimientos: Prisma.$abastecimientosPayload<ExtArgs>[]
      ventas: Prisma.$ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      condicion_pago_id: number
      condicion_pago: string
    }, ExtArgs["result"]["condiciones_pagos"]>
    composites: {}
  }


  type condiciones_pagosGetPayload<S extends boolean | null | undefined | condiciones_pagosDefaultArgs> = $Result.GetResult<Prisma.$condiciones_pagosPayload, S>

  type condiciones_pagosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<condiciones_pagosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Condiciones_pagosCountAggregateInputType | true
    }

  export interface condiciones_pagosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['condiciones_pagos'], meta: { name: 'condiciones_pagos' } }
    /**
     * Find zero or one Condiciones_pagos that matches the filter.
     * @param {condiciones_pagosFindUniqueArgs} args - Arguments to find a Condiciones_pagos
     * @example
     * // Get one Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends condiciones_pagosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosFindUniqueArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Condiciones_pagos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {condiciones_pagosFindUniqueOrThrowArgs} args - Arguments to find a Condiciones_pagos
     * @example
     * // Get one Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends condiciones_pagosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Condiciones_pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosFindFirstArgs} args - Arguments to find a Condiciones_pagos
     * @example
     * // Get one Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends condiciones_pagosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosFindFirstArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Condiciones_pagos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosFindFirstOrThrowArgs} args - Arguments to find a Condiciones_pagos
     * @example
     * // Get one Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends condiciones_pagosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Condiciones_pagos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findMany()
     * 
     * // Get first 10 Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.findMany({ take: 10 })
     * 
     * // Only select the `condicion_pago_id`
     * const condiciones_pagosWithCondicion_pago_idOnly = await prisma.condiciones_pagos.findMany({ select: { condicion_pago_id: true } })
     * 
    **/
    findMany<T extends condiciones_pagosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Condiciones_pagos.
     * @param {condiciones_pagosCreateArgs} args - Arguments to create a Condiciones_pagos.
     * @example
     * // Create one Condiciones_pagos
     * const Condiciones_pagos = await prisma.condiciones_pagos.create({
     *   data: {
     *     // ... data to create a Condiciones_pagos
     *   }
     * })
     * 
    **/
    create<T extends condiciones_pagosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosCreateArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Condiciones_pagos.
     *     @param {condiciones_pagosCreateManyArgs} args - Arguments to create many Condiciones_pagos.
     *     @example
     *     // Create many Condiciones_pagos
     *     const condiciones_pagos = await prisma.condiciones_pagos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends condiciones_pagosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Condiciones_pagos.
     * @param {condiciones_pagosDeleteArgs} args - Arguments to delete one Condiciones_pagos.
     * @example
     * // Delete one Condiciones_pagos
     * const Condiciones_pagos = await prisma.condiciones_pagos.delete({
     *   where: {
     *     // ... filter to delete one Condiciones_pagos
     *   }
     * })
     * 
    **/
    delete<T extends condiciones_pagosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosDeleteArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Condiciones_pagos.
     * @param {condiciones_pagosUpdateArgs} args - Arguments to update one Condiciones_pagos.
     * @example
     * // Update one Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends condiciones_pagosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosUpdateArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Condiciones_pagos.
     * @param {condiciones_pagosDeleteManyArgs} args - Arguments to filter Condiciones_pagos to delete.
     * @example
     * // Delete a few Condiciones_pagos
     * const { count } = await prisma.condiciones_pagos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends condiciones_pagosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, condiciones_pagosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Condiciones_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends condiciones_pagosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Condiciones_pagos.
     * @param {condiciones_pagosUpsertArgs} args - Arguments to update or create a Condiciones_pagos.
     * @example
     * // Update or create a Condiciones_pagos
     * const condiciones_pagos = await prisma.condiciones_pagos.upsert({
     *   create: {
     *     // ... data to create a Condiciones_pagos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Condiciones_pagos we want to update
     *   }
     * })
    **/
    upsert<T extends condiciones_pagosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, condiciones_pagosUpsertArgs<ExtArgs>>
    ): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Condiciones_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosCountArgs} args - Arguments to filter Condiciones_pagos to count.
     * @example
     * // Count the number of Condiciones_pagos
     * const count = await prisma.condiciones_pagos.count({
     *   where: {
     *     // ... the filter for the Condiciones_pagos we want to count
     *   }
     * })
    **/
    count<T extends condiciones_pagosCountArgs>(
      args?: Subset<T, condiciones_pagosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Condiciones_pagosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Condiciones_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Condiciones_pagosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Condiciones_pagosAggregateArgs>(args: Subset<T, Condiciones_pagosAggregateArgs>): Prisma.PrismaPromise<GetCondiciones_pagosAggregateType<T>>

    /**
     * Group by Condiciones_pagos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {condiciones_pagosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends condiciones_pagosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: condiciones_pagosGroupByArgs['orderBy'] }
        : { orderBy?: condiciones_pagosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, condiciones_pagosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCondiciones_pagosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the condiciones_pagos model
   */
  readonly fields: condiciones_pagosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for condiciones_pagos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__condiciones_pagosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    abastecimientos<T extends condiciones_pagos$abastecimientosArgs<ExtArgs> = {}>(args?: Subset<T, condiciones_pagos$abastecimientosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$abastecimientosPayload<ExtArgs>, T, 'findMany'> | Null>;

    ventas<T extends condiciones_pagos$ventasArgs<ExtArgs> = {}>(args?: Subset<T, condiciones_pagos$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the condiciones_pagos model
   */ 
  interface condiciones_pagosFieldRefs {
    readonly condicion_pago_id: FieldRef<"condiciones_pagos", 'Int'>
    readonly condicion_pago: FieldRef<"condiciones_pagos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * condiciones_pagos findUnique
   */
  export type condiciones_pagosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter, which condiciones_pagos to fetch.
     */
    where: condiciones_pagosWhereUniqueInput
  }

  /**
   * condiciones_pagos findUniqueOrThrow
   */
  export type condiciones_pagosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter, which condiciones_pagos to fetch.
     */
    where: condiciones_pagosWhereUniqueInput
  }

  /**
   * condiciones_pagos findFirst
   */
  export type condiciones_pagosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter, which condiciones_pagos to fetch.
     */
    where?: condiciones_pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of condiciones_pagos to fetch.
     */
    orderBy?: condiciones_pagosOrderByWithRelationInput | condiciones_pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for condiciones_pagos.
     */
    cursor?: condiciones_pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` condiciones_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` condiciones_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of condiciones_pagos.
     */
    distinct?: Condiciones_pagosScalarFieldEnum | Condiciones_pagosScalarFieldEnum[]
  }

  /**
   * condiciones_pagos findFirstOrThrow
   */
  export type condiciones_pagosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter, which condiciones_pagos to fetch.
     */
    where?: condiciones_pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of condiciones_pagos to fetch.
     */
    orderBy?: condiciones_pagosOrderByWithRelationInput | condiciones_pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for condiciones_pagos.
     */
    cursor?: condiciones_pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` condiciones_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` condiciones_pagos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of condiciones_pagos.
     */
    distinct?: Condiciones_pagosScalarFieldEnum | Condiciones_pagosScalarFieldEnum[]
  }

  /**
   * condiciones_pagos findMany
   */
  export type condiciones_pagosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter, which condiciones_pagos to fetch.
     */
    where?: condiciones_pagosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of condiciones_pagos to fetch.
     */
    orderBy?: condiciones_pagosOrderByWithRelationInput | condiciones_pagosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing condiciones_pagos.
     */
    cursor?: condiciones_pagosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` condiciones_pagos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` condiciones_pagos.
     */
    skip?: number
    distinct?: Condiciones_pagosScalarFieldEnum | Condiciones_pagosScalarFieldEnum[]
  }

  /**
   * condiciones_pagos create
   */
  export type condiciones_pagosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * The data needed to create a condiciones_pagos.
     */
    data: XOR<condiciones_pagosCreateInput, condiciones_pagosUncheckedCreateInput>
  }

  /**
   * condiciones_pagos createMany
   */
  export type condiciones_pagosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many condiciones_pagos.
     */
    data: condiciones_pagosCreateManyInput | condiciones_pagosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * condiciones_pagos update
   */
  export type condiciones_pagosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * The data needed to update a condiciones_pagos.
     */
    data: XOR<condiciones_pagosUpdateInput, condiciones_pagosUncheckedUpdateInput>
    /**
     * Choose, which condiciones_pagos to update.
     */
    where: condiciones_pagosWhereUniqueInput
  }

  /**
   * condiciones_pagos updateMany
   */
  export type condiciones_pagosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update condiciones_pagos.
     */
    data: XOR<condiciones_pagosUpdateManyMutationInput, condiciones_pagosUncheckedUpdateManyInput>
    /**
     * Filter which condiciones_pagos to update
     */
    where?: condiciones_pagosWhereInput
  }

  /**
   * condiciones_pagos upsert
   */
  export type condiciones_pagosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * The filter to search for the condiciones_pagos to update in case it exists.
     */
    where: condiciones_pagosWhereUniqueInput
    /**
     * In case the condiciones_pagos found by the `where` argument doesn't exist, create a new condiciones_pagos with this data.
     */
    create: XOR<condiciones_pagosCreateInput, condiciones_pagosUncheckedCreateInput>
    /**
     * In case the condiciones_pagos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<condiciones_pagosUpdateInput, condiciones_pagosUncheckedUpdateInput>
  }

  /**
   * condiciones_pagos delete
   */
  export type condiciones_pagosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    /**
     * Filter which condiciones_pagos to delete.
     */
    where: condiciones_pagosWhereUniqueInput
  }

  /**
   * condiciones_pagos deleteMany
   */
  export type condiciones_pagosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which condiciones_pagos to delete
     */
    where?: condiciones_pagosWhereInput
  }

  /**
   * condiciones_pagos.abastecimientos
   */
  export type condiciones_pagos$abastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the abastecimientos
     */
    select?: abastecimientosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: abastecimientosInclude<ExtArgs> | null
    where?: abastecimientosWhereInput
    orderBy?: abastecimientosOrderByWithRelationInput | abastecimientosOrderByWithRelationInput[]
    cursor?: abastecimientosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AbastecimientosScalarFieldEnum | AbastecimientosScalarFieldEnum[]
  }

  /**
   * condiciones_pagos.ventas
   */
  export type condiciones_pagos$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    cursor?: ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * condiciones_pagos without action
   */
  export type condiciones_pagosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
  }


  /**
   * Model ventas
   */

  export type AggregateVentas = {
    _count: VentasCountAggregateOutputType | null
    _avg: VentasAvgAggregateOutputType | null
    _sum: VentasSumAggregateOutputType | null
    _min: VentasMinAggregateOutputType | null
    _max: VentasMaxAggregateOutputType | null
  }

  export type VentasAvgAggregateOutputType = {
    venta_id: number | null
    client_id: number | null
    cantidad: number | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    preciovent: number | null
    user_id: number | null
    active: number | null
  }

  export type VentasSumAggregateOutputType = {
    venta_id: number | null
    client_id: number | null
    cantidad: number | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    preciovent: number | null
    user_id: number | null
    active: number | null
  }

  export type VentasMinAggregateOutputType = {
    venta_id: number | null
    client_id: number | null
    folio: string | null
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date | null
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number | null
    unidad: string | null
    concepto: string | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    cfdi: string | null
    tipoCfdi: string | null
    preciovent: number | null
    aclaracion: string | null
    tipocomplemento: string | null
    unidaddemedida: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type VentasMaxAggregateOutputType = {
    venta_id: number | null
    client_id: number | null
    folio: string | null
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date | null
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number | null
    unidad: string | null
    concepto: string | null
    preciounitario: number | null
    importe: number | null
    ivaaplicado: number | null
    tipo_modena_id: number | null
    condicion_pago_id: number | null
    cfdi: string | null
    tipoCfdi: string | null
    preciovent: number | null
    aclaracion: string | null
    tipocomplemento: string | null
    unidaddemedida: string | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type VentasCountAggregateOutputType = {
    venta_id: number
    client_id: number
    folio: number
    serie: number
    folio_fiscal: number
    fecha_emision: number
    fecha_timbrado: number
    lugar_expedicion: number
    exportacion: number
    uso: number
    cantidad: number
    unidad: number
    concepto: number
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id: number
    cfdi: number
    tipoCfdi: number
    preciovent: number
    aclaracion: number
    tipocomplemento: number
    unidaddemedida: number
    user_id: number
    date: number
    active: number
    _all: number
  }


  export type VentasAvgAggregateInputType = {
    venta_id?: true
    client_id?: true
    cantidad?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    preciovent?: true
    user_id?: true
    active?: true
  }

  export type VentasSumAggregateInputType = {
    venta_id?: true
    client_id?: true
    cantidad?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    preciovent?: true
    user_id?: true
    active?: true
  }

  export type VentasMinAggregateInputType = {
    venta_id?: true
    client_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type VentasMaxAggregateInputType = {
    venta_id?: true
    client_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type VentasCountAggregateInputType = {
    venta_id?: true
    client_id?: true
    folio?: true
    serie?: true
    folio_fiscal?: true
    fecha_emision?: true
    fecha_timbrado?: true
    lugar_expedicion?: true
    exportacion?: true
    uso?: true
    cantidad?: true
    unidad?: true
    concepto?: true
    preciounitario?: true
    importe?: true
    ivaaplicado?: true
    tipo_modena_id?: true
    condicion_pago_id?: true
    cfdi?: true
    tipoCfdi?: true
    preciovent?: true
    aclaracion?: true
    tipocomplemento?: true
    unidaddemedida?: true
    user_id?: true
    date?: true
    active?: true
    _all?: true
  }

  export type VentasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ventas to aggregate.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ventas
    **/
    _count?: true | VentasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentasMaxAggregateInputType
  }

  export type GetVentasAggregateType<T extends VentasAggregateArgs> = {
        [P in keyof T & keyof AggregateVentas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentas[P]>
      : GetScalarType<T[P], AggregateVentas[P]>
  }




  export type ventasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithAggregationInput | ventasOrderByWithAggregationInput[]
    by: VentasScalarFieldEnum[] | VentasScalarFieldEnum
    having?: ventasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentasCountAggregateInputType | true
    _avg?: VentasAvgAggregateInputType
    _sum?: VentasSumAggregateInputType
    _min?: VentasMinAggregateInputType
    _max?: VentasMaxAggregateInputType
  }

  export type VentasGroupByOutputType = {
    venta_id: number
    client_id: number
    folio: string
    serie: string | null
    folio_fiscal: string | null
    fecha_emision: Date
    fecha_timbrado: Date | null
    lugar_expedicion: string | null
    exportacion: string | null
    uso: string | null
    cantidad: number
    unidad: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date
    active: number | null
    _count: VentasCountAggregateOutputType | null
    _avg: VentasAvgAggregateOutputType | null
    _sum: VentasSumAggregateOutputType | null
    _min: VentasMinAggregateOutputType | null
    _max: VentasMaxAggregateOutputType | null
  }

  type GetVentasGroupByPayload<T extends ventasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentasGroupByOutputType[P]>
            : GetScalarType<T[P], VentasGroupByOutputType[P]>
        }
      >
    >


  export type ventasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    venta_id?: boolean
    client_id?: boolean
    folio?: boolean
    serie?: boolean
    folio_fiscal?: boolean
    fecha_emision?: boolean
    fecha_timbrado?: boolean
    lugar_expedicion?: boolean
    exportacion?: boolean
    uso?: boolean
    cantidad?: boolean
    unidad?: boolean
    concepto?: boolean
    preciounitario?: boolean
    importe?: boolean
    ivaaplicado?: boolean
    tipo_modena_id?: boolean
    condicion_pago_id?: boolean
    cfdi?: boolean
    tipoCfdi?: boolean
    preciovent?: boolean
    aclaracion?: boolean
    tipocomplemento?: boolean
    unidaddemedida?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
    clients?: boolean | ventas$clientsArgs<ExtArgs>
    users?: boolean | ventas$usersArgs<ExtArgs>
    tipos_monedas?: boolean | ventas$tipos_monedasArgs<ExtArgs>
    condiciones_pagos?: boolean | ventas$condiciones_pagosArgs<ExtArgs>
  }, ExtArgs["result"]["ventas"]>

  export type ventasSelectScalar = {
    venta_id?: boolean
    client_id?: boolean
    folio?: boolean
    serie?: boolean
    folio_fiscal?: boolean
    fecha_emision?: boolean
    fecha_timbrado?: boolean
    lugar_expedicion?: boolean
    exportacion?: boolean
    uso?: boolean
    cantidad?: boolean
    unidad?: boolean
    concepto?: boolean
    preciounitario?: boolean
    importe?: boolean
    ivaaplicado?: boolean
    tipo_modena_id?: boolean
    condicion_pago_id?: boolean
    cfdi?: boolean
    tipoCfdi?: boolean
    preciovent?: boolean
    aclaracion?: boolean
    tipocomplemento?: boolean
    unidaddemedida?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
  }


  export type ventasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | ventas$clientsArgs<ExtArgs>
    users?: boolean | ventas$usersArgs<ExtArgs>
    tipos_monedas?: boolean | ventas$tipos_monedasArgs<ExtArgs>
    condiciones_pagos?: boolean | ventas$condiciones_pagosArgs<ExtArgs>
  }


  export type $ventasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ventas"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
      tipos_monedas: Prisma.$tipos_monedasPayload<ExtArgs> | null
      condiciones_pagos: Prisma.$condiciones_pagosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      venta_id: number
      client_id: number
      folio: string
      serie: string | null
      folio_fiscal: string | null
      fecha_emision: Date
      fecha_timbrado: Date | null
      lugar_expedicion: string | null
      exportacion: string | null
      uso: string | null
      cantidad: number
      unidad: string | null
      concepto: string
      preciounitario: number
      importe: number
      ivaaplicado: number
      tipo_modena_id: number
      condicion_pago_id: number | null
      cfdi: string
      tipoCfdi: string
      preciovent: number
      aclaracion: string
      tipocomplemento: string
      unidaddemedida: string
      user_id: number
      date: Date
      active: number | null
    }, ExtArgs["result"]["ventas"]>
    composites: {}
  }


  type ventasGetPayload<S extends boolean | null | undefined | ventasDefaultArgs> = $Result.GetResult<Prisma.$ventasPayload, S>

  type ventasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ventasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: VentasCountAggregateInputType | true
    }

  export interface ventasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ventas'], meta: { name: 'ventas' } }
    /**
     * Find zero or one Ventas that matches the filter.
     * @param {ventasFindUniqueArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ventasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ventasFindUniqueArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Ventas that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {ventasFindUniqueOrThrowArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ventasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindFirstArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ventasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasFindFirstArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Ventas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindFirstOrThrowArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ventasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.ventas.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.ventas.findMany({ take: 10 })
     * 
     * // Only select the `venta_id`
     * const ventasWithVenta_idOnly = await prisma.ventas.findMany({ select: { venta_id: true } })
     * 
    **/
    findMany<T extends ventasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Ventas.
     * @param {ventasCreateArgs} args - Arguments to create a Ventas.
     * @example
     * // Create one Ventas
     * const Ventas = await prisma.ventas.create({
     *   data: {
     *     // ... data to create a Ventas
     *   }
     * })
     * 
    **/
    create<T extends ventasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ventasCreateArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Ventas.
     *     @param {ventasCreateManyArgs} args - Arguments to create many Ventas.
     *     @example
     *     // Create many Ventas
     *     const ventas = await prisma.ventas.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends ventasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Ventas.
     * @param {ventasDeleteArgs} args - Arguments to delete one Ventas.
     * @example
     * // Delete one Ventas
     * const Ventas = await prisma.ventas.delete({
     *   where: {
     *     // ... filter to delete one Ventas
     *   }
     * })
     * 
    **/
    delete<T extends ventasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ventasDeleteArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Ventas.
     * @param {ventasUpdateArgs} args - Arguments to update one Ventas.
     * @example
     * // Update one Ventas
     * const ventas = await prisma.ventas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ventasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ventasUpdateArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Ventas.
     * @param {ventasDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.ventas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ventasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ventasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const ventas = await prisma.ventas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ventasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ventasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Ventas.
     * @param {ventasUpsertArgs} args - Arguments to update or create a Ventas.
     * @example
     * // Update or create a Ventas
     * const ventas = await prisma.ventas.upsert({
     *   create: {
     *     // ... data to create a Ventas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ventas we want to update
     *   }
     * })
    **/
    upsert<T extends ventasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ventasUpsertArgs<ExtArgs>>
    ): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.ventas.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends ventasCountArgs>(
      args?: Subset<T, ventasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentasAggregateArgs>(args: Subset<T, VentasAggregateArgs>): Prisma.PrismaPromise<GetVentasAggregateType<T>>

    /**
     * Group by Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ventasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ventasGroupByArgs['orderBy'] }
        : { orderBy?: ventasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ventasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ventas model
   */
  readonly fields: ventasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ventas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ventasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    clients<T extends ventas$clientsArgs<ExtArgs> = {}>(args?: Subset<T, ventas$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    users<T extends ventas$usersArgs<ExtArgs> = {}>(args?: Subset<T, ventas$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tipos_monedas<T extends ventas$tipos_monedasArgs<ExtArgs> = {}>(args?: Subset<T, ventas$tipos_monedasArgs<ExtArgs>>): Prisma__tipos_monedasClient<$Result.GetResult<Prisma.$tipos_monedasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    condiciones_pagos<T extends ventas$condiciones_pagosArgs<ExtArgs> = {}>(args?: Subset<T, ventas$condiciones_pagosArgs<ExtArgs>>): Prisma__condiciones_pagosClient<$Result.GetResult<Prisma.$condiciones_pagosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ventas model
   */ 
  interface ventasFieldRefs {
    readonly venta_id: FieldRef<"ventas", 'Int'>
    readonly client_id: FieldRef<"ventas", 'Int'>
    readonly folio: FieldRef<"ventas", 'String'>
    readonly serie: FieldRef<"ventas", 'String'>
    readonly folio_fiscal: FieldRef<"ventas", 'String'>
    readonly fecha_emision: FieldRef<"ventas", 'DateTime'>
    readonly fecha_timbrado: FieldRef<"ventas", 'DateTime'>
    readonly lugar_expedicion: FieldRef<"ventas", 'String'>
    readonly exportacion: FieldRef<"ventas", 'String'>
    readonly uso: FieldRef<"ventas", 'String'>
    readonly cantidad: FieldRef<"ventas", 'Float'>
    readonly unidad: FieldRef<"ventas", 'String'>
    readonly concepto: FieldRef<"ventas", 'String'>
    readonly preciounitario: FieldRef<"ventas", 'Float'>
    readonly importe: FieldRef<"ventas", 'Float'>
    readonly ivaaplicado: FieldRef<"ventas", 'Float'>
    readonly tipo_modena_id: FieldRef<"ventas", 'Int'>
    readonly condicion_pago_id: FieldRef<"ventas", 'Int'>
    readonly cfdi: FieldRef<"ventas", 'String'>
    readonly tipoCfdi: FieldRef<"ventas", 'String'>
    readonly preciovent: FieldRef<"ventas", 'Float'>
    readonly aclaracion: FieldRef<"ventas", 'String'>
    readonly tipocomplemento: FieldRef<"ventas", 'String'>
    readonly unidaddemedida: FieldRef<"ventas", 'String'>
    readonly user_id: FieldRef<"ventas", 'Int'>
    readonly date: FieldRef<"ventas", 'DateTime'>
    readonly active: FieldRef<"ventas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ventas findUnique
   */
  export type ventasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas findUniqueOrThrow
   */
  export type ventasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas findFirst
   */
  export type ventasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas findFirstOrThrow
   */
  export type ventasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas findMany
   */
  export type ventasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas create
   */
  export type ventasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The data needed to create a ventas.
     */
    data: XOR<ventasCreateInput, ventasUncheckedCreateInput>
  }

  /**
   * ventas createMany
   */
  export type ventasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ventas.
     */
    data: ventasCreateManyInput | ventasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ventas update
   */
  export type ventasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The data needed to update a ventas.
     */
    data: XOR<ventasUpdateInput, ventasUncheckedUpdateInput>
    /**
     * Choose, which ventas to update.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas updateMany
   */
  export type ventasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ventas.
     */
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyInput>
    /**
     * Filter which ventas to update
     */
    where?: ventasWhereInput
  }

  /**
   * ventas upsert
   */
  export type ventasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The filter to search for the ventas to update in case it exists.
     */
    where: ventasWhereUniqueInput
    /**
     * In case the ventas found by the `where` argument doesn't exist, create a new ventas with this data.
     */
    create: XOR<ventasCreateInput, ventasUncheckedCreateInput>
    /**
     * In case the ventas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ventasUpdateInput, ventasUncheckedUpdateInput>
  }

  /**
   * ventas delete
   */
  export type ventasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter which ventas to delete.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas deleteMany
   */
  export type ventasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ventas to delete
     */
    where?: ventasWhereInput
  }

  /**
   * ventas.clients
   */
  export type ventas$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * ventas.users
   */
  export type ventas$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * ventas.tipos_monedas
   */
  export type ventas$tipos_monedasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_monedas
     */
    select?: tipos_monedasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_monedasInclude<ExtArgs> | null
    where?: tipos_monedasWhereInput
  }

  /**
   * ventas.condiciones_pagos
   */
  export type ventas$condiciones_pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the condiciones_pagos
     */
    select?: condiciones_pagosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: condiciones_pagosInclude<ExtArgs> | null
    where?: condiciones_pagosWhereInput
  }

  /**
   * ventas without action
   */
  export type ventasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
  }


  /**
   * Model reportes
   */

  export type AggregateReportes = {
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  export type ReportesAvgAggregateOutputType = {
    reporte_id: number | null
    numeropozos: number | null
    numerotanques: number | null
    numeroductosentradasalida: number | null
    numeroductostransportedistribucion: number | null
    numerodispensarios: number | null
    composdepropanoengaslp: number | null
    composdebutanoengaslp: number | null
    volumenexistenciasees: number | null
    numeroregistro: number | null
    tipoevento: number | null
    tipo_reporte_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ReportesSumAggregateOutputType = {
    reporte_id: number | null
    numeropozos: number | null
    numerotanques: number | null
    numeroductosentradasalida: number | null
    numeroductostransportedistribucion: number | null
    numerodispensarios: number | null
    composdepropanoengaslp: number | null
    composdebutanoengaslp: number | null
    volumenexistenciasees: number | null
    numeroregistro: number | null
    tipoevento: number | null
    tipo_reporte_id: number | null
    user_id: number | null
    active: number | null
  }

  export type ReportesMinAggregateOutputType = {
    reporte_id: number | null
    version: string | null
    rfccontribuyente: string | null
    rfcrepresentantelegal: string | null
    rfcproveedor: string | null
    caracter: string | null
    modalidadpermiso: string | null
    numpermiso: string | null
    claveinstalacion: string | null
    descripcioninstalacion: string | null
    numeropozos: number | null
    numerotanques: number | null
    numeroductosentradasalida: number | null
    numeroductostransportedistribucion: number | null
    numerodispensarios: number | null
    claveproducto: string | null
    composdepropanoengaslp: number | null
    composdebutanoengaslp: number | null
    volumenexistenciasees: number | null
    fechayhoraestamedicionmes: Date | null
    numeroregistro: number | null
    usuarioresponsable: string | null
    tipoevento: number | null
    descripcionevento: string | null
    fecha_inicio: Date | null
    fecha_terminacion: Date | null
    tipo_reporte_id: number | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ReportesMaxAggregateOutputType = {
    reporte_id: number | null
    version: string | null
    rfccontribuyente: string | null
    rfcrepresentantelegal: string | null
    rfcproveedor: string | null
    caracter: string | null
    modalidadpermiso: string | null
    numpermiso: string | null
    claveinstalacion: string | null
    descripcioninstalacion: string | null
    numeropozos: number | null
    numerotanques: number | null
    numeroductosentradasalida: number | null
    numeroductostransportedistribucion: number | null
    numerodispensarios: number | null
    claveproducto: string | null
    composdepropanoengaslp: number | null
    composdebutanoengaslp: number | null
    volumenexistenciasees: number | null
    fechayhoraestamedicionmes: Date | null
    numeroregistro: number | null
    usuarioresponsable: string | null
    tipoevento: number | null
    descripcionevento: string | null
    fecha_inicio: Date | null
    fecha_terminacion: Date | null
    tipo_reporte_id: number | null
    user_id: number | null
    date: Date | null
    active: number | null
  }

  export type ReportesCountAggregateOutputType = {
    reporte_id: number
    version: number
    rfccontribuyente: number
    rfcrepresentantelegal: number
    rfcproveedor: number
    caracter: number
    modalidadpermiso: number
    numpermiso: number
    claveinstalacion: number
    descripcioninstalacion: number
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: number
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: number
    numeroregistro: number
    usuarioresponsable: number
    tipoevento: number
    descripcionevento: number
    fecha_inicio: number
    fecha_terminacion: number
    tipo_reporte_id: number
    user_id: number
    date: number
    active: number
    _all: number
  }


  export type ReportesAvgAggregateInputType = {
    reporte_id?: true
    numeropozos?: true
    numerotanques?: true
    numeroductosentradasalida?: true
    numeroductostransportedistribucion?: true
    numerodispensarios?: true
    composdepropanoengaslp?: true
    composdebutanoengaslp?: true
    volumenexistenciasees?: true
    numeroregistro?: true
    tipoevento?: true
    tipo_reporte_id?: true
    user_id?: true
    active?: true
  }

  export type ReportesSumAggregateInputType = {
    reporte_id?: true
    numeropozos?: true
    numerotanques?: true
    numeroductosentradasalida?: true
    numeroductostransportedistribucion?: true
    numerodispensarios?: true
    composdepropanoengaslp?: true
    composdebutanoengaslp?: true
    volumenexistenciasees?: true
    numeroregistro?: true
    tipoevento?: true
    tipo_reporte_id?: true
    user_id?: true
    active?: true
  }

  export type ReportesMinAggregateInputType = {
    reporte_id?: true
    version?: true
    rfccontribuyente?: true
    rfcrepresentantelegal?: true
    rfcproveedor?: true
    caracter?: true
    modalidadpermiso?: true
    numpermiso?: true
    claveinstalacion?: true
    descripcioninstalacion?: true
    numeropozos?: true
    numerotanques?: true
    numeroductosentradasalida?: true
    numeroductostransportedistribucion?: true
    numerodispensarios?: true
    claveproducto?: true
    composdepropanoengaslp?: true
    composdebutanoengaslp?: true
    volumenexistenciasees?: true
    fechayhoraestamedicionmes?: true
    numeroregistro?: true
    usuarioresponsable?: true
    tipoevento?: true
    descripcionevento?: true
    fecha_inicio?: true
    fecha_terminacion?: true
    tipo_reporte_id?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ReportesMaxAggregateInputType = {
    reporte_id?: true
    version?: true
    rfccontribuyente?: true
    rfcrepresentantelegal?: true
    rfcproveedor?: true
    caracter?: true
    modalidadpermiso?: true
    numpermiso?: true
    claveinstalacion?: true
    descripcioninstalacion?: true
    numeropozos?: true
    numerotanques?: true
    numeroductosentradasalida?: true
    numeroductostransportedistribucion?: true
    numerodispensarios?: true
    claveproducto?: true
    composdepropanoengaslp?: true
    composdebutanoengaslp?: true
    volumenexistenciasees?: true
    fechayhoraestamedicionmes?: true
    numeroregistro?: true
    usuarioresponsable?: true
    tipoevento?: true
    descripcionevento?: true
    fecha_inicio?: true
    fecha_terminacion?: true
    tipo_reporte_id?: true
    user_id?: true
    date?: true
    active?: true
  }

  export type ReportesCountAggregateInputType = {
    reporte_id?: true
    version?: true
    rfccontribuyente?: true
    rfcrepresentantelegal?: true
    rfcproveedor?: true
    caracter?: true
    modalidadpermiso?: true
    numpermiso?: true
    claveinstalacion?: true
    descripcioninstalacion?: true
    numeropozos?: true
    numerotanques?: true
    numeroductosentradasalida?: true
    numeroductostransportedistribucion?: true
    numerodispensarios?: true
    claveproducto?: true
    composdepropanoengaslp?: true
    composdebutanoengaslp?: true
    volumenexistenciasees?: true
    fechayhoraestamedicionmes?: true
    numeroregistro?: true
    usuarioresponsable?: true
    tipoevento?: true
    descripcionevento?: true
    fecha_inicio?: true
    fecha_terminacion?: true
    tipo_reporte_id?: true
    user_id?: true
    date?: true
    active?: true
    _all?: true
  }

  export type ReportesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes to aggregate.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportes
    **/
    _count?: true | ReportesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportesMaxAggregateInputType
  }

  export type GetReportesAggregateType<T extends ReportesAggregateArgs> = {
        [P in keyof T & keyof AggregateReportes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportes[P]>
      : GetScalarType<T[P], AggregateReportes[P]>
  }




  export type reportesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportesWhereInput
    orderBy?: reportesOrderByWithAggregationInput | reportesOrderByWithAggregationInput[]
    by: ReportesScalarFieldEnum[] | ReportesScalarFieldEnum
    having?: reportesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportesCountAggregateInputType | true
    _avg?: ReportesAvgAggregateInputType
    _sum?: ReportesSumAggregateInputType
    _min?: ReportesMinAggregateInputType
    _max?: ReportesMaxAggregateInputType
  }

  export type ReportesGroupByOutputType = {
    reporte_id: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date
    fecha_terminacion: Date
    tipo_reporte_id: number | null
    user_id: number
    date: Date
    active: number | null
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  type GetReportesGroupByPayload<T extends reportesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportesGroupByOutputType[P]>
            : GetScalarType<T[P], ReportesGroupByOutputType[P]>
        }
      >
    >


  export type reportesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    reporte_id?: boolean
    version?: boolean
    rfccontribuyente?: boolean
    rfcrepresentantelegal?: boolean
    rfcproveedor?: boolean
    caracter?: boolean
    modalidadpermiso?: boolean
    numpermiso?: boolean
    claveinstalacion?: boolean
    descripcioninstalacion?: boolean
    numeropozos?: boolean
    numerotanques?: boolean
    numeroductosentradasalida?: boolean
    numeroductostransportedistribucion?: boolean
    numerodispensarios?: boolean
    claveproducto?: boolean
    composdepropanoengaslp?: boolean
    composdebutanoengaslp?: boolean
    volumenexistenciasees?: boolean
    fechayhoraestamedicionmes?: boolean
    numeroregistro?: boolean
    usuarioresponsable?: boolean
    tipoevento?: boolean
    descripcionevento?: boolean
    fecha_inicio?: boolean
    fecha_terminacion?: boolean
    tipo_reporte_id?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
    users?: boolean | reportes$usersArgs<ExtArgs>
    tipos_reporte?: boolean | reportes$tipos_reporteArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type reportesSelectScalar = {
    reporte_id?: boolean
    version?: boolean
    rfccontribuyente?: boolean
    rfcrepresentantelegal?: boolean
    rfcproveedor?: boolean
    caracter?: boolean
    modalidadpermiso?: boolean
    numpermiso?: boolean
    claveinstalacion?: boolean
    descripcioninstalacion?: boolean
    numeropozos?: boolean
    numerotanques?: boolean
    numeroductosentradasalida?: boolean
    numeroductostransportedistribucion?: boolean
    numerodispensarios?: boolean
    claveproducto?: boolean
    composdepropanoengaslp?: boolean
    composdebutanoengaslp?: boolean
    volumenexistenciasees?: boolean
    fechayhoraestamedicionmes?: boolean
    numeroregistro?: boolean
    usuarioresponsable?: boolean
    tipoevento?: boolean
    descripcionevento?: boolean
    fecha_inicio?: boolean
    fecha_terminacion?: boolean
    tipo_reporte_id?: boolean
    user_id?: boolean
    date?: boolean
    active?: boolean
  }


  export type reportesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | reportes$usersArgs<ExtArgs>
    tipos_reporte?: boolean | reportes$tipos_reporteArgs<ExtArgs>
  }


  export type $reportesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportes"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
      tipos_reporte: Prisma.$tipos_reportePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      reporte_id: number
      version: string
      rfccontribuyente: string
      rfcrepresentantelegal: string
      rfcproveedor: string
      caracter: string
      modalidadpermiso: string
      numpermiso: string
      claveinstalacion: string
      descripcioninstalacion: string
      numeropozos: number
      numerotanques: number
      numeroductosentradasalida: number
      numeroductostransportedistribucion: number
      numerodispensarios: number
      claveproducto: string
      composdepropanoengaslp: number
      composdebutanoengaslp: number
      volumenexistenciasees: number
      fechayhoraestamedicionmes: Date
      numeroregistro: number
      usuarioresponsable: string
      tipoevento: number
      descripcionevento: string
      fecha_inicio: Date
      fecha_terminacion: Date
      tipo_reporte_id: number | null
      user_id: number
      date: Date
      active: number | null
    }, ExtArgs["result"]["reportes"]>
    composites: {}
  }


  type reportesGetPayload<S extends boolean | null | undefined | reportesDefaultArgs> = $Result.GetResult<Prisma.$reportesPayload, S>

  type reportesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<reportesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReportesCountAggregateInputType | true
    }

  export interface reportesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportes'], meta: { name: 'reportes' } }
    /**
     * Find zero or one Reportes that matches the filter.
     * @param {reportesFindUniqueArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends reportesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, reportesFindUniqueArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Reportes that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {reportesFindUniqueOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends reportesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindFirstArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends reportesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesFindFirstArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Reportes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindFirstOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends reportesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reportes
     * const reportes = await prisma.reportes.findMany()
     * 
     * // Get first 10 Reportes
     * const reportes = await prisma.reportes.findMany({ take: 10 })
     * 
     * // Only select the `reporte_id`
     * const reportesWithReporte_idOnly = await prisma.reportes.findMany({ select: { reporte_id: true } })
     * 
    **/
    findMany<T extends reportesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Reportes.
     * @param {reportesCreateArgs} args - Arguments to create a Reportes.
     * @example
     * // Create one Reportes
     * const Reportes = await prisma.reportes.create({
     *   data: {
     *     // ... data to create a Reportes
     *   }
     * })
     * 
    **/
    create<T extends reportesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, reportesCreateArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Reportes.
     *     @param {reportesCreateManyArgs} args - Arguments to create many Reportes.
     *     @example
     *     // Create many Reportes
     *     const reportes = await prisma.reportes.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends reportesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Reportes.
     * @param {reportesDeleteArgs} args - Arguments to delete one Reportes.
     * @example
     * // Delete one Reportes
     * const Reportes = await prisma.reportes.delete({
     *   where: {
     *     // ... filter to delete one Reportes
     *   }
     * })
     * 
    **/
    delete<T extends reportesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, reportesDeleteArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Reportes.
     * @param {reportesUpdateArgs} args - Arguments to update one Reportes.
     * @example
     * // Update one Reportes
     * const reportes = await prisma.reportes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends reportesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, reportesUpdateArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Reportes.
     * @param {reportesDeleteManyArgs} args - Arguments to filter Reportes to delete.
     * @example
     * // Delete a few Reportes
     * const { count } = await prisma.reportes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends reportesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, reportesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reportes
     * const reportes = await prisma.reportes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends reportesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, reportesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Reportes.
     * @param {reportesUpsertArgs} args - Arguments to update or create a Reportes.
     * @example
     * // Update or create a Reportes
     * const reportes = await prisma.reportes.upsert({
     *   create: {
     *     // ... data to create a Reportes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reportes we want to update
     *   }
     * })
    **/
    upsert<T extends reportesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, reportesUpsertArgs<ExtArgs>>
    ): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesCountArgs} args - Arguments to filter Reportes to count.
     * @example
     * // Count the number of Reportes
     * const count = await prisma.reportes.count({
     *   where: {
     *     // ... the filter for the Reportes we want to count
     *   }
     * })
    **/
    count<T extends reportesCountArgs>(
      args?: Subset<T, reportesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportesAggregateArgs>(args: Subset<T, ReportesAggregateArgs>): Prisma.PrismaPromise<GetReportesAggregateType<T>>

    /**
     * Group by Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportesGroupByArgs['orderBy'] }
        : { orderBy?: reportesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportes model
   */
  readonly fields: reportesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    users<T extends reportes$usersArgs<ExtArgs> = {}>(args?: Subset<T, reportes$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    tipos_reporte<T extends reportes$tipos_reporteArgs<ExtArgs> = {}>(args?: Subset<T, reportes$tipos_reporteArgs<ExtArgs>>): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the reportes model
   */ 
  interface reportesFieldRefs {
    readonly reporte_id: FieldRef<"reportes", 'Int'>
    readonly version: FieldRef<"reportes", 'String'>
    readonly rfccontribuyente: FieldRef<"reportes", 'String'>
    readonly rfcrepresentantelegal: FieldRef<"reportes", 'String'>
    readonly rfcproveedor: FieldRef<"reportes", 'String'>
    readonly caracter: FieldRef<"reportes", 'String'>
    readonly modalidadpermiso: FieldRef<"reportes", 'String'>
    readonly numpermiso: FieldRef<"reportes", 'String'>
    readonly claveinstalacion: FieldRef<"reportes", 'String'>
    readonly descripcioninstalacion: FieldRef<"reportes", 'String'>
    readonly numeropozos: FieldRef<"reportes", 'Int'>
    readonly numerotanques: FieldRef<"reportes", 'Int'>
    readonly numeroductosentradasalida: FieldRef<"reportes", 'Int'>
    readonly numeroductostransportedistribucion: FieldRef<"reportes", 'Int'>
    readonly numerodispensarios: FieldRef<"reportes", 'Int'>
    readonly claveproducto: FieldRef<"reportes", 'String'>
    readonly composdepropanoengaslp: FieldRef<"reportes", 'Float'>
    readonly composdebutanoengaslp: FieldRef<"reportes", 'Float'>
    readonly volumenexistenciasees: FieldRef<"reportes", 'Float'>
    readonly fechayhoraestamedicionmes: FieldRef<"reportes", 'DateTime'>
    readonly numeroregistro: FieldRef<"reportes", 'Int'>
    readonly usuarioresponsable: FieldRef<"reportes", 'String'>
    readonly tipoevento: FieldRef<"reportes", 'Int'>
    readonly descripcionevento: FieldRef<"reportes", 'String'>
    readonly fecha_inicio: FieldRef<"reportes", 'DateTime'>
    readonly fecha_terminacion: FieldRef<"reportes", 'DateTime'>
    readonly tipo_reporte_id: FieldRef<"reportes", 'Int'>
    readonly user_id: FieldRef<"reportes", 'Int'>
    readonly date: FieldRef<"reportes", 'DateTime'>
    readonly active: FieldRef<"reportes", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * reportes findUnique
   */
  export type reportesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes findUniqueOrThrow
   */
  export type reportesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes findFirst
   */
  export type reportesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes findFirstOrThrow
   */
  export type reportesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes findMany
   */
  export type reportesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes create
   */
  export type reportesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The data needed to create a reportes.
     */
    data: XOR<reportesCreateInput, reportesUncheckedCreateInput>
  }

  /**
   * reportes createMany
   */
  export type reportesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportes.
     */
    data: reportesCreateManyInput | reportesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportes update
   */
  export type reportesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The data needed to update a reportes.
     */
    data: XOR<reportesUpdateInput, reportesUncheckedUpdateInput>
    /**
     * Choose, which reportes to update.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes updateMany
   */
  export type reportesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportes.
     */
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyInput>
    /**
     * Filter which reportes to update
     */
    where?: reportesWhereInput
  }

  /**
   * reportes upsert
   */
  export type reportesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The filter to search for the reportes to update in case it exists.
     */
    where: reportesWhereUniqueInput
    /**
     * In case the reportes found by the `where` argument doesn't exist, create a new reportes with this data.
     */
    create: XOR<reportesCreateInput, reportesUncheckedCreateInput>
    /**
     * In case the reportes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportesUpdateInput, reportesUncheckedUpdateInput>
  }

  /**
   * reportes delete
   */
  export type reportesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter which reportes to delete.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes deleteMany
   */
  export type reportesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes to delete
     */
    where?: reportesWhereInput
  }

  /**
   * reportes.users
   */
  export type reportes$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * reportes.tipos_reporte
   */
  export type reportes$tipos_reporteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    where?: tipos_reporteWhereInput
  }

  /**
   * reportes without action
   */
  export type reportesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
  }


  /**
   * Model tipos_reporte
   */

  export type AggregateTipos_reporte = {
    _count: Tipos_reporteCountAggregateOutputType | null
    _avg: Tipos_reporteAvgAggregateOutputType | null
    _sum: Tipos_reporteSumAggregateOutputType | null
    _min: Tipos_reporteMinAggregateOutputType | null
    _max: Tipos_reporteMaxAggregateOutputType | null
  }

  export type Tipos_reporteAvgAggregateOutputType = {
    tipo_reporte_id: number | null
  }

  export type Tipos_reporteSumAggregateOutputType = {
    tipo_reporte_id: number | null
  }

  export type Tipos_reporteMinAggregateOutputType = {
    tipo_reporte_id: number | null
    tipo_reporte: string | null
  }

  export type Tipos_reporteMaxAggregateOutputType = {
    tipo_reporte_id: number | null
    tipo_reporte: string | null
  }

  export type Tipos_reporteCountAggregateOutputType = {
    tipo_reporte_id: number
    tipo_reporte: number
    _all: number
  }


  export type Tipos_reporteAvgAggregateInputType = {
    tipo_reporte_id?: true
  }

  export type Tipos_reporteSumAggregateInputType = {
    tipo_reporte_id?: true
  }

  export type Tipos_reporteMinAggregateInputType = {
    tipo_reporte_id?: true
    tipo_reporte?: true
  }

  export type Tipos_reporteMaxAggregateInputType = {
    tipo_reporte_id?: true
    tipo_reporte?: true
  }

  export type Tipos_reporteCountAggregateInputType = {
    tipo_reporte_id?: true
    tipo_reporte?: true
    _all?: true
  }

  export type Tipos_reporteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_reporte to aggregate.
     */
    where?: tipos_reporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_reportes to fetch.
     */
    orderBy?: tipos_reporteOrderByWithRelationInput | tipos_reporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipos_reporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipos_reportes
    **/
    _count?: true | Tipos_reporteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipos_reporteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipos_reporteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipos_reporteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipos_reporteMaxAggregateInputType
  }

  export type GetTipos_reporteAggregateType<T extends Tipos_reporteAggregateArgs> = {
        [P in keyof T & keyof AggregateTipos_reporte]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipos_reporte[P]>
      : GetScalarType<T[P], AggregateTipos_reporte[P]>
  }




  export type tipos_reporteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipos_reporteWhereInput
    orderBy?: tipos_reporteOrderByWithAggregationInput | tipos_reporteOrderByWithAggregationInput[]
    by: Tipos_reporteScalarFieldEnum[] | Tipos_reporteScalarFieldEnum
    having?: tipos_reporteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipos_reporteCountAggregateInputType | true
    _avg?: Tipos_reporteAvgAggregateInputType
    _sum?: Tipos_reporteSumAggregateInputType
    _min?: Tipos_reporteMinAggregateInputType
    _max?: Tipos_reporteMaxAggregateInputType
  }

  export type Tipos_reporteGroupByOutputType = {
    tipo_reporte_id: number
    tipo_reporte: string
    _count: Tipos_reporteCountAggregateOutputType | null
    _avg: Tipos_reporteAvgAggregateOutputType | null
    _sum: Tipos_reporteSumAggregateOutputType | null
    _min: Tipos_reporteMinAggregateOutputType | null
    _max: Tipos_reporteMaxAggregateOutputType | null
  }

  type GetTipos_reporteGroupByPayload<T extends tipos_reporteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipos_reporteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipos_reporteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipos_reporteGroupByOutputType[P]>
            : GetScalarType<T[P], Tipos_reporteGroupByOutputType[P]>
        }
      >
    >


  export type tipos_reporteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_reporte_id?: boolean
    tipo_reporte?: boolean
    reportes?: boolean | tipos_reporte$reportesArgs<ExtArgs>
    _count?: boolean | Tipos_reporteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipos_reporte"]>

  export type tipos_reporteSelectScalar = {
    tipo_reporte_id?: boolean
    tipo_reporte?: boolean
  }


  export type tipos_reporteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | tipos_reporte$reportesArgs<ExtArgs>
    _count?: boolean | Tipos_reporteCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $tipos_reportePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipos_reporte"
    objects: {
      reportes: Prisma.$reportesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tipo_reporte_id: number
      tipo_reporte: string
    }, ExtArgs["result"]["tipos_reporte"]>
    composites: {}
  }


  type tipos_reporteGetPayload<S extends boolean | null | undefined | tipos_reporteDefaultArgs> = $Result.GetResult<Prisma.$tipos_reportePayload, S>

  type tipos_reporteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipos_reporteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tipos_reporteCountAggregateInputType | true
    }

  export interface tipos_reporteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipos_reporte'], meta: { name: 'tipos_reporte' } }
    /**
     * Find zero or one Tipos_reporte that matches the filter.
     * @param {tipos_reporteFindUniqueArgs} args - Arguments to find a Tipos_reporte
     * @example
     * // Get one Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipos_reporteFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteFindUniqueArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipos_reporte that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipos_reporteFindUniqueOrThrowArgs} args - Arguments to find a Tipos_reporte
     * @example
     * // Get one Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipos_reporteFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipos_reporte that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteFindFirstArgs} args - Arguments to find a Tipos_reporte
     * @example
     * // Get one Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipos_reporteFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteFindFirstArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipos_reporte that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteFindFirstOrThrowArgs} args - Arguments to find a Tipos_reporte
     * @example
     * // Get one Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipos_reporteFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipos_reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipos_reportes
     * const tipos_reportes = await prisma.tipos_reporte.findMany()
     * 
     * // Get first 10 Tipos_reportes
     * const tipos_reportes = await prisma.tipos_reporte.findMany({ take: 10 })
     * 
     * // Only select the `tipo_reporte_id`
     * const tipos_reporteWithTipo_reporte_idOnly = await prisma.tipos_reporte.findMany({ select: { tipo_reporte_id: true } })
     * 
    **/
    findMany<T extends tipos_reporteFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipos_reporte.
     * @param {tipos_reporteCreateArgs} args - Arguments to create a Tipos_reporte.
     * @example
     * // Create one Tipos_reporte
     * const Tipos_reporte = await prisma.tipos_reporte.create({
     *   data: {
     *     // ... data to create a Tipos_reporte
     *   }
     * })
     * 
    **/
    create<T extends tipos_reporteCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteCreateArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipos_reportes.
     *     @param {tipos_reporteCreateManyArgs} args - Arguments to create many Tipos_reportes.
     *     @example
     *     // Create many Tipos_reportes
     *     const tipos_reporte = await prisma.tipos_reporte.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipos_reporteCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipos_reporte.
     * @param {tipos_reporteDeleteArgs} args - Arguments to delete one Tipos_reporte.
     * @example
     * // Delete one Tipos_reporte
     * const Tipos_reporte = await prisma.tipos_reporte.delete({
     *   where: {
     *     // ... filter to delete one Tipos_reporte
     *   }
     * })
     * 
    **/
    delete<T extends tipos_reporteDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteDeleteArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipos_reporte.
     * @param {tipos_reporteUpdateArgs} args - Arguments to update one Tipos_reporte.
     * @example
     * // Update one Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipos_reporteUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteUpdateArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipos_reportes.
     * @param {tipos_reporteDeleteManyArgs} args - Arguments to filter Tipos_reportes to delete.
     * @example
     * // Delete a few Tipos_reportes
     * const { count } = await prisma.tipos_reporte.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipos_reporteDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipos_reporteDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipos_reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipos_reportes
     * const tipos_reporte = await prisma.tipos_reporte.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipos_reporteUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipos_reporte.
     * @param {tipos_reporteUpsertArgs} args - Arguments to update or create a Tipos_reporte.
     * @example
     * // Update or create a Tipos_reporte
     * const tipos_reporte = await prisma.tipos_reporte.upsert({
     *   create: {
     *     // ... data to create a Tipos_reporte
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipos_reporte we want to update
     *   }
     * })
    **/
    upsert<T extends tipos_reporteUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tipos_reporteUpsertArgs<ExtArgs>>
    ): Prisma__tipos_reporteClient<$Result.GetResult<Prisma.$tipos_reportePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipos_reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteCountArgs} args - Arguments to filter Tipos_reportes to count.
     * @example
     * // Count the number of Tipos_reportes
     * const count = await prisma.tipos_reporte.count({
     *   where: {
     *     // ... the filter for the Tipos_reportes we want to count
     *   }
     * })
    **/
    count<T extends tipos_reporteCountArgs>(
      args?: Subset<T, tipos_reporteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipos_reporteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipos_reporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipos_reporteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipos_reporteAggregateArgs>(args: Subset<T, Tipos_reporteAggregateArgs>): Prisma.PrismaPromise<GetTipos_reporteAggregateType<T>>

    /**
     * Group by Tipos_reporte.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipos_reporteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipos_reporteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipos_reporteGroupByArgs['orderBy'] }
        : { orderBy?: tipos_reporteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipos_reporteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipos_reporteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipos_reporte model
   */
  readonly fields: tipos_reporteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipos_reporte.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipos_reporteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    reportes<T extends tipos_reporte$reportesArgs<ExtArgs> = {}>(args?: Subset<T, tipos_reporte$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tipos_reporte model
   */ 
  interface tipos_reporteFieldRefs {
    readonly tipo_reporte_id: FieldRef<"tipos_reporte", 'Int'>
    readonly tipo_reporte: FieldRef<"tipos_reporte", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tipos_reporte findUnique
   */
  export type tipos_reporteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter, which tipos_reporte to fetch.
     */
    where: tipos_reporteWhereUniqueInput
  }

  /**
   * tipos_reporte findUniqueOrThrow
   */
  export type tipos_reporteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter, which tipos_reporte to fetch.
     */
    where: tipos_reporteWhereUniqueInput
  }

  /**
   * tipos_reporte findFirst
   */
  export type tipos_reporteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter, which tipos_reporte to fetch.
     */
    where?: tipos_reporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_reportes to fetch.
     */
    orderBy?: tipos_reporteOrderByWithRelationInput | tipos_reporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_reportes.
     */
    cursor?: tipos_reporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_reportes.
     */
    distinct?: Tipos_reporteScalarFieldEnum | Tipos_reporteScalarFieldEnum[]
  }

  /**
   * tipos_reporte findFirstOrThrow
   */
  export type tipos_reporteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter, which tipos_reporte to fetch.
     */
    where?: tipos_reporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_reportes to fetch.
     */
    orderBy?: tipos_reporteOrderByWithRelationInput | tipos_reporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipos_reportes.
     */
    cursor?: tipos_reporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipos_reportes.
     */
    distinct?: Tipos_reporteScalarFieldEnum | Tipos_reporteScalarFieldEnum[]
  }

  /**
   * tipos_reporte findMany
   */
  export type tipos_reporteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter, which tipos_reportes to fetch.
     */
    where?: tipos_reporteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipos_reportes to fetch.
     */
    orderBy?: tipos_reporteOrderByWithRelationInput | tipos_reporteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipos_reportes.
     */
    cursor?: tipos_reporteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipos_reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipos_reportes.
     */
    skip?: number
    distinct?: Tipos_reporteScalarFieldEnum | Tipos_reporteScalarFieldEnum[]
  }

  /**
   * tipos_reporte create
   */
  export type tipos_reporteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * The data needed to create a tipos_reporte.
     */
    data: XOR<tipos_reporteCreateInput, tipos_reporteUncheckedCreateInput>
  }

  /**
   * tipos_reporte createMany
   */
  export type tipos_reporteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipos_reportes.
     */
    data: tipos_reporteCreateManyInput | tipos_reporteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipos_reporte update
   */
  export type tipos_reporteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * The data needed to update a tipos_reporte.
     */
    data: XOR<tipos_reporteUpdateInput, tipos_reporteUncheckedUpdateInput>
    /**
     * Choose, which tipos_reporte to update.
     */
    where: tipos_reporteWhereUniqueInput
  }

  /**
   * tipos_reporte updateMany
   */
  export type tipos_reporteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipos_reportes.
     */
    data: XOR<tipos_reporteUpdateManyMutationInput, tipos_reporteUncheckedUpdateManyInput>
    /**
     * Filter which tipos_reportes to update
     */
    where?: tipos_reporteWhereInput
  }

  /**
   * tipos_reporte upsert
   */
  export type tipos_reporteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * The filter to search for the tipos_reporte to update in case it exists.
     */
    where: tipos_reporteWhereUniqueInput
    /**
     * In case the tipos_reporte found by the `where` argument doesn't exist, create a new tipos_reporte with this data.
     */
    create: XOR<tipos_reporteCreateInput, tipos_reporteUncheckedCreateInput>
    /**
     * In case the tipos_reporte was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipos_reporteUpdateInput, tipos_reporteUncheckedUpdateInput>
  }

  /**
   * tipos_reporte delete
   */
  export type tipos_reporteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
    /**
     * Filter which tipos_reporte to delete.
     */
    where: tipos_reporteWhereUniqueInput
  }

  /**
   * tipos_reporte deleteMany
   */
  export type tipos_reporteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipos_reportes to delete
     */
    where?: tipos_reporteWhereInput
  }

  /**
   * tipos_reporte.reportes
   */
  export type tipos_reporte$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    where?: reportesWhereInput
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    cursor?: reportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * tipos_reporte without action
   */
  export type tipos_reporteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipos_reporte
     */
    select?: tipos_reporteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipos_reporteInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    user_id: 'user_id',
    username: 'username',
    firstname: 'firstname',
    lastname: 'lastname',
    password: 'password',
    email: 'email',
    date: 'date',
    type_user: 'type_user',
    active: 'active'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const ProveedoresScalarFieldEnum: {
    proveedor_id: 'proveedor_id',
    name: 'name',
    rfc: 'rfc',
    direccion: 'direccion',
    tipo_situacion_fiscal: 'tipo_situacion_fiscal',
    permiso: 'permiso',
    phone: 'phone',
    email: 'email',
    user_id: 'user_id',
    date: 'date',
    active: 'active'
  };

  export type ProveedoresScalarFieldEnum = (typeof ProveedoresScalarFieldEnum)[keyof typeof ProveedoresScalarFieldEnum]


  export const ClientsScalarFieldEnum: {
    client_id: 'client_id',
    name: 'name',
    rfc: 'rfc',
    direccion: 'direccion',
    tipo_situacion_fiscal: 'tipo_situacion_fiscal',
    permiso: 'permiso',
    phone: 'phone',
    email: 'email',
    user_id: 'user_id',
    date: 'date',
    active: 'active'
  };

  export type ClientsScalarFieldEnum = (typeof ClientsScalarFieldEnum)[keyof typeof ClientsScalarFieldEnum]


  export const AbastecimientosScalarFieldEnum: {
    abastecimiento_id: 'abastecimiento_id',
    proveedor_id: 'proveedor_id',
    folio: 'folio',
    serie: 'serie',
    folio_fiscal: 'folio_fiscal',
    fecha_emision: 'fecha_emision',
    fecha_timbrado: 'fecha_timbrado',
    lugar_expedicion: 'lugar_expedicion',
    exportacion: 'exportacion',
    uso: 'uso',
    cantidad: 'cantidad',
    unidad: 'unidad',
    concepto: 'concepto',
    preciounitario: 'preciounitario',
    importe: 'importe',
    ivaaplicado: 'ivaaplicado',
    densidad: 'densidad',
    tipo_modena_id: 'tipo_modena_id',
    condicion_pago_id: 'condicion_pago_id',
    cfdi: 'cfdi',
    tipoCfdi: 'tipoCfdi',
    preciovent: 'preciovent',
    aclaracion: 'aclaracion',
    tipocomplemento: 'tipocomplemento',
    unidaddemedida: 'unidaddemedida',
    user_id: 'user_id',
    date: 'date',
    active: 'active'
  };

  export type AbastecimientosScalarFieldEnum = (typeof AbastecimientosScalarFieldEnum)[keyof typeof AbastecimientosScalarFieldEnum]


  export const Tipos_monedasScalarFieldEnum: {
    tipo_modena_id: 'tipo_modena_id',
    tipo_modena: 'tipo_modena'
  };

  export type Tipos_monedasScalarFieldEnum = (typeof Tipos_monedasScalarFieldEnum)[keyof typeof Tipos_monedasScalarFieldEnum]


  export const Condiciones_pagosScalarFieldEnum: {
    condicion_pago_id: 'condicion_pago_id',
    condicion_pago: 'condicion_pago'
  };

  export type Condiciones_pagosScalarFieldEnum = (typeof Condiciones_pagosScalarFieldEnum)[keyof typeof Condiciones_pagosScalarFieldEnum]


  export const VentasScalarFieldEnum: {
    venta_id: 'venta_id',
    client_id: 'client_id',
    folio: 'folio',
    serie: 'serie',
    folio_fiscal: 'folio_fiscal',
    fecha_emision: 'fecha_emision',
    fecha_timbrado: 'fecha_timbrado',
    lugar_expedicion: 'lugar_expedicion',
    exportacion: 'exportacion',
    uso: 'uso',
    cantidad: 'cantidad',
    unidad: 'unidad',
    concepto: 'concepto',
    preciounitario: 'preciounitario',
    importe: 'importe',
    ivaaplicado: 'ivaaplicado',
    tipo_modena_id: 'tipo_modena_id',
    condicion_pago_id: 'condicion_pago_id',
    cfdi: 'cfdi',
    tipoCfdi: 'tipoCfdi',
    preciovent: 'preciovent',
    aclaracion: 'aclaracion',
    tipocomplemento: 'tipocomplemento',
    unidaddemedida: 'unidaddemedida',
    user_id: 'user_id',
    date: 'date',
    active: 'active'
  };

  export type VentasScalarFieldEnum = (typeof VentasScalarFieldEnum)[keyof typeof VentasScalarFieldEnum]


  export const ReportesScalarFieldEnum: {
    reporte_id: 'reporte_id',
    version: 'version',
    rfccontribuyente: 'rfccontribuyente',
    rfcrepresentantelegal: 'rfcrepresentantelegal',
    rfcproveedor: 'rfcproveedor',
    caracter: 'caracter',
    modalidadpermiso: 'modalidadpermiso',
    numpermiso: 'numpermiso',
    claveinstalacion: 'claveinstalacion',
    descripcioninstalacion: 'descripcioninstalacion',
    numeropozos: 'numeropozos',
    numerotanques: 'numerotanques',
    numeroductosentradasalida: 'numeroductosentradasalida',
    numeroductostransportedistribucion: 'numeroductostransportedistribucion',
    numerodispensarios: 'numerodispensarios',
    claveproducto: 'claveproducto',
    composdepropanoengaslp: 'composdepropanoengaslp',
    composdebutanoengaslp: 'composdebutanoengaslp',
    volumenexistenciasees: 'volumenexistenciasees',
    fechayhoraestamedicionmes: 'fechayhoraestamedicionmes',
    numeroregistro: 'numeroregistro',
    usuarioresponsable: 'usuarioresponsable',
    tipoevento: 'tipoevento',
    descripcionevento: 'descripcionevento',
    fecha_inicio: 'fecha_inicio',
    fecha_terminacion: 'fecha_terminacion',
    tipo_reporte_id: 'tipo_reporte_id',
    user_id: 'user_id',
    date: 'date',
    active: 'active'
  };

  export type ReportesScalarFieldEnum = (typeof ReportesScalarFieldEnum)[keyof typeof ReportesScalarFieldEnum]


  export const Tipos_reporteScalarFieldEnum: {
    tipo_reporte_id: 'tipo_reporte_id',
    tipo_reporte: 'tipo_reporte'
  };

  export type Tipos_reporteScalarFieldEnum = (typeof Tipos_reporteScalarFieldEnum)[keyof typeof Tipos_reporteScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_id?: IntFilter<"users"> | number
    username?: StringFilter<"users"> | string
    firstname?: StringFilter<"users"> | string
    lastname?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    email?: StringNullableFilter<"users"> | string | null
    date?: DateTimeNullableFilter<"users"> | Date | string | null
    type_user?: IntFilter<"users"> | number
    active?: IntNullableFilter<"users"> | number | null
    proveedores?: ProveedoresListRelationFilter
    clients?: ClientsListRelationFilter
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
    reportes?: ReportesListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    user_id?: SortOrder
    username?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    type_user?: SortOrder
    active?: SortOrderInput | SortOrder
    proveedores?: proveedoresOrderByRelationAggregateInput
    clients?: clientsOrderByRelationAggregateInput
    abastecimientos?: abastecimientosOrderByRelationAggregateInput
    ventas?: ventasOrderByRelationAggregateInput
    reportes?: reportesOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    user_id?: number
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    username?: StringFilter<"users"> | string
    firstname?: StringFilter<"users"> | string
    lastname?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    email?: StringNullableFilter<"users"> | string | null
    date?: DateTimeNullableFilter<"users"> | Date | string | null
    type_user?: IntFilter<"users"> | number
    active?: IntNullableFilter<"users"> | number | null
    proveedores?: ProveedoresListRelationFilter
    clients?: ClientsListRelationFilter
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
    reportes?: ReportesListRelationFilter
  }, "user_id">

  export type usersOrderByWithAggregationInput = {
    user_id?: SortOrder
    username?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    type_user?: SortOrder
    active?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    user_id?: IntWithAggregatesFilter<"users"> | number
    username?: StringWithAggregatesFilter<"users"> | string
    firstname?: StringWithAggregatesFilter<"users"> | string
    lastname?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    date?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    type_user?: IntWithAggregatesFilter<"users"> | number
    active?: IntNullableWithAggregatesFilter<"users"> | number | null
  }

  export type proveedoresWhereInput = {
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    proveedor_id?: IntFilter<"proveedores"> | number
    name?: StringFilter<"proveedores"> | string
    rfc?: StringFilter<"proveedores"> | string
    direccion?: StringNullableFilter<"proveedores"> | string | null
    tipo_situacion_fiscal?: StringFilter<"proveedores"> | string
    permiso?: StringNullableFilter<"proveedores"> | string | null
    phone?: StringNullableFilter<"proveedores"> | string | null
    email?: StringNullableFilter<"proveedores"> | string | null
    user_id?: IntNullableFilter<"proveedores"> | number | null
    date?: DateTimeNullableFilter<"proveedores"> | Date | string | null
    active?: IntNullableFilter<"proveedores"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    abastecimientos?: AbastecimientosListRelationFilter
  }

  export type proveedoresOrderByWithRelationInput = {
    proveedor_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrderInput | SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    abastecimientos?: abastecimientosOrderByRelationAggregateInput
  }

  export type proveedoresWhereUniqueInput = Prisma.AtLeast<{
    proveedor_id?: number
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    name?: StringFilter<"proveedores"> | string
    rfc?: StringFilter<"proveedores"> | string
    direccion?: StringNullableFilter<"proveedores"> | string | null
    tipo_situacion_fiscal?: StringFilter<"proveedores"> | string
    permiso?: StringNullableFilter<"proveedores"> | string | null
    phone?: StringNullableFilter<"proveedores"> | string | null
    email?: StringNullableFilter<"proveedores"> | string | null
    user_id?: IntNullableFilter<"proveedores"> | number | null
    date?: DateTimeNullableFilter<"proveedores"> | Date | string | null
    active?: IntNullableFilter<"proveedores"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    abastecimientos?: AbastecimientosListRelationFilter
  }, "proveedor_id">

  export type proveedoresOrderByWithAggregationInput = {
    proveedor_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrderInput | SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    _count?: proveedoresCountOrderByAggregateInput
    _avg?: proveedoresAvgOrderByAggregateInput
    _max?: proveedoresMaxOrderByAggregateInput
    _min?: proveedoresMinOrderByAggregateInput
    _sum?: proveedoresSumOrderByAggregateInput
  }

  export type proveedoresScalarWhereWithAggregatesInput = {
    AND?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    OR?: proveedoresScalarWhereWithAggregatesInput[]
    NOT?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    proveedor_id?: IntWithAggregatesFilter<"proveedores"> | number
    name?: StringWithAggregatesFilter<"proveedores"> | string
    rfc?: StringWithAggregatesFilter<"proveedores"> | string
    direccion?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    tipo_situacion_fiscal?: StringWithAggregatesFilter<"proveedores"> | string
    permiso?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    phone?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    email?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    user_id?: IntNullableWithAggregatesFilter<"proveedores"> | number | null
    date?: DateTimeNullableWithAggregatesFilter<"proveedores"> | Date | string | null
    active?: IntNullableWithAggregatesFilter<"proveedores"> | number | null
  }

  export type clientsWhereInput = {
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    client_id?: IntFilter<"clients"> | number
    name?: StringFilter<"clients"> | string
    rfc?: StringFilter<"clients"> | string
    direccion?: StringFilter<"clients"> | string
    tipo_situacion_fiscal?: StringFilter<"clients"> | string
    permiso?: StringNullableFilter<"clients"> | string | null
    phone?: StringNullableFilter<"clients"> | string | null
    email?: StringNullableFilter<"clients"> | string | null
    user_id?: IntFilter<"clients"> | number
    date?: DateTimeNullableFilter<"clients"> | Date | string | null
    active?: IntNullableFilter<"clients"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    ventas?: VentasListRelationFilter
  }

  export type clientsOrderByWithRelationInput = {
    client_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    user_id?: SortOrder
    date?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    ventas?: ventasOrderByRelationAggregateInput
  }

  export type clientsWhereUniqueInput = Prisma.AtLeast<{
    client_id?: number
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    name?: StringFilter<"clients"> | string
    rfc?: StringFilter<"clients"> | string
    direccion?: StringFilter<"clients"> | string
    tipo_situacion_fiscal?: StringFilter<"clients"> | string
    permiso?: StringNullableFilter<"clients"> | string | null
    phone?: StringNullableFilter<"clients"> | string | null
    email?: StringNullableFilter<"clients"> | string | null
    user_id?: IntFilter<"clients"> | number
    date?: DateTimeNullableFilter<"clients"> | Date | string | null
    active?: IntNullableFilter<"clients"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    ventas?: VentasListRelationFilter
  }, "client_id">

  export type clientsOrderByWithAggregationInput = {
    client_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    user_id?: SortOrder
    date?: SortOrderInput | SortOrder
    active?: SortOrderInput | SortOrder
    _count?: clientsCountOrderByAggregateInput
    _avg?: clientsAvgOrderByAggregateInput
    _max?: clientsMaxOrderByAggregateInput
    _min?: clientsMinOrderByAggregateInput
    _sum?: clientsSumOrderByAggregateInput
  }

  export type clientsScalarWhereWithAggregatesInput = {
    AND?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    OR?: clientsScalarWhereWithAggregatesInput[]
    NOT?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    client_id?: IntWithAggregatesFilter<"clients"> | number
    name?: StringWithAggregatesFilter<"clients"> | string
    rfc?: StringWithAggregatesFilter<"clients"> | string
    direccion?: StringWithAggregatesFilter<"clients"> | string
    tipo_situacion_fiscal?: StringWithAggregatesFilter<"clients"> | string
    permiso?: StringNullableWithAggregatesFilter<"clients"> | string | null
    phone?: StringNullableWithAggregatesFilter<"clients"> | string | null
    email?: StringNullableWithAggregatesFilter<"clients"> | string | null
    user_id?: IntWithAggregatesFilter<"clients"> | number
    date?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
    active?: IntNullableWithAggregatesFilter<"clients"> | number | null
  }

  export type abastecimientosWhereInput = {
    AND?: abastecimientosWhereInput | abastecimientosWhereInput[]
    OR?: abastecimientosWhereInput[]
    NOT?: abastecimientosWhereInput | abastecimientosWhereInput[]
    abastecimiento_id?: IntFilter<"abastecimientos"> | number
    proveedor_id?: IntFilter<"abastecimientos"> | number
    folio?: StringFilter<"abastecimientos"> | string
    serie?: StringNullableFilter<"abastecimientos"> | string | null
    folio_fiscal?: StringNullableFilter<"abastecimientos"> | string | null
    fecha_emision?: DateTimeFilter<"abastecimientos"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"abastecimientos"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"abastecimientos"> | string | null
    exportacion?: StringNullableFilter<"abastecimientos"> | string | null
    uso?: StringNullableFilter<"abastecimientos"> | string | null
    cantidad?: FloatFilter<"abastecimientos"> | number
    unidad?: StringNullableFilter<"abastecimientos"> | string | null
    concepto?: StringFilter<"abastecimientos"> | string
    preciounitario?: FloatFilter<"abastecimientos"> | number
    importe?: FloatFilter<"abastecimientos"> | number
    ivaaplicado?: FloatFilter<"abastecimientos"> | number
    densidad?: FloatNullableFilter<"abastecimientos"> | number | null
    tipo_modena_id?: IntFilter<"abastecimientos"> | number
    condicion_pago_id?: IntNullableFilter<"abastecimientos"> | number | null
    cfdi?: StringFilter<"abastecimientos"> | string
    tipoCfdi?: StringFilter<"abastecimientos"> | string
    preciovent?: FloatFilter<"abastecimientos"> | number
    aclaracion?: StringFilter<"abastecimientos"> | string
    tipocomplemento?: StringFilter<"abastecimientos"> | string
    unidaddemedida?: StringFilter<"abastecimientos"> | string
    user_id?: IntFilter<"abastecimientos"> | number
    date?: DateTimeFilter<"abastecimientos"> | Date | string
    active?: IntFilter<"abastecimientos"> | number
    proveedores?: XOR<ProveedoresNullableRelationFilter, proveedoresWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_monedas?: XOR<Tipos_monedasNullableRelationFilter, tipos_monedasWhereInput> | null
    condiciones_pagos?: XOR<Condiciones_pagosNullableRelationFilter, condiciones_pagosWhereInput> | null
  }

  export type abastecimientosOrderByWithRelationInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrderInput | SortOrder
    folio_fiscal?: SortOrderInput | SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrderInput | SortOrder
    lugar_expedicion?: SortOrderInput | SortOrder
    exportacion?: SortOrderInput | SortOrder
    uso?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    unidad?: SortOrderInput | SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrderInput | SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrderInput | SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
    proveedores?: proveedoresOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    tipos_monedas?: tipos_monedasOrderByWithRelationInput
    condiciones_pagos?: condiciones_pagosOrderByWithRelationInput
  }

  export type abastecimientosWhereUniqueInput = Prisma.AtLeast<{
    abastecimiento_id?: number
    AND?: abastecimientosWhereInput | abastecimientosWhereInput[]
    OR?: abastecimientosWhereInput[]
    NOT?: abastecimientosWhereInput | abastecimientosWhereInput[]
    proveedor_id?: IntFilter<"abastecimientos"> | number
    folio?: StringFilter<"abastecimientos"> | string
    serie?: StringNullableFilter<"abastecimientos"> | string | null
    folio_fiscal?: StringNullableFilter<"abastecimientos"> | string | null
    fecha_emision?: DateTimeFilter<"abastecimientos"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"abastecimientos"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"abastecimientos"> | string | null
    exportacion?: StringNullableFilter<"abastecimientos"> | string | null
    uso?: StringNullableFilter<"abastecimientos"> | string | null
    cantidad?: FloatFilter<"abastecimientos"> | number
    unidad?: StringNullableFilter<"abastecimientos"> | string | null
    concepto?: StringFilter<"abastecimientos"> | string
    preciounitario?: FloatFilter<"abastecimientos"> | number
    importe?: FloatFilter<"abastecimientos"> | number
    ivaaplicado?: FloatFilter<"abastecimientos"> | number
    densidad?: FloatNullableFilter<"abastecimientos"> | number | null
    tipo_modena_id?: IntFilter<"abastecimientos"> | number
    condicion_pago_id?: IntNullableFilter<"abastecimientos"> | number | null
    cfdi?: StringFilter<"abastecimientos"> | string
    tipoCfdi?: StringFilter<"abastecimientos"> | string
    preciovent?: FloatFilter<"abastecimientos"> | number
    aclaracion?: StringFilter<"abastecimientos"> | string
    tipocomplemento?: StringFilter<"abastecimientos"> | string
    unidaddemedida?: StringFilter<"abastecimientos"> | string
    user_id?: IntFilter<"abastecimientos"> | number
    date?: DateTimeFilter<"abastecimientos"> | Date | string
    active?: IntFilter<"abastecimientos"> | number
    proveedores?: XOR<ProveedoresNullableRelationFilter, proveedoresWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_monedas?: XOR<Tipos_monedasNullableRelationFilter, tipos_monedasWhereInput> | null
    condiciones_pagos?: XOR<Condiciones_pagosNullableRelationFilter, condiciones_pagosWhereInput> | null
  }, "abastecimiento_id">

  export type abastecimientosOrderByWithAggregationInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrderInput | SortOrder
    folio_fiscal?: SortOrderInput | SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrderInput | SortOrder
    lugar_expedicion?: SortOrderInput | SortOrder
    exportacion?: SortOrderInput | SortOrder
    uso?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    unidad?: SortOrderInput | SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrderInput | SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrderInput | SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
    _count?: abastecimientosCountOrderByAggregateInput
    _avg?: abastecimientosAvgOrderByAggregateInput
    _max?: abastecimientosMaxOrderByAggregateInput
    _min?: abastecimientosMinOrderByAggregateInput
    _sum?: abastecimientosSumOrderByAggregateInput
  }

  export type abastecimientosScalarWhereWithAggregatesInput = {
    AND?: abastecimientosScalarWhereWithAggregatesInput | abastecimientosScalarWhereWithAggregatesInput[]
    OR?: abastecimientosScalarWhereWithAggregatesInput[]
    NOT?: abastecimientosScalarWhereWithAggregatesInput | abastecimientosScalarWhereWithAggregatesInput[]
    abastecimiento_id?: IntWithAggregatesFilter<"abastecimientos"> | number
    proveedor_id?: IntWithAggregatesFilter<"abastecimientos"> | number
    folio?: StringWithAggregatesFilter<"abastecimientos"> | string
    serie?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    folio_fiscal?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    fecha_emision?: DateTimeWithAggregatesFilter<"abastecimientos"> | Date | string
    fecha_timbrado?: DateTimeNullableWithAggregatesFilter<"abastecimientos"> | Date | string | null
    lugar_expedicion?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    exportacion?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    uso?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    cantidad?: FloatWithAggregatesFilter<"abastecimientos"> | number
    unidad?: StringNullableWithAggregatesFilter<"abastecimientos"> | string | null
    concepto?: StringWithAggregatesFilter<"abastecimientos"> | string
    preciounitario?: FloatWithAggregatesFilter<"abastecimientos"> | number
    importe?: FloatWithAggregatesFilter<"abastecimientos"> | number
    ivaaplicado?: FloatWithAggregatesFilter<"abastecimientos"> | number
    densidad?: FloatNullableWithAggregatesFilter<"abastecimientos"> | number | null
    tipo_modena_id?: IntWithAggregatesFilter<"abastecimientos"> | number
    condicion_pago_id?: IntNullableWithAggregatesFilter<"abastecimientos"> | number | null
    cfdi?: StringWithAggregatesFilter<"abastecimientos"> | string
    tipoCfdi?: StringWithAggregatesFilter<"abastecimientos"> | string
    preciovent?: FloatWithAggregatesFilter<"abastecimientos"> | number
    aclaracion?: StringWithAggregatesFilter<"abastecimientos"> | string
    tipocomplemento?: StringWithAggregatesFilter<"abastecimientos"> | string
    unidaddemedida?: StringWithAggregatesFilter<"abastecimientos"> | string
    user_id?: IntWithAggregatesFilter<"abastecimientos"> | number
    date?: DateTimeWithAggregatesFilter<"abastecimientos"> | Date | string
    active?: IntWithAggregatesFilter<"abastecimientos"> | number
  }

  export type tipos_monedasWhereInput = {
    AND?: tipos_monedasWhereInput | tipos_monedasWhereInput[]
    OR?: tipos_monedasWhereInput[]
    NOT?: tipos_monedasWhereInput | tipos_monedasWhereInput[]
    tipo_modena_id?: IntFilter<"tipos_monedas"> | number
    tipo_modena?: StringFilter<"tipos_monedas"> | string
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
  }

  export type tipos_monedasOrderByWithRelationInput = {
    tipo_modena_id?: SortOrder
    tipo_modena?: SortOrder
    abastecimientos?: abastecimientosOrderByRelationAggregateInput
    ventas?: ventasOrderByRelationAggregateInput
  }

  export type tipos_monedasWhereUniqueInput = Prisma.AtLeast<{
    tipo_modena_id?: number
    AND?: tipos_monedasWhereInput | tipos_monedasWhereInput[]
    OR?: tipos_monedasWhereInput[]
    NOT?: tipos_monedasWhereInput | tipos_monedasWhereInput[]
    tipo_modena?: StringFilter<"tipos_monedas"> | string
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
  }, "tipo_modena_id">

  export type tipos_monedasOrderByWithAggregationInput = {
    tipo_modena_id?: SortOrder
    tipo_modena?: SortOrder
    _count?: tipos_monedasCountOrderByAggregateInput
    _avg?: tipos_monedasAvgOrderByAggregateInput
    _max?: tipos_monedasMaxOrderByAggregateInput
    _min?: tipos_monedasMinOrderByAggregateInput
    _sum?: tipos_monedasSumOrderByAggregateInput
  }

  export type tipos_monedasScalarWhereWithAggregatesInput = {
    AND?: tipos_monedasScalarWhereWithAggregatesInput | tipos_monedasScalarWhereWithAggregatesInput[]
    OR?: tipos_monedasScalarWhereWithAggregatesInput[]
    NOT?: tipos_monedasScalarWhereWithAggregatesInput | tipos_monedasScalarWhereWithAggregatesInput[]
    tipo_modena_id?: IntWithAggregatesFilter<"tipos_monedas"> | number
    tipo_modena?: StringWithAggregatesFilter<"tipos_monedas"> | string
  }

  export type condiciones_pagosWhereInput = {
    AND?: condiciones_pagosWhereInput | condiciones_pagosWhereInput[]
    OR?: condiciones_pagosWhereInput[]
    NOT?: condiciones_pagosWhereInput | condiciones_pagosWhereInput[]
    condicion_pago_id?: IntFilter<"condiciones_pagos"> | number
    condicion_pago?: StringFilter<"condiciones_pagos"> | string
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
  }

  export type condiciones_pagosOrderByWithRelationInput = {
    condicion_pago_id?: SortOrder
    condicion_pago?: SortOrder
    abastecimientos?: abastecimientosOrderByRelationAggregateInput
    ventas?: ventasOrderByRelationAggregateInput
  }

  export type condiciones_pagosWhereUniqueInput = Prisma.AtLeast<{
    condicion_pago_id?: number
    AND?: condiciones_pagosWhereInput | condiciones_pagosWhereInput[]
    OR?: condiciones_pagosWhereInput[]
    NOT?: condiciones_pagosWhereInput | condiciones_pagosWhereInput[]
    condicion_pago?: StringFilter<"condiciones_pagos"> | string
    abastecimientos?: AbastecimientosListRelationFilter
    ventas?: VentasListRelationFilter
  }, "condicion_pago_id">

  export type condiciones_pagosOrderByWithAggregationInput = {
    condicion_pago_id?: SortOrder
    condicion_pago?: SortOrder
    _count?: condiciones_pagosCountOrderByAggregateInput
    _avg?: condiciones_pagosAvgOrderByAggregateInput
    _max?: condiciones_pagosMaxOrderByAggregateInput
    _min?: condiciones_pagosMinOrderByAggregateInput
    _sum?: condiciones_pagosSumOrderByAggregateInput
  }

  export type condiciones_pagosScalarWhereWithAggregatesInput = {
    AND?: condiciones_pagosScalarWhereWithAggregatesInput | condiciones_pagosScalarWhereWithAggregatesInput[]
    OR?: condiciones_pagosScalarWhereWithAggregatesInput[]
    NOT?: condiciones_pagosScalarWhereWithAggregatesInput | condiciones_pagosScalarWhereWithAggregatesInput[]
    condicion_pago_id?: IntWithAggregatesFilter<"condiciones_pagos"> | number
    condicion_pago?: StringWithAggregatesFilter<"condiciones_pagos"> | string
  }

  export type ventasWhereInput = {
    AND?: ventasWhereInput | ventasWhereInput[]
    OR?: ventasWhereInput[]
    NOT?: ventasWhereInput | ventasWhereInput[]
    venta_id?: IntFilter<"ventas"> | number
    client_id?: IntFilter<"ventas"> | number
    folio?: StringFilter<"ventas"> | string
    serie?: StringNullableFilter<"ventas"> | string | null
    folio_fiscal?: StringNullableFilter<"ventas"> | string | null
    fecha_emision?: DateTimeFilter<"ventas"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"ventas"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"ventas"> | string | null
    exportacion?: StringNullableFilter<"ventas"> | string | null
    uso?: StringNullableFilter<"ventas"> | string | null
    cantidad?: FloatFilter<"ventas"> | number
    unidad?: StringNullableFilter<"ventas"> | string | null
    concepto?: StringFilter<"ventas"> | string
    preciounitario?: FloatFilter<"ventas"> | number
    importe?: FloatFilter<"ventas"> | number
    ivaaplicado?: FloatFilter<"ventas"> | number
    tipo_modena_id?: IntFilter<"ventas"> | number
    condicion_pago_id?: IntNullableFilter<"ventas"> | number | null
    cfdi?: StringFilter<"ventas"> | string
    tipoCfdi?: StringFilter<"ventas"> | string
    preciovent?: FloatFilter<"ventas"> | number
    aclaracion?: StringFilter<"ventas"> | string
    tipocomplemento?: StringFilter<"ventas"> | string
    unidaddemedida?: StringFilter<"ventas"> | string
    user_id?: IntFilter<"ventas"> | number
    date?: DateTimeFilter<"ventas"> | Date | string
    active?: IntNullableFilter<"ventas"> | number | null
    clients?: XOR<ClientsNullableRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_monedas?: XOR<Tipos_monedasNullableRelationFilter, tipos_monedasWhereInput> | null
    condiciones_pagos?: XOR<Condiciones_pagosNullableRelationFilter, condiciones_pagosWhereInput> | null
  }

  export type ventasOrderByWithRelationInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrderInput | SortOrder
    folio_fiscal?: SortOrderInput | SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrderInput | SortOrder
    lugar_expedicion?: SortOrderInput | SortOrder
    exportacion?: SortOrderInput | SortOrder
    uso?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    unidad?: SortOrderInput | SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrderInput | SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    tipos_monedas?: tipos_monedasOrderByWithRelationInput
    condiciones_pagos?: condiciones_pagosOrderByWithRelationInput
  }

  export type ventasWhereUniqueInput = Prisma.AtLeast<{
    venta_id?: number
    AND?: ventasWhereInput | ventasWhereInput[]
    OR?: ventasWhereInput[]
    NOT?: ventasWhereInput | ventasWhereInput[]
    client_id?: IntFilter<"ventas"> | number
    folio?: StringFilter<"ventas"> | string
    serie?: StringNullableFilter<"ventas"> | string | null
    folio_fiscal?: StringNullableFilter<"ventas"> | string | null
    fecha_emision?: DateTimeFilter<"ventas"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"ventas"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"ventas"> | string | null
    exportacion?: StringNullableFilter<"ventas"> | string | null
    uso?: StringNullableFilter<"ventas"> | string | null
    cantidad?: FloatFilter<"ventas"> | number
    unidad?: StringNullableFilter<"ventas"> | string | null
    concepto?: StringFilter<"ventas"> | string
    preciounitario?: FloatFilter<"ventas"> | number
    importe?: FloatFilter<"ventas"> | number
    ivaaplicado?: FloatFilter<"ventas"> | number
    tipo_modena_id?: IntFilter<"ventas"> | number
    condicion_pago_id?: IntNullableFilter<"ventas"> | number | null
    cfdi?: StringFilter<"ventas"> | string
    tipoCfdi?: StringFilter<"ventas"> | string
    preciovent?: FloatFilter<"ventas"> | number
    aclaracion?: StringFilter<"ventas"> | string
    tipocomplemento?: StringFilter<"ventas"> | string
    unidaddemedida?: StringFilter<"ventas"> | string
    user_id?: IntFilter<"ventas"> | number
    date?: DateTimeFilter<"ventas"> | Date | string
    active?: IntNullableFilter<"ventas"> | number | null
    clients?: XOR<ClientsNullableRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_monedas?: XOR<Tipos_monedasNullableRelationFilter, tipos_monedasWhereInput> | null
    condiciones_pagos?: XOR<Condiciones_pagosNullableRelationFilter, condiciones_pagosWhereInput> | null
  }, "venta_id">

  export type ventasOrderByWithAggregationInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrderInput | SortOrder
    folio_fiscal?: SortOrderInput | SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrderInput | SortOrder
    lugar_expedicion?: SortOrderInput | SortOrder
    exportacion?: SortOrderInput | SortOrder
    uso?: SortOrderInput | SortOrder
    cantidad?: SortOrder
    unidad?: SortOrderInput | SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrderInput | SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrderInput | SortOrder
    _count?: ventasCountOrderByAggregateInput
    _avg?: ventasAvgOrderByAggregateInput
    _max?: ventasMaxOrderByAggregateInput
    _min?: ventasMinOrderByAggregateInput
    _sum?: ventasSumOrderByAggregateInput
  }

  export type ventasScalarWhereWithAggregatesInput = {
    AND?: ventasScalarWhereWithAggregatesInput | ventasScalarWhereWithAggregatesInput[]
    OR?: ventasScalarWhereWithAggregatesInput[]
    NOT?: ventasScalarWhereWithAggregatesInput | ventasScalarWhereWithAggregatesInput[]
    venta_id?: IntWithAggregatesFilter<"ventas"> | number
    client_id?: IntWithAggregatesFilter<"ventas"> | number
    folio?: StringWithAggregatesFilter<"ventas"> | string
    serie?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    folio_fiscal?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    fecha_emision?: DateTimeWithAggregatesFilter<"ventas"> | Date | string
    fecha_timbrado?: DateTimeNullableWithAggregatesFilter<"ventas"> | Date | string | null
    lugar_expedicion?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    exportacion?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    uso?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    cantidad?: FloatWithAggregatesFilter<"ventas"> | number
    unidad?: StringNullableWithAggregatesFilter<"ventas"> | string | null
    concepto?: StringWithAggregatesFilter<"ventas"> | string
    preciounitario?: FloatWithAggregatesFilter<"ventas"> | number
    importe?: FloatWithAggregatesFilter<"ventas"> | number
    ivaaplicado?: FloatWithAggregatesFilter<"ventas"> | number
    tipo_modena_id?: IntWithAggregatesFilter<"ventas"> | number
    condicion_pago_id?: IntNullableWithAggregatesFilter<"ventas"> | number | null
    cfdi?: StringWithAggregatesFilter<"ventas"> | string
    tipoCfdi?: StringWithAggregatesFilter<"ventas"> | string
    preciovent?: FloatWithAggregatesFilter<"ventas"> | number
    aclaracion?: StringWithAggregatesFilter<"ventas"> | string
    tipocomplemento?: StringWithAggregatesFilter<"ventas"> | string
    unidaddemedida?: StringWithAggregatesFilter<"ventas"> | string
    user_id?: IntWithAggregatesFilter<"ventas"> | number
    date?: DateTimeWithAggregatesFilter<"ventas"> | Date | string
    active?: IntNullableWithAggregatesFilter<"ventas"> | number | null
  }

  export type reportesWhereInput = {
    AND?: reportesWhereInput | reportesWhereInput[]
    OR?: reportesWhereInput[]
    NOT?: reportesWhereInput | reportesWhereInput[]
    reporte_id?: IntFilter<"reportes"> | number
    version?: StringFilter<"reportes"> | string
    rfccontribuyente?: StringFilter<"reportes"> | string
    rfcrepresentantelegal?: StringFilter<"reportes"> | string
    rfcproveedor?: StringFilter<"reportes"> | string
    caracter?: StringFilter<"reportes"> | string
    modalidadpermiso?: StringFilter<"reportes"> | string
    numpermiso?: StringFilter<"reportes"> | string
    claveinstalacion?: StringFilter<"reportes"> | string
    descripcioninstalacion?: StringFilter<"reportes"> | string
    numeropozos?: IntFilter<"reportes"> | number
    numerotanques?: IntFilter<"reportes"> | number
    numeroductosentradasalida?: IntFilter<"reportes"> | number
    numeroductostransportedistribucion?: IntFilter<"reportes"> | number
    numerodispensarios?: IntFilter<"reportes"> | number
    claveproducto?: StringFilter<"reportes"> | string
    composdepropanoengaslp?: FloatFilter<"reportes"> | number
    composdebutanoengaslp?: FloatFilter<"reportes"> | number
    volumenexistenciasees?: FloatFilter<"reportes"> | number
    fechayhoraestamedicionmes?: DateTimeFilter<"reportes"> | Date | string
    numeroregistro?: IntFilter<"reportes"> | number
    usuarioresponsable?: StringFilter<"reportes"> | string
    tipoevento?: IntFilter<"reportes"> | number
    descripcionevento?: StringFilter<"reportes"> | string
    fecha_inicio?: DateTimeFilter<"reportes"> | Date | string
    fecha_terminacion?: DateTimeFilter<"reportes"> | Date | string
    tipo_reporte_id?: IntNullableFilter<"reportes"> | number | null
    user_id?: IntFilter<"reportes"> | number
    date?: DateTimeFilter<"reportes"> | Date | string
    active?: IntNullableFilter<"reportes"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_reporte?: XOR<Tipos_reporteNullableRelationFilter, tipos_reporteWhereInput> | null
  }

  export type reportesOrderByWithRelationInput = {
    reporte_id?: SortOrder
    version?: SortOrder
    rfccontribuyente?: SortOrder
    rfcrepresentantelegal?: SortOrder
    rfcproveedor?: SortOrder
    caracter?: SortOrder
    modalidadpermiso?: SortOrder
    numpermiso?: SortOrder
    claveinstalacion?: SortOrder
    descripcioninstalacion?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    claveproducto?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    fechayhoraestamedicionmes?: SortOrder
    numeroregistro?: SortOrder
    usuarioresponsable?: SortOrder
    tipoevento?: SortOrder
    descripcionevento?: SortOrder
    fecha_inicio?: SortOrder
    fecha_terminacion?: SortOrder
    tipo_reporte_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    tipos_reporte?: tipos_reporteOrderByWithRelationInput
  }

  export type reportesWhereUniqueInput = Prisma.AtLeast<{
    reporte_id?: number
    AND?: reportesWhereInput | reportesWhereInput[]
    OR?: reportesWhereInput[]
    NOT?: reportesWhereInput | reportesWhereInput[]
    version?: StringFilter<"reportes"> | string
    rfccontribuyente?: StringFilter<"reportes"> | string
    rfcrepresentantelegal?: StringFilter<"reportes"> | string
    rfcproveedor?: StringFilter<"reportes"> | string
    caracter?: StringFilter<"reportes"> | string
    modalidadpermiso?: StringFilter<"reportes"> | string
    numpermiso?: StringFilter<"reportes"> | string
    claveinstalacion?: StringFilter<"reportes"> | string
    descripcioninstalacion?: StringFilter<"reportes"> | string
    numeropozos?: IntFilter<"reportes"> | number
    numerotanques?: IntFilter<"reportes"> | number
    numeroductosentradasalida?: IntFilter<"reportes"> | number
    numeroductostransportedistribucion?: IntFilter<"reportes"> | number
    numerodispensarios?: IntFilter<"reportes"> | number
    claveproducto?: StringFilter<"reportes"> | string
    composdepropanoengaslp?: FloatFilter<"reportes"> | number
    composdebutanoengaslp?: FloatFilter<"reportes"> | number
    volumenexistenciasees?: FloatFilter<"reportes"> | number
    fechayhoraestamedicionmes?: DateTimeFilter<"reportes"> | Date | string
    numeroregistro?: IntFilter<"reportes"> | number
    usuarioresponsable?: StringFilter<"reportes"> | string
    tipoevento?: IntFilter<"reportes"> | number
    descripcionevento?: StringFilter<"reportes"> | string
    fecha_inicio?: DateTimeFilter<"reportes"> | Date | string
    fecha_terminacion?: DateTimeFilter<"reportes"> | Date | string
    tipo_reporte_id?: IntNullableFilter<"reportes"> | number | null
    user_id?: IntFilter<"reportes"> | number
    date?: DateTimeFilter<"reportes"> | Date | string
    active?: IntNullableFilter<"reportes"> | number | null
    users?: XOR<UsersNullableRelationFilter, usersWhereInput> | null
    tipos_reporte?: XOR<Tipos_reporteNullableRelationFilter, tipos_reporteWhereInput> | null
  }, "reporte_id">

  export type reportesOrderByWithAggregationInput = {
    reporte_id?: SortOrder
    version?: SortOrder
    rfccontribuyente?: SortOrder
    rfcrepresentantelegal?: SortOrder
    rfcproveedor?: SortOrder
    caracter?: SortOrder
    modalidadpermiso?: SortOrder
    numpermiso?: SortOrder
    claveinstalacion?: SortOrder
    descripcioninstalacion?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    claveproducto?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    fechayhoraestamedicionmes?: SortOrder
    numeroregistro?: SortOrder
    usuarioresponsable?: SortOrder
    tipoevento?: SortOrder
    descripcionevento?: SortOrder
    fecha_inicio?: SortOrder
    fecha_terminacion?: SortOrder
    tipo_reporte_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrderInput | SortOrder
    _count?: reportesCountOrderByAggregateInput
    _avg?: reportesAvgOrderByAggregateInput
    _max?: reportesMaxOrderByAggregateInput
    _min?: reportesMinOrderByAggregateInput
    _sum?: reportesSumOrderByAggregateInput
  }

  export type reportesScalarWhereWithAggregatesInput = {
    AND?: reportesScalarWhereWithAggregatesInput | reportesScalarWhereWithAggregatesInput[]
    OR?: reportesScalarWhereWithAggregatesInput[]
    NOT?: reportesScalarWhereWithAggregatesInput | reportesScalarWhereWithAggregatesInput[]
    reporte_id?: IntWithAggregatesFilter<"reportes"> | number
    version?: StringWithAggregatesFilter<"reportes"> | string
    rfccontribuyente?: StringWithAggregatesFilter<"reportes"> | string
    rfcrepresentantelegal?: StringWithAggregatesFilter<"reportes"> | string
    rfcproveedor?: StringWithAggregatesFilter<"reportes"> | string
    caracter?: StringWithAggregatesFilter<"reportes"> | string
    modalidadpermiso?: StringWithAggregatesFilter<"reportes"> | string
    numpermiso?: StringWithAggregatesFilter<"reportes"> | string
    claveinstalacion?: StringWithAggregatesFilter<"reportes"> | string
    descripcioninstalacion?: StringWithAggregatesFilter<"reportes"> | string
    numeropozos?: IntWithAggregatesFilter<"reportes"> | number
    numerotanques?: IntWithAggregatesFilter<"reportes"> | number
    numeroductosentradasalida?: IntWithAggregatesFilter<"reportes"> | number
    numeroductostransportedistribucion?: IntWithAggregatesFilter<"reportes"> | number
    numerodispensarios?: IntWithAggregatesFilter<"reportes"> | number
    claveproducto?: StringWithAggregatesFilter<"reportes"> | string
    composdepropanoengaslp?: FloatWithAggregatesFilter<"reportes"> | number
    composdebutanoengaslp?: FloatWithAggregatesFilter<"reportes"> | number
    volumenexistenciasees?: FloatWithAggregatesFilter<"reportes"> | number
    fechayhoraestamedicionmes?: DateTimeWithAggregatesFilter<"reportes"> | Date | string
    numeroregistro?: IntWithAggregatesFilter<"reportes"> | number
    usuarioresponsable?: StringWithAggregatesFilter<"reportes"> | string
    tipoevento?: IntWithAggregatesFilter<"reportes"> | number
    descripcionevento?: StringWithAggregatesFilter<"reportes"> | string
    fecha_inicio?: DateTimeWithAggregatesFilter<"reportes"> | Date | string
    fecha_terminacion?: DateTimeWithAggregatesFilter<"reportes"> | Date | string
    tipo_reporte_id?: IntNullableWithAggregatesFilter<"reportes"> | number | null
    user_id?: IntWithAggregatesFilter<"reportes"> | number
    date?: DateTimeWithAggregatesFilter<"reportes"> | Date | string
    active?: IntNullableWithAggregatesFilter<"reportes"> | number | null
  }

  export type tipos_reporteWhereInput = {
    AND?: tipos_reporteWhereInput | tipos_reporteWhereInput[]
    OR?: tipos_reporteWhereInput[]
    NOT?: tipos_reporteWhereInput | tipos_reporteWhereInput[]
    tipo_reporte_id?: IntFilter<"tipos_reporte"> | number
    tipo_reporte?: StringFilter<"tipos_reporte"> | string
    reportes?: ReportesListRelationFilter
  }

  export type tipos_reporteOrderByWithRelationInput = {
    tipo_reporte_id?: SortOrder
    tipo_reporte?: SortOrder
    reportes?: reportesOrderByRelationAggregateInput
  }

  export type tipos_reporteWhereUniqueInput = Prisma.AtLeast<{
    tipo_reporte_id?: number
    AND?: tipos_reporteWhereInput | tipos_reporteWhereInput[]
    OR?: tipos_reporteWhereInput[]
    NOT?: tipos_reporteWhereInput | tipos_reporteWhereInput[]
    tipo_reporte?: StringFilter<"tipos_reporte"> | string
    reportes?: ReportesListRelationFilter
  }, "tipo_reporte_id">

  export type tipos_reporteOrderByWithAggregationInput = {
    tipo_reporte_id?: SortOrder
    tipo_reporte?: SortOrder
    _count?: tipos_reporteCountOrderByAggregateInput
    _avg?: tipos_reporteAvgOrderByAggregateInput
    _max?: tipos_reporteMaxOrderByAggregateInput
    _min?: tipos_reporteMinOrderByAggregateInput
    _sum?: tipos_reporteSumOrderByAggregateInput
  }

  export type tipos_reporteScalarWhereWithAggregatesInput = {
    AND?: tipos_reporteScalarWhereWithAggregatesInput | tipos_reporteScalarWhereWithAggregatesInput[]
    OR?: tipos_reporteScalarWhereWithAggregatesInput[]
    NOT?: tipos_reporteScalarWhereWithAggregatesInput | tipos_reporteScalarWhereWithAggregatesInput[]
    tipo_reporte_id?: IntWithAggregatesFilter<"tipos_reporte"> | number
    tipo_reporte?: StringWithAggregatesFilter<"tipos_reporte"> | string
  }

  export type usersCreateInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresCreateNestedManyWithoutUsersInput
    clients?: clientsCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutUsersInput
    ventas?: ventasCreateNestedManyWithoutUsersInput
    reportes?: reportesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresUncheckedCreateNestedManyWithoutUsersInput
    clients?: clientsUncheckedCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutUsersInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsersInput
    reportes?: reportesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUpdateManyWithoutUsersNestedInput
    clients?: clientsUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutUsersNestedInput
    ventas?: ventasUpdateManyWithoutUsersNestedInput
    reportes?: reportesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUncheckedUpdateManyWithoutUsersNestedInput
    clients?: clientsUncheckedUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutUsersNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsersNestedInput
    reportes?: reportesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
  }

  export type usersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUncheckedUpdateManyInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type proveedoresCreateInput = {
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    users?: usersCreateNestedOneWithoutProveedoresInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresUncheckedCreateInput = {
    proveedor_id?: number
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id?: number | null
    date?: Date | string | null
    active?: number | null
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutProveedoresNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresUncheckedUpdateInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresCreateManyInput = {
    proveedor_id?: number
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id?: number | null
    date?: Date | string | null
    active?: number | null
  }

  export type proveedoresUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type proveedoresUncheckedUpdateManyInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type clientsCreateInput = {
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    users?: usersCreateNestedOneWithoutClientsInput
    ventas?: ventasCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateInput = {
    client_id?: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id: number
    date?: Date | string | null
    active?: number | null
    ventas?: ventasUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutClientsNestedInput
    ventas?: ventasUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateInput = {
    client_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    ventas?: ventasUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type clientsCreateManyInput = {
    client_id?: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id: number
    date?: Date | string | null
    active?: number | null
  }

  export type clientsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type clientsUncheckedUpdateManyInput = {
    client_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type abastecimientosCreateInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
    proveedores?: proveedoresCreateNestedOneWithoutAbastecimientosInput
    users?: usersCreateNestedOneWithoutAbastecimientosInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutAbastecimientosInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutAbastecimientosInput
  }

  export type abastecimientosUncheckedCreateInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosUpdateInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
    proveedores?: proveedoresUpdateOneWithoutAbastecimientosNestedInput
    users?: usersUpdateOneWithoutAbastecimientosNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutAbastecimientosNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutAbastecimientosNestedInput
  }

  export type abastecimientosUncheckedUpdateInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosCreateManyInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosUpdateManyMutationInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosUncheckedUpdateManyInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type tipos_monedasCreateInput = {
    tipo_modena: string
    abastecimientos?: abastecimientosCreateNestedManyWithoutTipos_monedasInput
    ventas?: ventasCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasUncheckedCreateInput = {
    tipo_modena_id?: number
    tipo_modena: string
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutTipos_monedasInput
    ventas?: ventasUncheckedCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasUpdateInput = {
    tipo_modena?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUpdateManyWithoutTipos_monedasNestedInput
    ventas?: ventasUpdateManyWithoutTipos_monedasNestedInput
  }

  export type tipos_monedasUncheckedUpdateInput = {
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    tipo_modena?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutTipos_monedasNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutTipos_monedasNestedInput
  }

  export type tipos_monedasCreateManyInput = {
    tipo_modena_id?: number
    tipo_modena: string
  }

  export type tipos_monedasUpdateManyMutationInput = {
    tipo_modena?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_monedasUncheckedUpdateManyInput = {
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    tipo_modena?: StringFieldUpdateOperationsInput | string
  }

  export type condiciones_pagosCreateInput = {
    condicion_pago: string
    abastecimientos?: abastecimientosCreateNestedManyWithoutCondiciones_pagosInput
    ventas?: ventasCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosUncheckedCreateInput = {
    condicion_pago_id?: number
    condicion_pago: string
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutCondiciones_pagosInput
    ventas?: ventasUncheckedCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosUpdateInput = {
    condicion_pago?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUpdateManyWithoutCondiciones_pagosNestedInput
    ventas?: ventasUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type condiciones_pagosUncheckedUpdateInput = {
    condicion_pago_id?: IntFieldUpdateOperationsInput | number
    condicion_pago?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutCondiciones_pagosNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type condiciones_pagosCreateManyInput = {
    condicion_pago_id?: number
    condicion_pago: string
  }

  export type condiciones_pagosUpdateManyMutationInput = {
    condicion_pago?: StringFieldUpdateOperationsInput | string
  }

  export type condiciones_pagosUncheckedUpdateManyInput = {
    condicion_pago_id?: IntFieldUpdateOperationsInput | number
    condicion_pago?: StringFieldUpdateOperationsInput | string
  }

  export type ventasCreateInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
    clients?: clientsCreateNestedOneWithoutVentasInput
    users?: usersCreateNestedOneWithoutVentasInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutVentasInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasUpdateInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUpdateOneWithoutVentasNestedInput
    users?: usersUpdateOneWithoutVentasNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutVentasNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasCreateManyInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasUpdateManyMutationInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasUncheckedUpdateManyInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesCreateInput = {
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    date: Date | string
    active?: number | null
    users?: usersCreateNestedOneWithoutReportesInput
    tipos_reporte?: tipos_reporteCreateNestedOneWithoutReportesInput
  }

  export type reportesUncheckedCreateInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    tipo_reporte_id?: number | null
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type reportesUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutReportesNestedInput
    tipos_reporte?: tipos_reporteUpdateOneWithoutReportesNestedInput
  }

  export type reportesUncheckedUpdateInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_reporte_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesCreateManyInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    tipo_reporte_id?: number | null
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type reportesUpdateManyMutationInput = {
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesUncheckedUpdateManyInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_reporte_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type tipos_reporteCreateInput = {
    tipo_reporte: string
    reportes?: reportesCreateNestedManyWithoutTipos_reporteInput
  }

  export type tipos_reporteUncheckedCreateInput = {
    tipo_reporte_id?: number
    tipo_reporte: string
    reportes?: reportesUncheckedCreateNestedManyWithoutTipos_reporteInput
  }

  export type tipos_reporteUpdateInput = {
    tipo_reporte?: StringFieldUpdateOperationsInput | string
    reportes?: reportesUpdateManyWithoutTipos_reporteNestedInput
  }

  export type tipos_reporteUncheckedUpdateInput = {
    tipo_reporte_id?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: StringFieldUpdateOperationsInput | string
    reportes?: reportesUncheckedUpdateManyWithoutTipos_reporteNestedInput
  }

  export type tipos_reporteCreateManyInput = {
    tipo_reporte_id?: number
    tipo_reporte: string
  }

  export type tipos_reporteUpdateManyMutationInput = {
    tipo_reporte?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_reporteUncheckedUpdateManyInput = {
    tipo_reporte_id?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ProveedoresListRelationFilter = {
    every?: proveedoresWhereInput
    some?: proveedoresWhereInput
    none?: proveedoresWhereInput
  }

  export type ClientsListRelationFilter = {
    every?: clientsWhereInput
    some?: clientsWhereInput
    none?: clientsWhereInput
  }

  export type AbastecimientosListRelationFilter = {
    every?: abastecimientosWhereInput
    some?: abastecimientosWhereInput
    none?: abastecimientosWhereInput
  }

  export type VentasListRelationFilter = {
    every?: ventasWhereInput
    some?: ventasWhereInput
    none?: ventasWhereInput
  }

  export type ReportesListRelationFilter = {
    every?: reportesWhereInput
    some?: reportesWhereInput
    none?: reportesWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type proveedoresOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type abastecimientosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ventasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    password?: SortOrder
    email?: SortOrder
    date?: SortOrder
    type_user?: SortOrder
    active?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    user_id?: SortOrder
    type_user?: SortOrder
    active?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    password?: SortOrder
    email?: SortOrder
    date?: SortOrder
    type_user?: SortOrder
    active?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    user_id?: SortOrder
    username?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    password?: SortOrder
    email?: SortOrder
    date?: SortOrder
    type_user?: SortOrder
    active?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    user_id?: SortOrder
    type_user?: SortOrder
    active?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type UsersNullableRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type proveedoresCountOrderByAggregateInput = {
    proveedor_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type proveedoresAvgOrderByAggregateInput = {
    proveedor_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type proveedoresMaxOrderByAggregateInput = {
    proveedor_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type proveedoresMinOrderByAggregateInput = {
    proveedor_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type proveedoresSumOrderByAggregateInput = {
    proveedor_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type clientsCountOrderByAggregateInput = {
    client_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type clientsAvgOrderByAggregateInput = {
    client_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type clientsMaxOrderByAggregateInput = {
    client_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type clientsMinOrderByAggregateInput = {
    client_id?: SortOrder
    name?: SortOrder
    rfc?: SortOrder
    direccion?: SortOrder
    tipo_situacion_fiscal?: SortOrder
    permiso?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type clientsSumOrderByAggregateInput = {
    client_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ProveedoresNullableRelationFilter = {
    is?: proveedoresWhereInput | null
    isNot?: proveedoresWhereInput | null
  }

  export type Tipos_monedasNullableRelationFilter = {
    is?: tipos_monedasWhereInput | null
    isNot?: tipos_monedasWhereInput | null
  }

  export type Condiciones_pagosNullableRelationFilter = {
    is?: condiciones_pagosWhereInput | null
    isNot?: condiciones_pagosWhereInput | null
  }

  export type abastecimientosCountOrderByAggregateInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type abastecimientosAvgOrderByAggregateInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    cantidad?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    preciovent?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type abastecimientosMaxOrderByAggregateInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type abastecimientosMinOrderByAggregateInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type abastecimientosSumOrderByAggregateInput = {
    abastecimiento_id?: SortOrder
    proveedor_id?: SortOrder
    cantidad?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    densidad?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    preciovent?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type tipos_monedasCountOrderByAggregateInput = {
    tipo_modena_id?: SortOrder
    tipo_modena?: SortOrder
  }

  export type tipos_monedasAvgOrderByAggregateInput = {
    tipo_modena_id?: SortOrder
  }

  export type tipos_monedasMaxOrderByAggregateInput = {
    tipo_modena_id?: SortOrder
    tipo_modena?: SortOrder
  }

  export type tipos_monedasMinOrderByAggregateInput = {
    tipo_modena_id?: SortOrder
    tipo_modena?: SortOrder
  }

  export type tipos_monedasSumOrderByAggregateInput = {
    tipo_modena_id?: SortOrder
  }

  export type condiciones_pagosCountOrderByAggregateInput = {
    condicion_pago_id?: SortOrder
    condicion_pago?: SortOrder
  }

  export type condiciones_pagosAvgOrderByAggregateInput = {
    condicion_pago_id?: SortOrder
  }

  export type condiciones_pagosMaxOrderByAggregateInput = {
    condicion_pago_id?: SortOrder
    condicion_pago?: SortOrder
  }

  export type condiciones_pagosMinOrderByAggregateInput = {
    condicion_pago_id?: SortOrder
    condicion_pago?: SortOrder
  }

  export type condiciones_pagosSumOrderByAggregateInput = {
    condicion_pago_id?: SortOrder
  }

  export type ClientsNullableRelationFilter = {
    is?: clientsWhereInput | null
    isNot?: clientsWhereInput | null
  }

  export type ventasCountOrderByAggregateInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type ventasAvgOrderByAggregateInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    cantidad?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    preciovent?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type ventasMaxOrderByAggregateInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type ventasMinOrderByAggregateInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    folio?: SortOrder
    serie?: SortOrder
    folio_fiscal?: SortOrder
    fecha_emision?: SortOrder
    fecha_timbrado?: SortOrder
    lugar_expedicion?: SortOrder
    exportacion?: SortOrder
    uso?: SortOrder
    cantidad?: SortOrder
    unidad?: SortOrder
    concepto?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    cfdi?: SortOrder
    tipoCfdi?: SortOrder
    preciovent?: SortOrder
    aclaracion?: SortOrder
    tipocomplemento?: SortOrder
    unidaddemedida?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type ventasSumOrderByAggregateInput = {
    venta_id?: SortOrder
    client_id?: SortOrder
    cantidad?: SortOrder
    preciounitario?: SortOrder
    importe?: SortOrder
    ivaaplicado?: SortOrder
    tipo_modena_id?: SortOrder
    condicion_pago_id?: SortOrder
    preciovent?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type Tipos_reporteNullableRelationFilter = {
    is?: tipos_reporteWhereInput | null
    isNot?: tipos_reporteWhereInput | null
  }

  export type reportesCountOrderByAggregateInput = {
    reporte_id?: SortOrder
    version?: SortOrder
    rfccontribuyente?: SortOrder
    rfcrepresentantelegal?: SortOrder
    rfcproveedor?: SortOrder
    caracter?: SortOrder
    modalidadpermiso?: SortOrder
    numpermiso?: SortOrder
    claveinstalacion?: SortOrder
    descripcioninstalacion?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    claveproducto?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    fechayhoraestamedicionmes?: SortOrder
    numeroregistro?: SortOrder
    usuarioresponsable?: SortOrder
    tipoevento?: SortOrder
    descripcionevento?: SortOrder
    fecha_inicio?: SortOrder
    fecha_terminacion?: SortOrder
    tipo_reporte_id?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type reportesAvgOrderByAggregateInput = {
    reporte_id?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    numeroregistro?: SortOrder
    tipoevento?: SortOrder
    tipo_reporte_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type reportesMaxOrderByAggregateInput = {
    reporte_id?: SortOrder
    version?: SortOrder
    rfccontribuyente?: SortOrder
    rfcrepresentantelegal?: SortOrder
    rfcproveedor?: SortOrder
    caracter?: SortOrder
    modalidadpermiso?: SortOrder
    numpermiso?: SortOrder
    claveinstalacion?: SortOrder
    descripcioninstalacion?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    claveproducto?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    fechayhoraestamedicionmes?: SortOrder
    numeroregistro?: SortOrder
    usuarioresponsable?: SortOrder
    tipoevento?: SortOrder
    descripcionevento?: SortOrder
    fecha_inicio?: SortOrder
    fecha_terminacion?: SortOrder
    tipo_reporte_id?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type reportesMinOrderByAggregateInput = {
    reporte_id?: SortOrder
    version?: SortOrder
    rfccontribuyente?: SortOrder
    rfcrepresentantelegal?: SortOrder
    rfcproveedor?: SortOrder
    caracter?: SortOrder
    modalidadpermiso?: SortOrder
    numpermiso?: SortOrder
    claveinstalacion?: SortOrder
    descripcioninstalacion?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    claveproducto?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    fechayhoraestamedicionmes?: SortOrder
    numeroregistro?: SortOrder
    usuarioresponsable?: SortOrder
    tipoevento?: SortOrder
    descripcionevento?: SortOrder
    fecha_inicio?: SortOrder
    fecha_terminacion?: SortOrder
    tipo_reporte_id?: SortOrder
    user_id?: SortOrder
    date?: SortOrder
    active?: SortOrder
  }

  export type reportesSumOrderByAggregateInput = {
    reporte_id?: SortOrder
    numeropozos?: SortOrder
    numerotanques?: SortOrder
    numeroductosentradasalida?: SortOrder
    numeroductostransportedistribucion?: SortOrder
    numerodispensarios?: SortOrder
    composdepropanoengaslp?: SortOrder
    composdebutanoengaslp?: SortOrder
    volumenexistenciasees?: SortOrder
    numeroregistro?: SortOrder
    tipoevento?: SortOrder
    tipo_reporte_id?: SortOrder
    user_id?: SortOrder
    active?: SortOrder
  }

  export type tipos_reporteCountOrderByAggregateInput = {
    tipo_reporte_id?: SortOrder
    tipo_reporte?: SortOrder
  }

  export type tipos_reporteAvgOrderByAggregateInput = {
    tipo_reporte_id?: SortOrder
  }

  export type tipos_reporteMaxOrderByAggregateInput = {
    tipo_reporte_id?: SortOrder
    tipo_reporte?: SortOrder
  }

  export type tipos_reporteMinOrderByAggregateInput = {
    tipo_reporte_id?: SortOrder
    tipo_reporte?: SortOrder
  }

  export type tipos_reporteSumOrderByAggregateInput = {
    tipo_reporte_id?: SortOrder
  }

  export type proveedoresCreateNestedManyWithoutUsersInput = {
    create?: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput> | proveedoresCreateWithoutUsersInput[] | proveedoresUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: proveedoresCreateOrConnectWithoutUsersInput | proveedoresCreateOrConnectWithoutUsersInput[]
    createMany?: proveedoresCreateManyUsersInputEnvelope
    connect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
  }

  export type clientsCreateNestedManyWithoutUsersInput = {
    create?: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput> | clientsCreateWithoutUsersInput[] | clientsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutUsersInput | clientsCreateOrConnectWithoutUsersInput[]
    createMany?: clientsCreateManyUsersInputEnvelope
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
  }

  export type abastecimientosCreateNestedManyWithoutUsersInput = {
    create?: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput> | abastecimientosCreateWithoutUsersInput[] | abastecimientosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutUsersInput | abastecimientosCreateOrConnectWithoutUsersInput[]
    createMany?: abastecimientosCreateManyUsersInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasCreateNestedManyWithoutUsersInput = {
    create?: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput> | ventasCreateWithoutUsersInput[] | ventasUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsersInput | ventasCreateOrConnectWithoutUsersInput[]
    createMany?: ventasCreateManyUsersInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type reportesCreateNestedManyWithoutUsersInput = {
    create?: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput> | reportesCreateWithoutUsersInput[] | reportesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsersInput | reportesCreateOrConnectWithoutUsersInput[]
    createMany?: reportesCreateManyUsersInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type proveedoresUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput> | proveedoresCreateWithoutUsersInput[] | proveedoresUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: proveedoresCreateOrConnectWithoutUsersInput | proveedoresCreateOrConnectWithoutUsersInput[]
    createMany?: proveedoresCreateManyUsersInputEnvelope
    connect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
  }

  export type clientsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput> | clientsCreateWithoutUsersInput[] | clientsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutUsersInput | clientsCreateOrConnectWithoutUsersInput[]
    createMany?: clientsCreateManyUsersInputEnvelope
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
  }

  export type abastecimientosUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput> | abastecimientosCreateWithoutUsersInput[] | abastecimientosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutUsersInput | abastecimientosCreateOrConnectWithoutUsersInput[]
    createMany?: abastecimientosCreateManyUsersInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput> | ventasCreateWithoutUsersInput[] | ventasUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsersInput | ventasCreateOrConnectWithoutUsersInput[]
    createMany?: ventasCreateManyUsersInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type reportesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput> | reportesCreateWithoutUsersInput[] | reportesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsersInput | reportesCreateOrConnectWithoutUsersInput[]
    createMany?: reportesCreateManyUsersInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type proveedoresUpdateManyWithoutUsersNestedInput = {
    create?: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput> | proveedoresCreateWithoutUsersInput[] | proveedoresUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: proveedoresCreateOrConnectWithoutUsersInput | proveedoresCreateOrConnectWithoutUsersInput[]
    upsert?: proveedoresUpsertWithWhereUniqueWithoutUsersInput | proveedoresUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: proveedoresCreateManyUsersInputEnvelope
    set?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    disconnect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    delete?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    connect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    update?: proveedoresUpdateWithWhereUniqueWithoutUsersInput | proveedoresUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: proveedoresUpdateManyWithWhereWithoutUsersInput | proveedoresUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: proveedoresScalarWhereInput | proveedoresScalarWhereInput[]
  }

  export type clientsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput> | clientsCreateWithoutUsersInput[] | clientsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutUsersInput | clientsCreateOrConnectWithoutUsersInput[]
    upsert?: clientsUpsertWithWhereUniqueWithoutUsersInput | clientsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: clientsCreateManyUsersInputEnvelope
    set?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    disconnect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    delete?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    update?: clientsUpdateWithWhereUniqueWithoutUsersInput | clientsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: clientsUpdateManyWithWhereWithoutUsersInput | clientsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: clientsScalarWhereInput | clientsScalarWhereInput[]
  }

  export type abastecimientosUpdateManyWithoutUsersNestedInput = {
    create?: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput> | abastecimientosCreateWithoutUsersInput[] | abastecimientosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutUsersInput | abastecimientosCreateOrConnectWithoutUsersInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutUsersInput | abastecimientosUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: abastecimientosCreateManyUsersInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutUsersInput | abastecimientosUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutUsersInput | abastecimientosUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput> | ventasCreateWithoutUsersInput[] | ventasUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsersInput | ventasCreateOrConnectWithoutUsersInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutUsersInput | ventasUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ventasCreateManyUsersInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutUsersInput | ventasUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutUsersInput | ventasUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type reportesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput> | reportesCreateWithoutUsersInput[] | reportesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsersInput | reportesCreateOrConnectWithoutUsersInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutUsersInput | reportesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reportesCreateManyUsersInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutUsersInput | reportesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutUsersInput | reportesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type proveedoresUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput> | proveedoresCreateWithoutUsersInput[] | proveedoresUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: proveedoresCreateOrConnectWithoutUsersInput | proveedoresCreateOrConnectWithoutUsersInput[]
    upsert?: proveedoresUpsertWithWhereUniqueWithoutUsersInput | proveedoresUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: proveedoresCreateManyUsersInputEnvelope
    set?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    disconnect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    delete?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    connect?: proveedoresWhereUniqueInput | proveedoresWhereUniqueInput[]
    update?: proveedoresUpdateWithWhereUniqueWithoutUsersInput | proveedoresUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: proveedoresUpdateManyWithWhereWithoutUsersInput | proveedoresUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: proveedoresScalarWhereInput | proveedoresScalarWhereInput[]
  }

  export type clientsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput> | clientsCreateWithoutUsersInput[] | clientsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: clientsCreateOrConnectWithoutUsersInput | clientsCreateOrConnectWithoutUsersInput[]
    upsert?: clientsUpsertWithWhereUniqueWithoutUsersInput | clientsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: clientsCreateManyUsersInputEnvelope
    set?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    disconnect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    delete?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    connect?: clientsWhereUniqueInput | clientsWhereUniqueInput[]
    update?: clientsUpdateWithWhereUniqueWithoutUsersInput | clientsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: clientsUpdateManyWithWhereWithoutUsersInput | clientsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: clientsScalarWhereInput | clientsScalarWhereInput[]
  }

  export type abastecimientosUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput> | abastecimientosCreateWithoutUsersInput[] | abastecimientosUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutUsersInput | abastecimientosCreateOrConnectWithoutUsersInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutUsersInput | abastecimientosUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: abastecimientosCreateManyUsersInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutUsersInput | abastecimientosUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutUsersInput | abastecimientosUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput> | ventasCreateWithoutUsersInput[] | ventasUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsersInput | ventasCreateOrConnectWithoutUsersInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutUsersInput | ventasUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ventasCreateManyUsersInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutUsersInput | ventasUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutUsersInput | ventasUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type reportesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput> | reportesCreateWithoutUsersInput[] | reportesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsersInput | reportesCreateOrConnectWithoutUsersInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutUsersInput | reportesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: reportesCreateManyUsersInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutUsersInput | reportesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutUsersInput | reportesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutProveedoresInput = {
    create?: XOR<usersCreateWithoutProveedoresInput, usersUncheckedCreateWithoutProveedoresInput>
    connectOrCreate?: usersCreateOrConnectWithoutProveedoresInput
    connect?: usersWhereUniqueInput
  }

  export type abastecimientosCreateNestedManyWithoutProveedoresInput = {
    create?: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput> | abastecimientosCreateWithoutProveedoresInput[] | abastecimientosUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutProveedoresInput | abastecimientosCreateOrConnectWithoutProveedoresInput[]
    createMany?: abastecimientosCreateManyProveedoresInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type abastecimientosUncheckedCreateNestedManyWithoutProveedoresInput = {
    create?: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput> | abastecimientosCreateWithoutProveedoresInput[] | abastecimientosUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutProveedoresInput | abastecimientosCreateOrConnectWithoutProveedoresInput[]
    createMany?: abastecimientosCreateManyProveedoresInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type usersUpdateOneWithoutProveedoresNestedInput = {
    create?: XOR<usersCreateWithoutProveedoresInput, usersUncheckedCreateWithoutProveedoresInput>
    connectOrCreate?: usersCreateOrConnectWithoutProveedoresInput
    upsert?: usersUpsertWithoutProveedoresInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutProveedoresInput, usersUpdateWithoutProveedoresInput>, usersUncheckedUpdateWithoutProveedoresInput>
  }

  export type abastecimientosUpdateManyWithoutProveedoresNestedInput = {
    create?: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput> | abastecimientosCreateWithoutProveedoresInput[] | abastecimientosUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutProveedoresInput | abastecimientosCreateOrConnectWithoutProveedoresInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutProveedoresInput | abastecimientosUpsertWithWhereUniqueWithoutProveedoresInput[]
    createMany?: abastecimientosCreateManyProveedoresInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutProveedoresInput | abastecimientosUpdateWithWhereUniqueWithoutProveedoresInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutProveedoresInput | abastecimientosUpdateManyWithWhereWithoutProveedoresInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type abastecimientosUncheckedUpdateManyWithoutProveedoresNestedInput = {
    create?: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput> | abastecimientosCreateWithoutProveedoresInput[] | abastecimientosUncheckedCreateWithoutProveedoresInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutProveedoresInput | abastecimientosCreateOrConnectWithoutProveedoresInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutProveedoresInput | abastecimientosUpsertWithWhereUniqueWithoutProveedoresInput[]
    createMany?: abastecimientosCreateManyProveedoresInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutProveedoresInput | abastecimientosUpdateWithWhereUniqueWithoutProveedoresInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutProveedoresInput | abastecimientosUpdateManyWithWhereWithoutProveedoresInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutClientsInput = {
    create?: XOR<usersCreateWithoutClientsInput, usersUncheckedCreateWithoutClientsInput>
    connectOrCreate?: usersCreateOrConnectWithoutClientsInput
    connect?: usersWhereUniqueInput
  }

  export type ventasCreateNestedManyWithoutClientsInput = {
    create?: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput> | ventasCreateWithoutClientsInput[] | ventasUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutClientsInput | ventasCreateOrConnectWithoutClientsInput[]
    createMany?: ventasCreateManyClientsInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type ventasUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput> | ventasCreateWithoutClientsInput[] | ventasUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutClientsInput | ventasCreateOrConnectWithoutClientsInput[]
    createMany?: ventasCreateManyClientsInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type usersUpdateOneWithoutClientsNestedInput = {
    create?: XOR<usersCreateWithoutClientsInput, usersUncheckedCreateWithoutClientsInput>
    connectOrCreate?: usersCreateOrConnectWithoutClientsInput
    upsert?: usersUpsertWithoutClientsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutClientsInput, usersUpdateWithoutClientsInput>, usersUncheckedUpdateWithoutClientsInput>
  }

  export type ventasUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput> | ventasCreateWithoutClientsInput[] | ventasUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutClientsInput | ventasCreateOrConnectWithoutClientsInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutClientsInput | ventasUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ventasCreateManyClientsInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutClientsInput | ventasUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutClientsInput | ventasUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type ventasUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput> | ventasCreateWithoutClientsInput[] | ventasUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutClientsInput | ventasCreateOrConnectWithoutClientsInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutClientsInput | ventasUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ventasCreateManyClientsInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutClientsInput | ventasUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutClientsInput | ventasUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type proveedoresCreateNestedOneWithoutAbastecimientosInput = {
    create?: XOR<proveedoresCreateWithoutAbastecimientosInput, proveedoresUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutAbastecimientosInput
    connect?: proveedoresWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutAbastecimientosInput = {
    create?: XOR<usersCreateWithoutAbastecimientosInput, usersUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: usersCreateOrConnectWithoutAbastecimientosInput
    connect?: usersWhereUniqueInput
  }

  export type tipos_monedasCreateNestedOneWithoutAbastecimientosInput = {
    create?: XOR<tipos_monedasCreateWithoutAbastecimientosInput, tipos_monedasUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: tipos_monedasCreateOrConnectWithoutAbastecimientosInput
    connect?: tipos_monedasWhereUniqueInput
  }

  export type condiciones_pagosCreateNestedOneWithoutAbastecimientosInput = {
    create?: XOR<condiciones_pagosCreateWithoutAbastecimientosInput, condiciones_pagosUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: condiciones_pagosCreateOrConnectWithoutAbastecimientosInput
    connect?: condiciones_pagosWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type proveedoresUpdateOneWithoutAbastecimientosNestedInput = {
    create?: XOR<proveedoresCreateWithoutAbastecimientosInput, proveedoresUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutAbastecimientosInput
    upsert?: proveedoresUpsertWithoutAbastecimientosInput
    disconnect?: proveedoresWhereInput | boolean
    delete?: proveedoresWhereInput | boolean
    connect?: proveedoresWhereUniqueInput
    update?: XOR<XOR<proveedoresUpdateToOneWithWhereWithoutAbastecimientosInput, proveedoresUpdateWithoutAbastecimientosInput>, proveedoresUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type usersUpdateOneWithoutAbastecimientosNestedInput = {
    create?: XOR<usersCreateWithoutAbastecimientosInput, usersUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: usersCreateOrConnectWithoutAbastecimientosInput
    upsert?: usersUpsertWithoutAbastecimientosInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAbastecimientosInput, usersUpdateWithoutAbastecimientosInput>, usersUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type tipos_monedasUpdateOneWithoutAbastecimientosNestedInput = {
    create?: XOR<tipos_monedasCreateWithoutAbastecimientosInput, tipos_monedasUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: tipos_monedasCreateOrConnectWithoutAbastecimientosInput
    upsert?: tipos_monedasUpsertWithoutAbastecimientosInput
    disconnect?: tipos_monedasWhereInput | boolean
    delete?: tipos_monedasWhereInput | boolean
    connect?: tipos_monedasWhereUniqueInput
    update?: XOR<XOR<tipos_monedasUpdateToOneWithWhereWithoutAbastecimientosInput, tipos_monedasUpdateWithoutAbastecimientosInput>, tipos_monedasUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type condiciones_pagosUpdateOneWithoutAbastecimientosNestedInput = {
    create?: XOR<condiciones_pagosCreateWithoutAbastecimientosInput, condiciones_pagosUncheckedCreateWithoutAbastecimientosInput>
    connectOrCreate?: condiciones_pagosCreateOrConnectWithoutAbastecimientosInput
    upsert?: condiciones_pagosUpsertWithoutAbastecimientosInput
    disconnect?: condiciones_pagosWhereInput | boolean
    delete?: condiciones_pagosWhereInput | boolean
    connect?: condiciones_pagosWhereUniqueInput
    update?: XOR<XOR<condiciones_pagosUpdateToOneWithWhereWithoutAbastecimientosInput, condiciones_pagosUpdateWithoutAbastecimientosInput>, condiciones_pagosUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type abastecimientosCreateNestedManyWithoutTipos_monedasInput = {
    create?: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput> | abastecimientosCreateWithoutTipos_monedasInput[] | abastecimientosUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutTipos_monedasInput | abastecimientosCreateOrConnectWithoutTipos_monedasInput[]
    createMany?: abastecimientosCreateManyTipos_monedasInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasCreateNestedManyWithoutTipos_monedasInput = {
    create?: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput> | ventasCreateWithoutTipos_monedasInput[] | ventasUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutTipos_monedasInput | ventasCreateOrConnectWithoutTipos_monedasInput[]
    createMany?: ventasCreateManyTipos_monedasInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type abastecimientosUncheckedCreateNestedManyWithoutTipos_monedasInput = {
    create?: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput> | abastecimientosCreateWithoutTipos_monedasInput[] | abastecimientosUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutTipos_monedasInput | abastecimientosCreateOrConnectWithoutTipos_monedasInput[]
    createMany?: abastecimientosCreateManyTipos_monedasInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasUncheckedCreateNestedManyWithoutTipos_monedasInput = {
    create?: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput> | ventasCreateWithoutTipos_monedasInput[] | ventasUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutTipos_monedasInput | ventasCreateOrConnectWithoutTipos_monedasInput[]
    createMany?: ventasCreateManyTipos_monedasInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type abastecimientosUpdateManyWithoutTipos_monedasNestedInput = {
    create?: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput> | abastecimientosCreateWithoutTipos_monedasInput[] | abastecimientosUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutTipos_monedasInput | abastecimientosCreateOrConnectWithoutTipos_monedasInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutTipos_monedasInput | abastecimientosUpsertWithWhereUniqueWithoutTipos_monedasInput[]
    createMany?: abastecimientosCreateManyTipos_monedasInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutTipos_monedasInput | abastecimientosUpdateWithWhereUniqueWithoutTipos_monedasInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutTipos_monedasInput | abastecimientosUpdateManyWithWhereWithoutTipos_monedasInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUpdateManyWithoutTipos_monedasNestedInput = {
    create?: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput> | ventasCreateWithoutTipos_monedasInput[] | ventasUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutTipos_monedasInput | ventasCreateOrConnectWithoutTipos_monedasInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutTipos_monedasInput | ventasUpsertWithWhereUniqueWithoutTipos_monedasInput[]
    createMany?: ventasCreateManyTipos_monedasInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutTipos_monedasInput | ventasUpdateWithWhereUniqueWithoutTipos_monedasInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutTipos_monedasInput | ventasUpdateManyWithWhereWithoutTipos_monedasInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type abastecimientosUncheckedUpdateManyWithoutTipos_monedasNestedInput = {
    create?: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput> | abastecimientosCreateWithoutTipos_monedasInput[] | abastecimientosUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutTipos_monedasInput | abastecimientosCreateOrConnectWithoutTipos_monedasInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutTipos_monedasInput | abastecimientosUpsertWithWhereUniqueWithoutTipos_monedasInput[]
    createMany?: abastecimientosCreateManyTipos_monedasInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutTipos_monedasInput | abastecimientosUpdateWithWhereUniqueWithoutTipos_monedasInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutTipos_monedasInput | abastecimientosUpdateManyWithWhereWithoutTipos_monedasInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUncheckedUpdateManyWithoutTipos_monedasNestedInput = {
    create?: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput> | ventasCreateWithoutTipos_monedasInput[] | ventasUncheckedCreateWithoutTipos_monedasInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutTipos_monedasInput | ventasCreateOrConnectWithoutTipos_monedasInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutTipos_monedasInput | ventasUpsertWithWhereUniqueWithoutTipos_monedasInput[]
    createMany?: ventasCreateManyTipos_monedasInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutTipos_monedasInput | ventasUpdateWithWhereUniqueWithoutTipos_monedasInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutTipos_monedasInput | ventasUpdateManyWithWhereWithoutTipos_monedasInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type abastecimientosCreateNestedManyWithoutCondiciones_pagosInput = {
    create?: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput> | abastecimientosCreateWithoutCondiciones_pagosInput[] | abastecimientosUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutCondiciones_pagosInput | abastecimientosCreateOrConnectWithoutCondiciones_pagosInput[]
    createMany?: abastecimientosCreateManyCondiciones_pagosInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasCreateNestedManyWithoutCondiciones_pagosInput = {
    create?: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput> | ventasCreateWithoutCondiciones_pagosInput[] | ventasUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutCondiciones_pagosInput | ventasCreateOrConnectWithoutCondiciones_pagosInput[]
    createMany?: ventasCreateManyCondiciones_pagosInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type abastecimientosUncheckedCreateNestedManyWithoutCondiciones_pagosInput = {
    create?: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput> | abastecimientosCreateWithoutCondiciones_pagosInput[] | abastecimientosUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutCondiciones_pagosInput | abastecimientosCreateOrConnectWithoutCondiciones_pagosInput[]
    createMany?: abastecimientosCreateManyCondiciones_pagosInputEnvelope
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
  }

  export type ventasUncheckedCreateNestedManyWithoutCondiciones_pagosInput = {
    create?: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput> | ventasCreateWithoutCondiciones_pagosInput[] | ventasUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutCondiciones_pagosInput | ventasCreateOrConnectWithoutCondiciones_pagosInput[]
    createMany?: ventasCreateManyCondiciones_pagosInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type abastecimientosUpdateManyWithoutCondiciones_pagosNestedInput = {
    create?: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput> | abastecimientosCreateWithoutCondiciones_pagosInput[] | abastecimientosUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutCondiciones_pagosInput | abastecimientosCreateOrConnectWithoutCondiciones_pagosInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutCondiciones_pagosInput | abastecimientosUpsertWithWhereUniqueWithoutCondiciones_pagosInput[]
    createMany?: abastecimientosCreateManyCondiciones_pagosInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutCondiciones_pagosInput | abastecimientosUpdateWithWhereUniqueWithoutCondiciones_pagosInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutCondiciones_pagosInput | abastecimientosUpdateManyWithWhereWithoutCondiciones_pagosInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUpdateManyWithoutCondiciones_pagosNestedInput = {
    create?: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput> | ventasCreateWithoutCondiciones_pagosInput[] | ventasUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutCondiciones_pagosInput | ventasCreateOrConnectWithoutCondiciones_pagosInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutCondiciones_pagosInput | ventasUpsertWithWhereUniqueWithoutCondiciones_pagosInput[]
    createMany?: ventasCreateManyCondiciones_pagosInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutCondiciones_pagosInput | ventasUpdateWithWhereUniqueWithoutCondiciones_pagosInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutCondiciones_pagosInput | ventasUpdateManyWithWhereWithoutCondiciones_pagosInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type abastecimientosUncheckedUpdateManyWithoutCondiciones_pagosNestedInput = {
    create?: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput> | abastecimientosCreateWithoutCondiciones_pagosInput[] | abastecimientosUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: abastecimientosCreateOrConnectWithoutCondiciones_pagosInput | abastecimientosCreateOrConnectWithoutCondiciones_pagosInput[]
    upsert?: abastecimientosUpsertWithWhereUniqueWithoutCondiciones_pagosInput | abastecimientosUpsertWithWhereUniqueWithoutCondiciones_pagosInput[]
    createMany?: abastecimientosCreateManyCondiciones_pagosInputEnvelope
    set?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    disconnect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    delete?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    connect?: abastecimientosWhereUniqueInput | abastecimientosWhereUniqueInput[]
    update?: abastecimientosUpdateWithWhereUniqueWithoutCondiciones_pagosInput | abastecimientosUpdateWithWhereUniqueWithoutCondiciones_pagosInput[]
    updateMany?: abastecimientosUpdateManyWithWhereWithoutCondiciones_pagosInput | abastecimientosUpdateManyWithWhereWithoutCondiciones_pagosInput[]
    deleteMany?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
  }

  export type ventasUncheckedUpdateManyWithoutCondiciones_pagosNestedInput = {
    create?: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput> | ventasCreateWithoutCondiciones_pagosInput[] | ventasUncheckedCreateWithoutCondiciones_pagosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutCondiciones_pagosInput | ventasCreateOrConnectWithoutCondiciones_pagosInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutCondiciones_pagosInput | ventasUpsertWithWhereUniqueWithoutCondiciones_pagosInput[]
    createMany?: ventasCreateManyCondiciones_pagosInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutCondiciones_pagosInput | ventasUpdateWithWhereUniqueWithoutCondiciones_pagosInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutCondiciones_pagosInput | ventasUpdateManyWithWhereWithoutCondiciones_pagosInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type clientsCreateNestedOneWithoutVentasInput = {
    create?: XOR<clientsCreateWithoutVentasInput, clientsUncheckedCreateWithoutVentasInput>
    connectOrCreate?: clientsCreateOrConnectWithoutVentasInput
    connect?: clientsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutVentasInput = {
    create?: XOR<usersCreateWithoutVentasInput, usersUncheckedCreateWithoutVentasInput>
    connectOrCreate?: usersCreateOrConnectWithoutVentasInput
    connect?: usersWhereUniqueInput
  }

  export type tipos_monedasCreateNestedOneWithoutVentasInput = {
    create?: XOR<tipos_monedasCreateWithoutVentasInput, tipos_monedasUncheckedCreateWithoutVentasInput>
    connectOrCreate?: tipos_monedasCreateOrConnectWithoutVentasInput
    connect?: tipos_monedasWhereUniqueInput
  }

  export type condiciones_pagosCreateNestedOneWithoutVentasInput = {
    create?: XOR<condiciones_pagosCreateWithoutVentasInput, condiciones_pagosUncheckedCreateWithoutVentasInput>
    connectOrCreate?: condiciones_pagosCreateOrConnectWithoutVentasInput
    connect?: condiciones_pagosWhereUniqueInput
  }

  export type clientsUpdateOneWithoutVentasNestedInput = {
    create?: XOR<clientsCreateWithoutVentasInput, clientsUncheckedCreateWithoutVentasInput>
    connectOrCreate?: clientsCreateOrConnectWithoutVentasInput
    upsert?: clientsUpsertWithoutVentasInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutVentasInput, clientsUpdateWithoutVentasInput>, clientsUncheckedUpdateWithoutVentasInput>
  }

  export type usersUpdateOneWithoutVentasNestedInput = {
    create?: XOR<usersCreateWithoutVentasInput, usersUncheckedCreateWithoutVentasInput>
    connectOrCreate?: usersCreateOrConnectWithoutVentasInput
    upsert?: usersUpsertWithoutVentasInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutVentasInput, usersUpdateWithoutVentasInput>, usersUncheckedUpdateWithoutVentasInput>
  }

  export type tipos_monedasUpdateOneWithoutVentasNestedInput = {
    create?: XOR<tipos_monedasCreateWithoutVentasInput, tipos_monedasUncheckedCreateWithoutVentasInput>
    connectOrCreate?: tipos_monedasCreateOrConnectWithoutVentasInput
    upsert?: tipos_monedasUpsertWithoutVentasInput
    disconnect?: tipos_monedasWhereInput | boolean
    delete?: tipos_monedasWhereInput | boolean
    connect?: tipos_monedasWhereUniqueInput
    update?: XOR<XOR<tipos_monedasUpdateToOneWithWhereWithoutVentasInput, tipos_monedasUpdateWithoutVentasInput>, tipos_monedasUncheckedUpdateWithoutVentasInput>
  }

  export type condiciones_pagosUpdateOneWithoutVentasNestedInput = {
    create?: XOR<condiciones_pagosCreateWithoutVentasInput, condiciones_pagosUncheckedCreateWithoutVentasInput>
    connectOrCreate?: condiciones_pagosCreateOrConnectWithoutVentasInput
    upsert?: condiciones_pagosUpsertWithoutVentasInput
    disconnect?: condiciones_pagosWhereInput | boolean
    delete?: condiciones_pagosWhereInput | boolean
    connect?: condiciones_pagosWhereUniqueInput
    update?: XOR<XOR<condiciones_pagosUpdateToOneWithWhereWithoutVentasInput, condiciones_pagosUpdateWithoutVentasInput>, condiciones_pagosUncheckedUpdateWithoutVentasInput>
  }

  export type usersCreateNestedOneWithoutReportesInput = {
    create?: XOR<usersCreateWithoutReportesInput, usersUncheckedCreateWithoutReportesInput>
    connectOrCreate?: usersCreateOrConnectWithoutReportesInput
    connect?: usersWhereUniqueInput
  }

  export type tipos_reporteCreateNestedOneWithoutReportesInput = {
    create?: XOR<tipos_reporteCreateWithoutReportesInput, tipos_reporteUncheckedCreateWithoutReportesInput>
    connectOrCreate?: tipos_reporteCreateOrConnectWithoutReportesInput
    connect?: tipos_reporteWhereUniqueInput
  }

  export type usersUpdateOneWithoutReportesNestedInput = {
    create?: XOR<usersCreateWithoutReportesInput, usersUncheckedCreateWithoutReportesInput>
    connectOrCreate?: usersCreateOrConnectWithoutReportesInput
    upsert?: usersUpsertWithoutReportesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutReportesInput, usersUpdateWithoutReportesInput>, usersUncheckedUpdateWithoutReportesInput>
  }

  export type tipos_reporteUpdateOneWithoutReportesNestedInput = {
    create?: XOR<tipos_reporteCreateWithoutReportesInput, tipos_reporteUncheckedCreateWithoutReportesInput>
    connectOrCreate?: tipos_reporteCreateOrConnectWithoutReportesInput
    upsert?: tipos_reporteUpsertWithoutReportesInput
    disconnect?: tipos_reporteWhereInput | boolean
    delete?: tipos_reporteWhereInput | boolean
    connect?: tipos_reporteWhereUniqueInput
    update?: XOR<XOR<tipos_reporteUpdateToOneWithWhereWithoutReportesInput, tipos_reporteUpdateWithoutReportesInput>, tipos_reporteUncheckedUpdateWithoutReportesInput>
  }

  export type reportesCreateNestedManyWithoutTipos_reporteInput = {
    create?: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput> | reportesCreateWithoutTipos_reporteInput[] | reportesUncheckedCreateWithoutTipos_reporteInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutTipos_reporteInput | reportesCreateOrConnectWithoutTipos_reporteInput[]
    createMany?: reportesCreateManyTipos_reporteInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type reportesUncheckedCreateNestedManyWithoutTipos_reporteInput = {
    create?: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput> | reportesCreateWithoutTipos_reporteInput[] | reportesUncheckedCreateWithoutTipos_reporteInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutTipos_reporteInput | reportesCreateOrConnectWithoutTipos_reporteInput[]
    createMany?: reportesCreateManyTipos_reporteInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type reportesUpdateManyWithoutTipos_reporteNestedInput = {
    create?: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput> | reportesCreateWithoutTipos_reporteInput[] | reportesUncheckedCreateWithoutTipos_reporteInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutTipos_reporteInput | reportesCreateOrConnectWithoutTipos_reporteInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutTipos_reporteInput | reportesUpsertWithWhereUniqueWithoutTipos_reporteInput[]
    createMany?: reportesCreateManyTipos_reporteInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutTipos_reporteInput | reportesUpdateWithWhereUniqueWithoutTipos_reporteInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutTipos_reporteInput | reportesUpdateManyWithWhereWithoutTipos_reporteInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type reportesUncheckedUpdateManyWithoutTipos_reporteNestedInput = {
    create?: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput> | reportesCreateWithoutTipos_reporteInput[] | reportesUncheckedCreateWithoutTipos_reporteInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutTipos_reporteInput | reportesCreateOrConnectWithoutTipos_reporteInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutTipos_reporteInput | reportesUpsertWithWhereUniqueWithoutTipos_reporteInput[]
    createMany?: reportesCreateManyTipos_reporteInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutTipos_reporteInput | reportesUpdateWithWhereUniqueWithoutTipos_reporteInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutTipos_reporteInput | reportesUpdateManyWithWhereWithoutTipos_reporteInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type proveedoresCreateWithoutUsersInput = {
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    abastecimientos?: abastecimientosCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresUncheckedCreateWithoutUsersInput = {
    proveedor_id?: number
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutProveedoresInput
  }

  export type proveedoresCreateOrConnectWithoutUsersInput = {
    where: proveedoresWhereUniqueInput
    create: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput>
  }

  export type proveedoresCreateManyUsersInputEnvelope = {
    data: proveedoresCreateManyUsersInput | proveedoresCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type clientsCreateWithoutUsersInput = {
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    ventas?: ventasCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutUsersInput = {
    client_id?: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    ventas?: ventasUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutUsersInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput>
  }

  export type clientsCreateManyUsersInputEnvelope = {
    data: clientsCreateManyUsersInput | clientsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type abastecimientosCreateWithoutUsersInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
    proveedores?: proveedoresCreateNestedOneWithoutAbastecimientosInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutAbastecimientosInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutAbastecimientosInput
  }

  export type abastecimientosUncheckedCreateWithoutUsersInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
  }

  export type abastecimientosCreateOrConnectWithoutUsersInput = {
    where: abastecimientosWhereUniqueInput
    create: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput>
  }

  export type abastecimientosCreateManyUsersInputEnvelope = {
    data: abastecimientosCreateManyUsersInput | abastecimientosCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type ventasCreateWithoutUsersInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
    clients?: clientsCreateNestedOneWithoutVentasInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutVentasInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutUsersInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
  }

  export type ventasCreateOrConnectWithoutUsersInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput>
  }

  export type ventasCreateManyUsersInputEnvelope = {
    data: ventasCreateManyUsersInput | ventasCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type reportesCreateWithoutUsersInput = {
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    date: Date | string
    active?: number | null
    tipos_reporte?: tipos_reporteCreateNestedOneWithoutReportesInput
  }

  export type reportesUncheckedCreateWithoutUsersInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    tipo_reporte_id?: number | null
    date: Date | string
    active?: number | null
  }

  export type reportesCreateOrConnectWithoutUsersInput = {
    where: reportesWhereUniqueInput
    create: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput>
  }

  export type reportesCreateManyUsersInputEnvelope = {
    data: reportesCreateManyUsersInput | reportesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type proveedoresUpsertWithWhereUniqueWithoutUsersInput = {
    where: proveedoresWhereUniqueInput
    update: XOR<proveedoresUpdateWithoutUsersInput, proveedoresUncheckedUpdateWithoutUsersInput>
    create: XOR<proveedoresCreateWithoutUsersInput, proveedoresUncheckedCreateWithoutUsersInput>
  }

  export type proveedoresUpdateWithWhereUniqueWithoutUsersInput = {
    where: proveedoresWhereUniqueInput
    data: XOR<proveedoresUpdateWithoutUsersInput, proveedoresUncheckedUpdateWithoutUsersInput>
  }

  export type proveedoresUpdateManyWithWhereWithoutUsersInput = {
    where: proveedoresScalarWhereInput
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyWithoutUsersInput>
  }

  export type proveedoresScalarWhereInput = {
    AND?: proveedoresScalarWhereInput | proveedoresScalarWhereInput[]
    OR?: proveedoresScalarWhereInput[]
    NOT?: proveedoresScalarWhereInput | proveedoresScalarWhereInput[]
    proveedor_id?: IntFilter<"proveedores"> | number
    name?: StringFilter<"proveedores"> | string
    rfc?: StringFilter<"proveedores"> | string
    direccion?: StringNullableFilter<"proveedores"> | string | null
    tipo_situacion_fiscal?: StringFilter<"proveedores"> | string
    permiso?: StringNullableFilter<"proveedores"> | string | null
    phone?: StringNullableFilter<"proveedores"> | string | null
    email?: StringNullableFilter<"proveedores"> | string | null
    user_id?: IntNullableFilter<"proveedores"> | number | null
    date?: DateTimeNullableFilter<"proveedores"> | Date | string | null
    active?: IntNullableFilter<"proveedores"> | number | null
  }

  export type clientsUpsertWithWhereUniqueWithoutUsersInput = {
    where: clientsWhereUniqueInput
    update: XOR<clientsUpdateWithoutUsersInput, clientsUncheckedUpdateWithoutUsersInput>
    create: XOR<clientsCreateWithoutUsersInput, clientsUncheckedCreateWithoutUsersInput>
  }

  export type clientsUpdateWithWhereUniqueWithoutUsersInput = {
    where: clientsWhereUniqueInput
    data: XOR<clientsUpdateWithoutUsersInput, clientsUncheckedUpdateWithoutUsersInput>
  }

  export type clientsUpdateManyWithWhereWithoutUsersInput = {
    where: clientsScalarWhereInput
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyWithoutUsersInput>
  }

  export type clientsScalarWhereInput = {
    AND?: clientsScalarWhereInput | clientsScalarWhereInput[]
    OR?: clientsScalarWhereInput[]
    NOT?: clientsScalarWhereInput | clientsScalarWhereInput[]
    client_id?: IntFilter<"clients"> | number
    name?: StringFilter<"clients"> | string
    rfc?: StringFilter<"clients"> | string
    direccion?: StringFilter<"clients"> | string
    tipo_situacion_fiscal?: StringFilter<"clients"> | string
    permiso?: StringNullableFilter<"clients"> | string | null
    phone?: StringNullableFilter<"clients"> | string | null
    email?: StringNullableFilter<"clients"> | string | null
    user_id?: IntFilter<"clients"> | number
    date?: DateTimeNullableFilter<"clients"> | Date | string | null
    active?: IntNullableFilter<"clients"> | number | null
  }

  export type abastecimientosUpsertWithWhereUniqueWithoutUsersInput = {
    where: abastecimientosWhereUniqueInput
    update: XOR<abastecimientosUpdateWithoutUsersInput, abastecimientosUncheckedUpdateWithoutUsersInput>
    create: XOR<abastecimientosCreateWithoutUsersInput, abastecimientosUncheckedCreateWithoutUsersInput>
  }

  export type abastecimientosUpdateWithWhereUniqueWithoutUsersInput = {
    where: abastecimientosWhereUniqueInput
    data: XOR<abastecimientosUpdateWithoutUsersInput, abastecimientosUncheckedUpdateWithoutUsersInput>
  }

  export type abastecimientosUpdateManyWithWhereWithoutUsersInput = {
    where: abastecimientosScalarWhereInput
    data: XOR<abastecimientosUpdateManyMutationInput, abastecimientosUncheckedUpdateManyWithoutUsersInput>
  }

  export type abastecimientosScalarWhereInput = {
    AND?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
    OR?: abastecimientosScalarWhereInput[]
    NOT?: abastecimientosScalarWhereInput | abastecimientosScalarWhereInput[]
    abastecimiento_id?: IntFilter<"abastecimientos"> | number
    proveedor_id?: IntFilter<"abastecimientos"> | number
    folio?: StringFilter<"abastecimientos"> | string
    serie?: StringNullableFilter<"abastecimientos"> | string | null
    folio_fiscal?: StringNullableFilter<"abastecimientos"> | string | null
    fecha_emision?: DateTimeFilter<"abastecimientos"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"abastecimientos"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"abastecimientos"> | string | null
    exportacion?: StringNullableFilter<"abastecimientos"> | string | null
    uso?: StringNullableFilter<"abastecimientos"> | string | null
    cantidad?: FloatFilter<"abastecimientos"> | number
    unidad?: StringNullableFilter<"abastecimientos"> | string | null
    concepto?: StringFilter<"abastecimientos"> | string
    preciounitario?: FloatFilter<"abastecimientos"> | number
    importe?: FloatFilter<"abastecimientos"> | number
    ivaaplicado?: FloatFilter<"abastecimientos"> | number
    densidad?: FloatNullableFilter<"abastecimientos"> | number | null
    tipo_modena_id?: IntFilter<"abastecimientos"> | number
    condicion_pago_id?: IntNullableFilter<"abastecimientos"> | number | null
    cfdi?: StringFilter<"abastecimientos"> | string
    tipoCfdi?: StringFilter<"abastecimientos"> | string
    preciovent?: FloatFilter<"abastecimientos"> | number
    aclaracion?: StringFilter<"abastecimientos"> | string
    tipocomplemento?: StringFilter<"abastecimientos"> | string
    unidaddemedida?: StringFilter<"abastecimientos"> | string
    user_id?: IntFilter<"abastecimientos"> | number
    date?: DateTimeFilter<"abastecimientos"> | Date | string
    active?: IntFilter<"abastecimientos"> | number
  }

  export type ventasUpsertWithWhereUniqueWithoutUsersInput = {
    where: ventasWhereUniqueInput
    update: XOR<ventasUpdateWithoutUsersInput, ventasUncheckedUpdateWithoutUsersInput>
    create: XOR<ventasCreateWithoutUsersInput, ventasUncheckedCreateWithoutUsersInput>
  }

  export type ventasUpdateWithWhereUniqueWithoutUsersInput = {
    where: ventasWhereUniqueInput
    data: XOR<ventasUpdateWithoutUsersInput, ventasUncheckedUpdateWithoutUsersInput>
  }

  export type ventasUpdateManyWithWhereWithoutUsersInput = {
    where: ventasScalarWhereInput
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyWithoutUsersInput>
  }

  export type ventasScalarWhereInput = {
    AND?: ventasScalarWhereInput | ventasScalarWhereInput[]
    OR?: ventasScalarWhereInput[]
    NOT?: ventasScalarWhereInput | ventasScalarWhereInput[]
    venta_id?: IntFilter<"ventas"> | number
    client_id?: IntFilter<"ventas"> | number
    folio?: StringFilter<"ventas"> | string
    serie?: StringNullableFilter<"ventas"> | string | null
    folio_fiscal?: StringNullableFilter<"ventas"> | string | null
    fecha_emision?: DateTimeFilter<"ventas"> | Date | string
    fecha_timbrado?: DateTimeNullableFilter<"ventas"> | Date | string | null
    lugar_expedicion?: StringNullableFilter<"ventas"> | string | null
    exportacion?: StringNullableFilter<"ventas"> | string | null
    uso?: StringNullableFilter<"ventas"> | string | null
    cantidad?: FloatFilter<"ventas"> | number
    unidad?: StringNullableFilter<"ventas"> | string | null
    concepto?: StringFilter<"ventas"> | string
    preciounitario?: FloatFilter<"ventas"> | number
    importe?: FloatFilter<"ventas"> | number
    ivaaplicado?: FloatFilter<"ventas"> | number
    tipo_modena_id?: IntFilter<"ventas"> | number
    condicion_pago_id?: IntNullableFilter<"ventas"> | number | null
    cfdi?: StringFilter<"ventas"> | string
    tipoCfdi?: StringFilter<"ventas"> | string
    preciovent?: FloatFilter<"ventas"> | number
    aclaracion?: StringFilter<"ventas"> | string
    tipocomplemento?: StringFilter<"ventas"> | string
    unidaddemedida?: StringFilter<"ventas"> | string
    user_id?: IntFilter<"ventas"> | number
    date?: DateTimeFilter<"ventas"> | Date | string
    active?: IntNullableFilter<"ventas"> | number | null
  }

  export type reportesUpsertWithWhereUniqueWithoutUsersInput = {
    where: reportesWhereUniqueInput
    update: XOR<reportesUpdateWithoutUsersInput, reportesUncheckedUpdateWithoutUsersInput>
    create: XOR<reportesCreateWithoutUsersInput, reportesUncheckedCreateWithoutUsersInput>
  }

  export type reportesUpdateWithWhereUniqueWithoutUsersInput = {
    where: reportesWhereUniqueInput
    data: XOR<reportesUpdateWithoutUsersInput, reportesUncheckedUpdateWithoutUsersInput>
  }

  export type reportesUpdateManyWithWhereWithoutUsersInput = {
    where: reportesScalarWhereInput
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyWithoutUsersInput>
  }

  export type reportesScalarWhereInput = {
    AND?: reportesScalarWhereInput | reportesScalarWhereInput[]
    OR?: reportesScalarWhereInput[]
    NOT?: reportesScalarWhereInput | reportesScalarWhereInput[]
    reporte_id?: IntFilter<"reportes"> | number
    version?: StringFilter<"reportes"> | string
    rfccontribuyente?: StringFilter<"reportes"> | string
    rfcrepresentantelegal?: StringFilter<"reportes"> | string
    rfcproveedor?: StringFilter<"reportes"> | string
    caracter?: StringFilter<"reportes"> | string
    modalidadpermiso?: StringFilter<"reportes"> | string
    numpermiso?: StringFilter<"reportes"> | string
    claveinstalacion?: StringFilter<"reportes"> | string
    descripcioninstalacion?: StringFilter<"reportes"> | string
    numeropozos?: IntFilter<"reportes"> | number
    numerotanques?: IntFilter<"reportes"> | number
    numeroductosentradasalida?: IntFilter<"reportes"> | number
    numeroductostransportedistribucion?: IntFilter<"reportes"> | number
    numerodispensarios?: IntFilter<"reportes"> | number
    claveproducto?: StringFilter<"reportes"> | string
    composdepropanoengaslp?: FloatFilter<"reportes"> | number
    composdebutanoengaslp?: FloatFilter<"reportes"> | number
    volumenexistenciasees?: FloatFilter<"reportes"> | number
    fechayhoraestamedicionmes?: DateTimeFilter<"reportes"> | Date | string
    numeroregistro?: IntFilter<"reportes"> | number
    usuarioresponsable?: StringFilter<"reportes"> | string
    tipoevento?: IntFilter<"reportes"> | number
    descripcionevento?: StringFilter<"reportes"> | string
    fecha_inicio?: DateTimeFilter<"reportes"> | Date | string
    fecha_terminacion?: DateTimeFilter<"reportes"> | Date | string
    tipo_reporte_id?: IntNullableFilter<"reportes"> | number | null
    user_id?: IntFilter<"reportes"> | number
    date?: DateTimeFilter<"reportes"> | Date | string
    active?: IntNullableFilter<"reportes"> | number | null
  }

  export type usersCreateWithoutProveedoresInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    clients?: clientsCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutUsersInput
    ventas?: ventasCreateNestedManyWithoutUsersInput
    reportes?: reportesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutProveedoresInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    clients?: clientsUncheckedCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutUsersInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsersInput
    reportes?: reportesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutProveedoresInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutProveedoresInput, usersUncheckedCreateWithoutProveedoresInput>
  }

  export type abastecimientosCreateWithoutProveedoresInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
    users?: usersCreateNestedOneWithoutAbastecimientosInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutAbastecimientosInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutAbastecimientosInput
  }

  export type abastecimientosUncheckedCreateWithoutProveedoresInput = {
    abastecimiento_id?: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosCreateOrConnectWithoutProveedoresInput = {
    where: abastecimientosWhereUniqueInput
    create: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput>
  }

  export type abastecimientosCreateManyProveedoresInputEnvelope = {
    data: abastecimientosCreateManyProveedoresInput | abastecimientosCreateManyProveedoresInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutProveedoresInput = {
    update: XOR<usersUpdateWithoutProveedoresInput, usersUncheckedUpdateWithoutProveedoresInput>
    create: XOR<usersCreateWithoutProveedoresInput, usersUncheckedCreateWithoutProveedoresInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutProveedoresInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutProveedoresInput, usersUncheckedUpdateWithoutProveedoresInput>
  }

  export type usersUpdateWithoutProveedoresInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutUsersNestedInput
    ventas?: ventasUpdateManyWithoutUsersNestedInput
    reportes?: reportesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutProveedoresInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUncheckedUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutUsersNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsersNestedInput
    reportes?: reportesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type abastecimientosUpsertWithWhereUniqueWithoutProveedoresInput = {
    where: abastecimientosWhereUniqueInput
    update: XOR<abastecimientosUpdateWithoutProveedoresInput, abastecimientosUncheckedUpdateWithoutProveedoresInput>
    create: XOR<abastecimientosCreateWithoutProveedoresInput, abastecimientosUncheckedCreateWithoutProveedoresInput>
  }

  export type abastecimientosUpdateWithWhereUniqueWithoutProveedoresInput = {
    where: abastecimientosWhereUniqueInput
    data: XOR<abastecimientosUpdateWithoutProveedoresInput, abastecimientosUncheckedUpdateWithoutProveedoresInput>
  }

  export type abastecimientosUpdateManyWithWhereWithoutProveedoresInput = {
    where: abastecimientosScalarWhereInput
    data: XOR<abastecimientosUpdateManyMutationInput, abastecimientosUncheckedUpdateManyWithoutProveedoresInput>
  }

  export type usersCreateWithoutClientsInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutUsersInput
    ventas?: ventasCreateNestedManyWithoutUsersInput
    reportes?: reportesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutClientsInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresUncheckedCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutUsersInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsersInput
    reportes?: reportesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutClientsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutClientsInput, usersUncheckedCreateWithoutClientsInput>
  }

  export type ventasCreateWithoutClientsInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
    users?: usersCreateNestedOneWithoutVentasInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutVentasInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutClientsInput = {
    venta_id?: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasCreateOrConnectWithoutClientsInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput>
  }

  export type ventasCreateManyClientsInputEnvelope = {
    data: ventasCreateManyClientsInput | ventasCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutClientsInput = {
    update: XOR<usersUpdateWithoutClientsInput, usersUncheckedUpdateWithoutClientsInput>
    create: XOR<usersCreateWithoutClientsInput, usersUncheckedCreateWithoutClientsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutClientsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutClientsInput, usersUncheckedUpdateWithoutClientsInput>
  }

  export type usersUpdateWithoutClientsInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutUsersNestedInput
    ventas?: ventasUpdateManyWithoutUsersNestedInput
    reportes?: reportesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutClientsInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUncheckedUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutUsersNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsersNestedInput
    reportes?: reportesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ventasUpsertWithWhereUniqueWithoutClientsInput = {
    where: ventasWhereUniqueInput
    update: XOR<ventasUpdateWithoutClientsInput, ventasUncheckedUpdateWithoutClientsInput>
    create: XOR<ventasCreateWithoutClientsInput, ventasUncheckedCreateWithoutClientsInput>
  }

  export type ventasUpdateWithWhereUniqueWithoutClientsInput = {
    where: ventasWhereUniqueInput
    data: XOR<ventasUpdateWithoutClientsInput, ventasUncheckedUpdateWithoutClientsInput>
  }

  export type ventasUpdateManyWithWhereWithoutClientsInput = {
    where: ventasScalarWhereInput
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyWithoutClientsInput>
  }

  export type proveedoresCreateWithoutAbastecimientosInput = {
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    users?: usersCreateNestedOneWithoutProveedoresInput
  }

  export type proveedoresUncheckedCreateWithoutAbastecimientosInput = {
    proveedor_id?: number
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id?: number | null
    date?: Date | string | null
    active?: number | null
  }

  export type proveedoresCreateOrConnectWithoutAbastecimientosInput = {
    where: proveedoresWhereUniqueInput
    create: XOR<proveedoresCreateWithoutAbastecimientosInput, proveedoresUncheckedCreateWithoutAbastecimientosInput>
  }

  export type usersCreateWithoutAbastecimientosInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresCreateNestedManyWithoutUsersInput
    clients?: clientsCreateNestedManyWithoutUsersInput
    ventas?: ventasCreateNestedManyWithoutUsersInput
    reportes?: reportesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutAbastecimientosInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresUncheckedCreateNestedManyWithoutUsersInput
    clients?: clientsUncheckedCreateNestedManyWithoutUsersInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsersInput
    reportes?: reportesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutAbastecimientosInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAbastecimientosInput, usersUncheckedCreateWithoutAbastecimientosInput>
  }

  export type tipos_monedasCreateWithoutAbastecimientosInput = {
    tipo_modena: string
    ventas?: ventasCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasUncheckedCreateWithoutAbastecimientosInput = {
    tipo_modena_id?: number
    tipo_modena: string
    ventas?: ventasUncheckedCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasCreateOrConnectWithoutAbastecimientosInput = {
    where: tipos_monedasWhereUniqueInput
    create: XOR<tipos_monedasCreateWithoutAbastecimientosInput, tipos_monedasUncheckedCreateWithoutAbastecimientosInput>
  }

  export type condiciones_pagosCreateWithoutAbastecimientosInput = {
    condicion_pago: string
    ventas?: ventasCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosUncheckedCreateWithoutAbastecimientosInput = {
    condicion_pago_id?: number
    condicion_pago: string
    ventas?: ventasUncheckedCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosCreateOrConnectWithoutAbastecimientosInput = {
    where: condiciones_pagosWhereUniqueInput
    create: XOR<condiciones_pagosCreateWithoutAbastecimientosInput, condiciones_pagosUncheckedCreateWithoutAbastecimientosInput>
  }

  export type proveedoresUpsertWithoutAbastecimientosInput = {
    update: XOR<proveedoresUpdateWithoutAbastecimientosInput, proveedoresUncheckedUpdateWithoutAbastecimientosInput>
    create: XOR<proveedoresCreateWithoutAbastecimientosInput, proveedoresUncheckedCreateWithoutAbastecimientosInput>
    where?: proveedoresWhereInput
  }

  export type proveedoresUpdateToOneWithWhereWithoutAbastecimientosInput = {
    where?: proveedoresWhereInput
    data: XOR<proveedoresUpdateWithoutAbastecimientosInput, proveedoresUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type proveedoresUpdateWithoutAbastecimientosInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutProveedoresNestedInput
  }

  export type proveedoresUncheckedUpdateWithoutAbastecimientosInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUpsertWithoutAbastecimientosInput = {
    update: XOR<usersUpdateWithoutAbastecimientosInput, usersUncheckedUpdateWithoutAbastecimientosInput>
    create: XOR<usersCreateWithoutAbastecimientosInput, usersUncheckedCreateWithoutAbastecimientosInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAbastecimientosInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAbastecimientosInput, usersUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type usersUpdateWithoutAbastecimientosInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUpdateManyWithoutUsersNestedInput
    clients?: clientsUpdateManyWithoutUsersNestedInput
    ventas?: ventasUpdateManyWithoutUsersNestedInput
    reportes?: reportesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutAbastecimientosInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUncheckedUpdateManyWithoutUsersNestedInput
    clients?: clientsUncheckedUpdateManyWithoutUsersNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsersNestedInput
    reportes?: reportesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type tipos_monedasUpsertWithoutAbastecimientosInput = {
    update: XOR<tipos_monedasUpdateWithoutAbastecimientosInput, tipos_monedasUncheckedUpdateWithoutAbastecimientosInput>
    create: XOR<tipos_monedasCreateWithoutAbastecimientosInput, tipos_monedasUncheckedCreateWithoutAbastecimientosInput>
    where?: tipos_monedasWhereInput
  }

  export type tipos_monedasUpdateToOneWithWhereWithoutAbastecimientosInput = {
    where?: tipos_monedasWhereInput
    data: XOR<tipos_monedasUpdateWithoutAbastecimientosInput, tipos_monedasUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type tipos_monedasUpdateWithoutAbastecimientosInput = {
    tipo_modena?: StringFieldUpdateOperationsInput | string
    ventas?: ventasUpdateManyWithoutTipos_monedasNestedInput
  }

  export type tipos_monedasUncheckedUpdateWithoutAbastecimientosInput = {
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    tipo_modena?: StringFieldUpdateOperationsInput | string
    ventas?: ventasUncheckedUpdateManyWithoutTipos_monedasNestedInput
  }

  export type condiciones_pagosUpsertWithoutAbastecimientosInput = {
    update: XOR<condiciones_pagosUpdateWithoutAbastecimientosInput, condiciones_pagosUncheckedUpdateWithoutAbastecimientosInput>
    create: XOR<condiciones_pagosCreateWithoutAbastecimientosInput, condiciones_pagosUncheckedCreateWithoutAbastecimientosInput>
    where?: condiciones_pagosWhereInput
  }

  export type condiciones_pagosUpdateToOneWithWhereWithoutAbastecimientosInput = {
    where?: condiciones_pagosWhereInput
    data: XOR<condiciones_pagosUpdateWithoutAbastecimientosInput, condiciones_pagosUncheckedUpdateWithoutAbastecimientosInput>
  }

  export type condiciones_pagosUpdateWithoutAbastecimientosInput = {
    condicion_pago?: StringFieldUpdateOperationsInput | string
    ventas?: ventasUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type condiciones_pagosUncheckedUpdateWithoutAbastecimientosInput = {
    condicion_pago_id?: IntFieldUpdateOperationsInput | number
    condicion_pago?: StringFieldUpdateOperationsInput | string
    ventas?: ventasUncheckedUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type abastecimientosCreateWithoutTipos_monedasInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
    proveedores?: proveedoresCreateNestedOneWithoutAbastecimientosInput
    users?: usersCreateNestedOneWithoutAbastecimientosInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutAbastecimientosInput
  }

  export type abastecimientosUncheckedCreateWithoutTipos_monedasInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosCreateOrConnectWithoutTipos_monedasInput = {
    where: abastecimientosWhereUniqueInput
    create: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput>
  }

  export type abastecimientosCreateManyTipos_monedasInputEnvelope = {
    data: abastecimientosCreateManyTipos_monedasInput | abastecimientosCreateManyTipos_monedasInput[]
    skipDuplicates?: boolean
  }

  export type ventasCreateWithoutTipos_monedasInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
    clients?: clientsCreateNestedOneWithoutVentasInput
    users?: usersCreateNestedOneWithoutVentasInput
    condiciones_pagos?: condiciones_pagosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutTipos_monedasInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasCreateOrConnectWithoutTipos_monedasInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput>
  }

  export type ventasCreateManyTipos_monedasInputEnvelope = {
    data: ventasCreateManyTipos_monedasInput | ventasCreateManyTipos_monedasInput[]
    skipDuplicates?: boolean
  }

  export type abastecimientosUpsertWithWhereUniqueWithoutTipos_monedasInput = {
    where: abastecimientosWhereUniqueInput
    update: XOR<abastecimientosUpdateWithoutTipos_monedasInput, abastecimientosUncheckedUpdateWithoutTipos_monedasInput>
    create: XOR<abastecimientosCreateWithoutTipos_monedasInput, abastecimientosUncheckedCreateWithoutTipos_monedasInput>
  }

  export type abastecimientosUpdateWithWhereUniqueWithoutTipos_monedasInput = {
    where: abastecimientosWhereUniqueInput
    data: XOR<abastecimientosUpdateWithoutTipos_monedasInput, abastecimientosUncheckedUpdateWithoutTipos_monedasInput>
  }

  export type abastecimientosUpdateManyWithWhereWithoutTipos_monedasInput = {
    where: abastecimientosScalarWhereInput
    data: XOR<abastecimientosUpdateManyMutationInput, abastecimientosUncheckedUpdateManyWithoutTipos_monedasInput>
  }

  export type ventasUpsertWithWhereUniqueWithoutTipos_monedasInput = {
    where: ventasWhereUniqueInput
    update: XOR<ventasUpdateWithoutTipos_monedasInput, ventasUncheckedUpdateWithoutTipos_monedasInput>
    create: XOR<ventasCreateWithoutTipos_monedasInput, ventasUncheckedCreateWithoutTipos_monedasInput>
  }

  export type ventasUpdateWithWhereUniqueWithoutTipos_monedasInput = {
    where: ventasWhereUniqueInput
    data: XOR<ventasUpdateWithoutTipos_monedasInput, ventasUncheckedUpdateWithoutTipos_monedasInput>
  }

  export type ventasUpdateManyWithWhereWithoutTipos_monedasInput = {
    where: ventasScalarWhereInput
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyWithoutTipos_monedasInput>
  }

  export type abastecimientosCreateWithoutCondiciones_pagosInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
    proveedores?: proveedoresCreateNestedOneWithoutAbastecimientosInput
    users?: usersCreateNestedOneWithoutAbastecimientosInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutAbastecimientosInput
  }

  export type abastecimientosUncheckedCreateWithoutCondiciones_pagosInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosCreateOrConnectWithoutCondiciones_pagosInput = {
    where: abastecimientosWhereUniqueInput
    create: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput>
  }

  export type abastecimientosCreateManyCondiciones_pagosInputEnvelope = {
    data: abastecimientosCreateManyCondiciones_pagosInput | abastecimientosCreateManyCondiciones_pagosInput[]
    skipDuplicates?: boolean
  }

  export type ventasCreateWithoutCondiciones_pagosInput = {
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
    clients?: clientsCreateNestedOneWithoutVentasInput
    users?: usersCreateNestedOneWithoutVentasInput
    tipos_monedas?: tipos_monedasCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutCondiciones_pagosInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasCreateOrConnectWithoutCondiciones_pagosInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput>
  }

  export type ventasCreateManyCondiciones_pagosInputEnvelope = {
    data: ventasCreateManyCondiciones_pagosInput | ventasCreateManyCondiciones_pagosInput[]
    skipDuplicates?: boolean
  }

  export type abastecimientosUpsertWithWhereUniqueWithoutCondiciones_pagosInput = {
    where: abastecimientosWhereUniqueInput
    update: XOR<abastecimientosUpdateWithoutCondiciones_pagosInput, abastecimientosUncheckedUpdateWithoutCondiciones_pagosInput>
    create: XOR<abastecimientosCreateWithoutCondiciones_pagosInput, abastecimientosUncheckedCreateWithoutCondiciones_pagosInput>
  }

  export type abastecimientosUpdateWithWhereUniqueWithoutCondiciones_pagosInput = {
    where: abastecimientosWhereUniqueInput
    data: XOR<abastecimientosUpdateWithoutCondiciones_pagosInput, abastecimientosUncheckedUpdateWithoutCondiciones_pagosInput>
  }

  export type abastecimientosUpdateManyWithWhereWithoutCondiciones_pagosInput = {
    where: abastecimientosScalarWhereInput
    data: XOR<abastecimientosUpdateManyMutationInput, abastecimientosUncheckedUpdateManyWithoutCondiciones_pagosInput>
  }

  export type ventasUpsertWithWhereUniqueWithoutCondiciones_pagosInput = {
    where: ventasWhereUniqueInput
    update: XOR<ventasUpdateWithoutCondiciones_pagosInput, ventasUncheckedUpdateWithoutCondiciones_pagosInput>
    create: XOR<ventasCreateWithoutCondiciones_pagosInput, ventasUncheckedCreateWithoutCondiciones_pagosInput>
  }

  export type ventasUpdateWithWhereUniqueWithoutCondiciones_pagosInput = {
    where: ventasWhereUniqueInput
    data: XOR<ventasUpdateWithoutCondiciones_pagosInput, ventasUncheckedUpdateWithoutCondiciones_pagosInput>
  }

  export type ventasUpdateManyWithWhereWithoutCondiciones_pagosInput = {
    where: ventasScalarWhereInput
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyWithoutCondiciones_pagosInput>
  }

  export type clientsCreateWithoutVentasInput = {
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
    users?: usersCreateNestedOneWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutVentasInput = {
    client_id?: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    user_id: number
    date?: Date | string | null
    active?: number | null
  }

  export type clientsCreateOrConnectWithoutVentasInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutVentasInput, clientsUncheckedCreateWithoutVentasInput>
  }

  export type usersCreateWithoutVentasInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresCreateNestedManyWithoutUsersInput
    clients?: clientsCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutUsersInput
    reportes?: reportesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutVentasInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresUncheckedCreateNestedManyWithoutUsersInput
    clients?: clientsUncheckedCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutUsersInput
    reportes?: reportesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutVentasInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutVentasInput, usersUncheckedCreateWithoutVentasInput>
  }

  export type tipos_monedasCreateWithoutVentasInput = {
    tipo_modena: string
    abastecimientos?: abastecimientosCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasUncheckedCreateWithoutVentasInput = {
    tipo_modena_id?: number
    tipo_modena: string
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutTipos_monedasInput
  }

  export type tipos_monedasCreateOrConnectWithoutVentasInput = {
    where: tipos_monedasWhereUniqueInput
    create: XOR<tipos_monedasCreateWithoutVentasInput, tipos_monedasUncheckedCreateWithoutVentasInput>
  }

  export type condiciones_pagosCreateWithoutVentasInput = {
    condicion_pago: string
    abastecimientos?: abastecimientosCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosUncheckedCreateWithoutVentasInput = {
    condicion_pago_id?: number
    condicion_pago: string
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutCondiciones_pagosInput
  }

  export type condiciones_pagosCreateOrConnectWithoutVentasInput = {
    where: condiciones_pagosWhereUniqueInput
    create: XOR<condiciones_pagosCreateWithoutVentasInput, condiciones_pagosUncheckedCreateWithoutVentasInput>
  }

  export type clientsUpsertWithoutVentasInput = {
    update: XOR<clientsUpdateWithoutVentasInput, clientsUncheckedUpdateWithoutVentasInput>
    create: XOR<clientsCreateWithoutVentasInput, clientsUncheckedCreateWithoutVentasInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutVentasInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutVentasInput, clientsUncheckedUpdateWithoutVentasInput>
  }

  export type clientsUpdateWithoutVentasInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutVentasInput = {
    client_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: IntFieldUpdateOperationsInput | number
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUpsertWithoutVentasInput = {
    update: XOR<usersUpdateWithoutVentasInput, usersUncheckedUpdateWithoutVentasInput>
    create: XOR<usersCreateWithoutVentasInput, usersUncheckedCreateWithoutVentasInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutVentasInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutVentasInput, usersUncheckedUpdateWithoutVentasInput>
  }

  export type usersUpdateWithoutVentasInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUpdateManyWithoutUsersNestedInput
    clients?: clientsUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutUsersNestedInput
    reportes?: reportesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutVentasInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUncheckedUpdateManyWithoutUsersNestedInput
    clients?: clientsUncheckedUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutUsersNestedInput
    reportes?: reportesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type tipos_monedasUpsertWithoutVentasInput = {
    update: XOR<tipos_monedasUpdateWithoutVentasInput, tipos_monedasUncheckedUpdateWithoutVentasInput>
    create: XOR<tipos_monedasCreateWithoutVentasInput, tipos_monedasUncheckedCreateWithoutVentasInput>
    where?: tipos_monedasWhereInput
  }

  export type tipos_monedasUpdateToOneWithWhereWithoutVentasInput = {
    where?: tipos_monedasWhereInput
    data: XOR<tipos_monedasUpdateWithoutVentasInput, tipos_monedasUncheckedUpdateWithoutVentasInput>
  }

  export type tipos_monedasUpdateWithoutVentasInput = {
    tipo_modena?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUpdateManyWithoutTipos_monedasNestedInput
  }

  export type tipos_monedasUncheckedUpdateWithoutVentasInput = {
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    tipo_modena?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutTipos_monedasNestedInput
  }

  export type condiciones_pagosUpsertWithoutVentasInput = {
    update: XOR<condiciones_pagosUpdateWithoutVentasInput, condiciones_pagosUncheckedUpdateWithoutVentasInput>
    create: XOR<condiciones_pagosCreateWithoutVentasInput, condiciones_pagosUncheckedCreateWithoutVentasInput>
    where?: condiciones_pagosWhereInput
  }

  export type condiciones_pagosUpdateToOneWithWhereWithoutVentasInput = {
    where?: condiciones_pagosWhereInput
    data: XOR<condiciones_pagosUpdateWithoutVentasInput, condiciones_pagosUncheckedUpdateWithoutVentasInput>
  }

  export type condiciones_pagosUpdateWithoutVentasInput = {
    condicion_pago?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type condiciones_pagosUncheckedUpdateWithoutVentasInput = {
    condicion_pago_id?: IntFieldUpdateOperationsInput | number
    condicion_pago?: StringFieldUpdateOperationsInput | string
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutCondiciones_pagosNestedInput
  }

  export type usersCreateWithoutReportesInput = {
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresCreateNestedManyWithoutUsersInput
    clients?: clientsCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosCreateNestedManyWithoutUsersInput
    ventas?: ventasCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutReportesInput = {
    user_id?: number
    username: string
    firstname: string
    lastname: string
    password: string
    email?: string | null
    date?: Date | string | null
    type_user?: number
    active?: number | null
    proveedores?: proveedoresUncheckedCreateNestedManyWithoutUsersInput
    clients?: clientsUncheckedCreateNestedManyWithoutUsersInput
    abastecimientos?: abastecimientosUncheckedCreateNestedManyWithoutUsersInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutReportesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutReportesInput, usersUncheckedCreateWithoutReportesInput>
  }

  export type tipos_reporteCreateWithoutReportesInput = {
    tipo_reporte: string
  }

  export type tipos_reporteUncheckedCreateWithoutReportesInput = {
    tipo_reporte_id?: number
    tipo_reporte: string
  }

  export type tipos_reporteCreateOrConnectWithoutReportesInput = {
    where: tipos_reporteWhereUniqueInput
    create: XOR<tipos_reporteCreateWithoutReportesInput, tipos_reporteUncheckedCreateWithoutReportesInput>
  }

  export type usersUpsertWithoutReportesInput = {
    update: XOR<usersUpdateWithoutReportesInput, usersUncheckedUpdateWithoutReportesInput>
    create: XOR<usersCreateWithoutReportesInput, usersUncheckedCreateWithoutReportesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutReportesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutReportesInput, usersUncheckedUpdateWithoutReportesInput>
  }

  export type usersUpdateWithoutReportesInput = {
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUpdateManyWithoutUsersNestedInput
    clients?: clientsUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUpdateManyWithoutUsersNestedInput
    ventas?: ventasUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutReportesInput = {
    user_id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    type_user?: IntFieldUpdateOperationsInput | number
    active?: NullableIntFieldUpdateOperationsInput | number | null
    proveedores?: proveedoresUncheckedUpdateManyWithoutUsersNestedInput
    clients?: clientsUncheckedUpdateManyWithoutUsersNestedInput
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutUsersNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type tipos_reporteUpsertWithoutReportesInput = {
    update: XOR<tipos_reporteUpdateWithoutReportesInput, tipos_reporteUncheckedUpdateWithoutReportesInput>
    create: XOR<tipos_reporteCreateWithoutReportesInput, tipos_reporteUncheckedCreateWithoutReportesInput>
    where?: tipos_reporteWhereInput
  }

  export type tipos_reporteUpdateToOneWithWhereWithoutReportesInput = {
    where?: tipos_reporteWhereInput
    data: XOR<tipos_reporteUpdateWithoutReportesInput, tipos_reporteUncheckedUpdateWithoutReportesInput>
  }

  export type tipos_reporteUpdateWithoutReportesInput = {
    tipo_reporte?: StringFieldUpdateOperationsInput | string
  }

  export type tipos_reporteUncheckedUpdateWithoutReportesInput = {
    tipo_reporte_id?: IntFieldUpdateOperationsInput | number
    tipo_reporte?: StringFieldUpdateOperationsInput | string
  }

  export type reportesCreateWithoutTipos_reporteInput = {
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    date: Date | string
    active?: number | null
    users?: usersCreateNestedOneWithoutReportesInput
  }

  export type reportesUncheckedCreateWithoutTipos_reporteInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type reportesCreateOrConnectWithoutTipos_reporteInput = {
    where: reportesWhereUniqueInput
    create: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput>
  }

  export type reportesCreateManyTipos_reporteInputEnvelope = {
    data: reportesCreateManyTipos_reporteInput | reportesCreateManyTipos_reporteInput[]
    skipDuplicates?: boolean
  }

  export type reportesUpsertWithWhereUniqueWithoutTipos_reporteInput = {
    where: reportesWhereUniqueInput
    update: XOR<reportesUpdateWithoutTipos_reporteInput, reportesUncheckedUpdateWithoutTipos_reporteInput>
    create: XOR<reportesCreateWithoutTipos_reporteInput, reportesUncheckedCreateWithoutTipos_reporteInput>
  }

  export type reportesUpdateWithWhereUniqueWithoutTipos_reporteInput = {
    where: reportesWhereUniqueInput
    data: XOR<reportesUpdateWithoutTipos_reporteInput, reportesUncheckedUpdateWithoutTipos_reporteInput>
  }

  export type reportesUpdateManyWithWhereWithoutTipos_reporteInput = {
    where: reportesScalarWhereInput
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyWithoutTipos_reporteInput>
  }

  export type proveedoresCreateManyUsersInput = {
    proveedor_id?: number
    name: string
    rfc: string
    direccion?: string | null
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
  }

  export type clientsCreateManyUsersInput = {
    client_id?: number
    name: string
    rfc: string
    direccion: string
    tipo_situacion_fiscal: string
    permiso?: string | null
    phone?: string | null
    email?: string | null
    date?: Date | string | null
    active?: number | null
  }

  export type abastecimientosCreateManyUsersInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active: number
  }

  export type ventasCreateManyUsersInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    date: Date | string
    active?: number | null
  }

  export type reportesCreateManyUsersInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    tipo_reporte_id?: number | null
    date: Date | string
    active?: number | null
  }

  export type proveedoresUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    abastecimientos?: abastecimientosUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresUncheckedUpdateWithoutUsersInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    abastecimientos?: abastecimientosUncheckedUpdateManyWithoutProveedoresNestedInput
  }

  export type proveedoresUncheckedUpdateManyWithoutUsersInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type clientsUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    ventas?: ventasUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutUsersInput = {
    client_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
    ventas?: ventasUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateManyWithoutUsersInput = {
    client_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    rfc?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    tipo_situacion_fiscal?: StringFieldUpdateOperationsInput | string
    permiso?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type abastecimientosUpdateWithoutUsersInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
    proveedores?: proveedoresUpdateOneWithoutAbastecimientosNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutAbastecimientosNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutAbastecimientosNestedInput
  }

  export type abastecimientosUncheckedUpdateWithoutUsersInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosUncheckedUpdateManyWithoutUsersInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type ventasUpdateWithoutUsersInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUpdateOneWithoutVentasNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutVentasNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutUsersInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasUncheckedUpdateManyWithoutUsersInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesUpdateWithoutUsersInput = {
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    tipos_reporte?: tipos_reporteUpdateOneWithoutReportesNestedInput
  }

  export type reportesUncheckedUpdateWithoutUsersInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_reporte_id?: NullableIntFieldUpdateOperationsInput | number | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesUncheckedUpdateManyWithoutUsersInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    tipo_reporte_id?: NullableIntFieldUpdateOperationsInput | number | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type abastecimientosCreateManyProveedoresInput = {
    abastecimiento_id?: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type abastecimientosUpdateWithoutProveedoresInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
    users?: usersUpdateOneWithoutAbastecimientosNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutAbastecimientosNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutAbastecimientosNestedInput
  }

  export type abastecimientosUncheckedUpdateWithoutProveedoresInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosUncheckedUpdateManyWithoutProveedoresInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type ventasCreateManyClientsInput = {
    venta_id?: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type ventasUpdateWithoutClientsInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutVentasNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutVentasNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutClientsInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasUncheckedUpdateManyWithoutClientsInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type abastecimientosCreateManyTipos_monedasInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type ventasCreateManyTipos_monedasInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    condicion_pago_id?: number | null
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type abastecimientosUpdateWithoutTipos_monedasInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
    proveedores?: proveedoresUpdateOneWithoutAbastecimientosNestedInput
    users?: usersUpdateOneWithoutAbastecimientosNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutAbastecimientosNestedInput
  }

  export type abastecimientosUncheckedUpdateWithoutTipos_monedasInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosUncheckedUpdateManyWithoutTipos_monedasInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type ventasUpdateWithoutTipos_monedasInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUpdateOneWithoutVentasNestedInput
    users?: usersUpdateOneWithoutVentasNestedInput
    condiciones_pagos?: condiciones_pagosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutTipos_monedasInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasUncheckedUpdateManyWithoutTipos_monedasInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    condicion_pago_id?: NullableIntFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type abastecimientosCreateManyCondiciones_pagosInput = {
    abastecimiento_id?: number
    proveedor_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    densidad?: number | null
    tipo_modena_id: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active: number
  }

  export type ventasCreateManyCondiciones_pagosInput = {
    venta_id?: number
    client_id: number
    folio: string
    serie?: string | null
    folio_fiscal?: string | null
    fecha_emision: Date | string
    fecha_timbrado?: Date | string | null
    lugar_expedicion?: string | null
    exportacion?: string | null
    uso?: string | null
    cantidad: number
    unidad?: string | null
    concepto: string
    preciounitario: number
    importe: number
    ivaaplicado: number
    tipo_modena_id: number
    cfdi: string
    tipoCfdi: string
    preciovent: number
    aclaracion: string
    tipocomplemento: string
    unidaddemedida: string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type abastecimientosUpdateWithoutCondiciones_pagosInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
    proveedores?: proveedoresUpdateOneWithoutAbastecimientosNestedInput
    users?: usersUpdateOneWithoutAbastecimientosNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutAbastecimientosNestedInput
  }

  export type abastecimientosUncheckedUpdateWithoutCondiciones_pagosInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type abastecimientosUncheckedUpdateManyWithoutCondiciones_pagosInput = {
    abastecimiento_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    densidad?: NullableFloatFieldUpdateOperationsInput | number | null
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: IntFieldUpdateOperationsInput | number
  }

  export type ventasUpdateWithoutCondiciones_pagosInput = {
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    clients?: clientsUpdateOneWithoutVentasNestedInput
    users?: usersUpdateOneWithoutVentasNestedInput
    tipos_monedas?: tipos_monedasUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutCondiciones_pagosInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ventasUncheckedUpdateManyWithoutCondiciones_pagosInput = {
    venta_id?: IntFieldUpdateOperationsInput | number
    client_id?: IntFieldUpdateOperationsInput | number
    folio?: StringFieldUpdateOperationsInput | string
    serie?: NullableStringFieldUpdateOperationsInput | string | null
    folio_fiscal?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_emision?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_timbrado?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lugar_expedicion?: NullableStringFieldUpdateOperationsInput | string | null
    exportacion?: NullableStringFieldUpdateOperationsInput | string | null
    uso?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: FloatFieldUpdateOperationsInput | number
    unidad?: NullableStringFieldUpdateOperationsInput | string | null
    concepto?: StringFieldUpdateOperationsInput | string
    preciounitario?: FloatFieldUpdateOperationsInput | number
    importe?: FloatFieldUpdateOperationsInput | number
    ivaaplicado?: FloatFieldUpdateOperationsInput | number
    tipo_modena_id?: IntFieldUpdateOperationsInput | number
    cfdi?: StringFieldUpdateOperationsInput | string
    tipoCfdi?: StringFieldUpdateOperationsInput | string
    preciovent?: FloatFieldUpdateOperationsInput | number
    aclaracion?: StringFieldUpdateOperationsInput | string
    tipocomplemento?: StringFieldUpdateOperationsInput | string
    unidaddemedida?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesCreateManyTipos_reporteInput = {
    reporte_id?: number
    version: string
    rfccontribuyente: string
    rfcrepresentantelegal: string
    rfcproveedor: string
    caracter: string
    modalidadpermiso: string
    numpermiso: string
    claveinstalacion: string
    descripcioninstalacion: string
    numeropozos: number
    numerotanques: number
    numeroductosentradasalida: number
    numeroductostransportedistribucion: number
    numerodispensarios: number
    claveproducto: string
    composdepropanoengaslp: number
    composdebutanoengaslp: number
    volumenexistenciasees: number
    fechayhoraestamedicionmes: Date | string
    numeroregistro: number
    usuarioresponsable: string
    tipoevento: number
    descripcionevento: string
    fecha_inicio: Date | string
    fecha_terminacion: Date | string
    user_id: number
    date: Date | string
    active?: number | null
  }

  export type reportesUpdateWithoutTipos_reporteInput = {
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
    users?: usersUpdateOneWithoutReportesNestedInput
  }

  export type reportesUncheckedUpdateWithoutTipos_reporteInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type reportesUncheckedUpdateManyWithoutTipos_reporteInput = {
    reporte_id?: IntFieldUpdateOperationsInput | number
    version?: StringFieldUpdateOperationsInput | string
    rfccontribuyente?: StringFieldUpdateOperationsInput | string
    rfcrepresentantelegal?: StringFieldUpdateOperationsInput | string
    rfcproveedor?: StringFieldUpdateOperationsInput | string
    caracter?: StringFieldUpdateOperationsInput | string
    modalidadpermiso?: StringFieldUpdateOperationsInput | string
    numpermiso?: StringFieldUpdateOperationsInput | string
    claveinstalacion?: StringFieldUpdateOperationsInput | string
    descripcioninstalacion?: StringFieldUpdateOperationsInput | string
    numeropozos?: IntFieldUpdateOperationsInput | number
    numerotanques?: IntFieldUpdateOperationsInput | number
    numeroductosentradasalida?: IntFieldUpdateOperationsInput | number
    numeroductostransportedistribucion?: IntFieldUpdateOperationsInput | number
    numerodispensarios?: IntFieldUpdateOperationsInput | number
    claveproducto?: StringFieldUpdateOperationsInput | string
    composdepropanoengaslp?: FloatFieldUpdateOperationsInput | number
    composdebutanoengaslp?: FloatFieldUpdateOperationsInput | number
    volumenexistenciasees?: FloatFieldUpdateOperationsInput | number
    fechayhoraestamedicionmes?: DateTimeFieldUpdateOperationsInput | Date | string
    numeroregistro?: IntFieldUpdateOperationsInput | number
    usuarioresponsable?: StringFieldUpdateOperationsInput | string
    tipoevento?: IntFieldUpdateOperationsInput | number
    descripcionevento?: StringFieldUpdateOperationsInput | string
    fecha_inicio?: DateTimeFieldUpdateOperationsInput | Date | string
    fecha_terminacion?: DateTimeFieldUpdateOperationsInput | Date | string
    user_id?: IntFieldUpdateOperationsInput | number
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    active?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use UsersCountOutputTypeDefaultArgs instead
     */
    export type UsersCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UsersCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProveedoresCountOutputTypeDefaultArgs instead
     */
    export type ProveedoresCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ClientsCountOutputTypeDefaultArgs instead
     */
    export type ClientsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ClientsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tipos_monedasCountOutputTypeDefaultArgs instead
     */
    export type Tipos_monedasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tipos_monedasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Condiciones_pagosCountOutputTypeDefaultArgs instead
     */
    export type Condiciones_pagosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Condiciones_pagosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Tipos_reporteCountOutputTypeDefaultArgs instead
     */
    export type Tipos_reporteCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Tipos_reporteCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>
    /**
     * @deprecated Use proveedoresDefaultArgs instead
     */
    export type proveedoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = proveedoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use clientsDefaultArgs instead
     */
    export type clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = clientsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use abastecimientosDefaultArgs instead
     */
    export type abastecimientosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = abastecimientosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipos_monedasDefaultArgs instead
     */
    export type tipos_monedasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipos_monedasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use condiciones_pagosDefaultArgs instead
     */
    export type condiciones_pagosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = condiciones_pagosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ventasDefaultArgs instead
     */
    export type ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ventasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use reportesDefaultArgs instead
     */
    export type reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = reportesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipos_reporteDefaultArgs instead
     */
    export type tipos_reporteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipos_reporteDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}